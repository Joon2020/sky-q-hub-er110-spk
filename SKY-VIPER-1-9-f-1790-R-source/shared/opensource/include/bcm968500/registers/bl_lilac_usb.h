/*
* <:copyright-BRCM:2012:DUAL/GPL:standard
* 
*    Copyright (c) 2012 Broadcom Corporation
*    All Rights Reserved
* 
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License, version 2, as published by
* the Free Software Foundation (the "GPL").
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* 
* A copy of the GPL is available at http://www.broadcom.com/licenses/GPLv2.php, or by
* writing to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* Boston, MA 02111-1307, USA.
* 
* :> 
*/

#ifndef __USB_H_INCLUDED
#define __USB_H_INCLUDED

/*  File automatically generated by Reggae at 09/08/2011  17:33:26   */

#include "stt_basic_defs.h"
#include "access_macros.h"
#include "packing.h"

/*****************************************************************************************/
/* dual port                                                                             */
/*****************************************************************************************/

/*****************************************************************************************/
/* Blocks offsets                                                                        */
/*****************************************************************************************/
#define CE_USB_BLOCK_OFFSET	( 0x18004000 )
/*****************************************************************************************/
/* Functions offsets and addresses                                                       */
/*****************************************************************************************/
#define CE_USB_BLOCK_EHCI0_CAP_REGS_OFFSET 	( 0x00000000 )
#define CE_USB_BLOCK_EHCI0_CAP_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI0_CAP_REGS_OFFSET )

#define CE_USB_BLOCK_EHCI0_OPT_REGS_OFFSET 	( 0x00000010 )
#define CE_USB_BLOCK_EHCI0_OPT_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI0_OPT_REGS_OFFSET )

#define CE_USB_BLOCK_EHCI0_SYN_REGS_OFFSET 	( 0x00000090 )
#define CE_USB_BLOCK_EHCI0_SYN_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI0_SYN_REGS_OFFSET )

#define CE_USB_BLOCK_OHCI0_OPT_REGS_OFFSET 	( 0x00000100 )
#define CE_USB_BLOCK_OHCI0_OPT_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_OHCI0_OPT_REGS_OFFSET )

#define CE_USB_BLOCK_OHCI0_SYN_REGS_OFFSET 	( 0x00000198 )
#define CE_USB_BLOCK_OHCI0_SYN_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_OHCI0_SYN_REGS_OFFSET )

#define CE_USB_BLOCK_EHCI1_CAP_REGS_OFFSET 	( 0x00000400 )
#define CE_USB_BLOCK_EHCI1_CAP_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI1_CAP_REGS_OFFSET )

#define CE_USB_BLOCK_EHCI1_OPT_REGS_OFFSET 	( 0x00000410 )
#define CE_USB_BLOCK_EHCI1_OPT_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI1_OPT_REGS_OFFSET )

#define CE_USB_BLOCK_EHCI1_SYN_REGS_OFFSET 	( 0x00000490 )
#define CE_USB_BLOCK_EHCI1_SYN_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_EHCI1_SYN_REGS_OFFSET )

#define CE_USB_BLOCK_OHCI1_OPT_REGS_OFFSET 	( 0x00000500 )
#define CE_USB_BLOCK_OHCI1_OPT_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_OHCI1_OPT_REGS_OFFSET )

#define CE_USB_BLOCK_OHCI1_SYN_REGS_OFFSET 	( 0x00000598 )
#define CE_USB_BLOCK_OHCI1_SYN_REGS_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_OHCI1_SYN_REGS_OFFSET )

#define CE_USB_BLOCK_REGFILE_OFFSET 	( 0x00000800 )
#define CE_USB_BLOCK_REGFILE_ADDRESS	( CE_USB_BLOCK_OFFSET + CE_USB_BLOCK_REGFILE_OFFSET )

/*   'i' is block index    */
/*   'j' is function index */
/*   'e' is function entry */
/*   'k' is register index */

/*****************************************************************************************/
/* OPMODE0                                                                               */
/* OPMODE0                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OPMODE0_R1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE0_R1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE0_OP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE0_OP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_OPMODE0_OFFSET ( 0x00000000 )

#define CE_USB_BLOCK_REGFILE_OPMODE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OPMODE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_OPMODE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OPMODE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OPMODE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OPMODE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OPMODE0 */
	stt_uint32 op	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OPMODE0_DTE ;


/*****************************************************************************************/
/* OPMODE1                                                                               */
/* OPMODE1                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OPMODE1_R1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE1_R1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE1_OP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OPMODE1_OP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_OPMODE1_OFFSET ( 0x00000004 )

#define CE_USB_BLOCK_REGFILE_OPMODE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OPMODE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_OPMODE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OPMODE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OPMODE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OPMODE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OPMODE1 */
	stt_uint32 op	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OPMODE1_DTE ;


/*****************************************************************************************/
/* WORDINTERFACE0                                                                        */
/* WORDINTERFACE0                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_R1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_R1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_WI_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_WI_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_OFFSET ( 0x00000008 )

#define CE_USB_BLOCK_REGFILE_WORDINTERFACE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_WORDINTERFACE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_WORDINTERFACE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_WORDINTERFACE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_WORDINTERFACE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_WORDINTERFACE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* WORDINTERFACE0 */
	stt_uint32 wi	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_WORDINTERFACE0_DTE ;


/*****************************************************************************************/
/* WORDINTERFACE1                                                                        */
/* WORDINTERFACE1                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_R1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_R1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_WI_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_WI_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_OFFSET ( 0x0000000C )

#define CE_USB_BLOCK_REGFILE_WORDINTERFACE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_WORDINTERFACE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_WORDINTERFACE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_WORDINTERFACE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_WORDINTERFACE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_WORDINTERFACE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* WORDINTERFACE1 */
	stt_uint32 wi	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_WORDINTERFACE1_DTE ;


/*****************************************************************************************/
/* DPPULLDOWN0                                                                           */
/* DPPULLDOWN0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_R1_DEFAULT_VALUE               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_R1_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_DPPD_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_DPPD_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_OFFSET ( 0x00000010 )

#define CE_USB_BLOCK_REGFILE_DPPULLDOWN0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DPPULLDOWN0_OFFSET )
#define BL_USB_BLOCK_REGFILE_DPPULLDOWN0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DPPULLDOWN0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DPPULLDOWN0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DPPULLDOWN0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DPPULLDOWN0 */
	stt_uint32 dppd	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DPPULLDOWN0_DTE ;


/*****************************************************************************************/
/* DPPULLDOWN1                                                                           */
/* DPPULLDOWN1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_R1_DEFAULT_VALUE               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_R1_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_DPPD_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_DPPD_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_OFFSET ( 0x00000014 )

#define CE_USB_BLOCK_REGFILE_DPPULLDOWN1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DPPULLDOWN1_OFFSET )
#define BL_USB_BLOCK_REGFILE_DPPULLDOWN1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DPPULLDOWN1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DPPULLDOWN1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DPPULLDOWN1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DPPULLDOWN1 */
	stt_uint32 dppd	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DPPULLDOWN1_DTE ;


/*****************************************************************************************/
/* TXBITSTUFFEN0                                                                         */
/* TXBITSTUFFEN0                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_TXBITSTUFFEN_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_TXBITSTUFFEN_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_OFFSET ( 0x00000018 )

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFEN0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFEN0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFEN0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFEN0 */
	stt_uint32 txbitstuffen	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXBITSTUFFEN0_DTE ;


/*****************************************************************************************/
/* TXBITSTUFFEN1                                                                         */
/* TXBITSTUFFEN1                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_TXBITSTUFFEN_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_TXBITSTUFFEN_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_OFFSET ( 0x0000001C )

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFEN1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFEN1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFEN1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFEN1 */
	stt_uint32 txbitstuffen	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXBITSTUFFEN1_DTE ;


/*****************************************************************************************/
/* TXBITSTUFFENH0                                                                        */
/* TXBITSTUFFENH0                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_R1_DEFAULT_VALUE                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_R1_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_TXBITSTUFFENH0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_TXBITSTUFFENH0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_OFFSET ( 0x00000020 )

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFENH0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFENH0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFENH0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1            	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFENH0 */
	stt_uint32 txbitstuffenh0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXBITSTUFFENH0_DTE ;


/*****************************************************************************************/
/* TXBITSTUFFENH1                                                                        */
/* TXBITSTUFFENH1                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_R1_DEFAULT_VALUE                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_R1_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_TXBITSTUFFENH1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_TXBITSTUFFENH1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_OFFSET ( 0x00000024 )

#define CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFENH1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXBITSTUFFENH1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXBITSTUFFENH1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1            	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFENH1 */
	stt_uint32 txbitstuffenh1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXBITSTUFFENH1_DTE ;


/*****************************************************************************************/
/* OTGDISABLE0                                                                           */
/*  OTGDISABLE0                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_OTGDISABLE0_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_OTGDISABLE0_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_OFFSET ( 0x00000028 )

#define CE_USB_BLOCK_REGFILE_OTGDISABLE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OTGDISABLE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_OTGDISABLE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OTGDISABLE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OTGDISABLE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OTGDISABLE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OTGDISABLE0 */
	stt_uint32 otgdisable0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OTGDISABLE0_DTE ;


/*****************************************************************************************/
/* DMPULLDOWN0                                                                           */
/* DMPULLDOWN0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_DMPULLDOWN0_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_DMPULLDOWN0_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_OFFSET ( 0x0000002C )

#define CE_USB_BLOCK_REGFILE_DMPULLDOWN0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DMPULLDOWN0_OFFSET )
#define BL_USB_BLOCK_REGFILE_DMPULLDOWN0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DMPULLDOWN0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DMPULLDOWN0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DMPULLDOWN0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DMPULLDOWN0 */
	stt_uint32 dmpulldown0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DMPULLDOWN0_DTE ;


/*****************************************************************************************/
/* VBUSVLDEXTSEL0                                                                        */
/* VBUSVLDEXTSEL0                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_R1_DEFAULT_VALUE                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_R1_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_VBUSVLDEXTSEL0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_VBUSVLDEXTSEL0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_OFFSET ( 0x00000030 )

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_OFFSET )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1            	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXTSEL0 */
	stt_uint32 vbusvldextsel0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_DTE ;


/*****************************************************************************************/
/* DMPULLDOWN1                                                                           */
/* DMPULLDOWN1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_DMPULLDOWN1_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_DMPULLDOWN1_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_OFFSET ( 0x00000034 )

#define CE_USB_BLOCK_REGFILE_DMPULLDOWN1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DMPULLDOWN1_OFFSET )
#define BL_USB_BLOCK_REGFILE_DMPULLDOWN1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DMPULLDOWN1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DMPULLDOWN1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DMPULLDOWN1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DMPULLDOWN1 */
	stt_uint32 dmpulldown1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DMPULLDOWN1_DTE ;


/*****************************************************************************************/
/* VBUSVLDEXT0                                                                           */
/* VBUSVLDEXT0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_VBUSVLDEXT0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_VBUSVLDEXT0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_OFFSET ( 0x00000038 )

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_OFFSET )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXT0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXT0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXT0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXT0 */
	stt_uint32 vbusvldext0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_VBUSVLDEXT0_DTE ;


/*****************************************************************************************/
/* VBUSVLDEXT1                                                                           */
/* VBUSVLDEXT1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_VBUSVLDEXT1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_VBUSVLDEXT1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_OFFSET ( 0x0000003C )

#define CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_OFFSET )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXT1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_VBUSVLDEXT1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_VBUSVLDEXT1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXT1 */
	stt_uint32 vbusvldext1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_VBUSVLDEXT1_DTE ;


/*****************************************************************************************/
/* DRVVBUS0                                                                              */
/* DRVVBUS0                                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DRVVBUS0_R1_DEFAULT_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DRVVBUS0_R1_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DRVVBUS0_DRVVBUS0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DRVVBUS0_DRVVBUS0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_DRVVBUS0_OFFSET ( 0x00000040 )

#define CE_USB_BLOCK_REGFILE_DRVVBUS0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DRVVBUS0_OFFSET )
#define BL_USB_BLOCK_REGFILE_DRVVBUS0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DRVVBUS0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DRVVBUS0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DRVVBUS0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DRVVBUS0 */
	stt_uint32 drvvbus0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DRVVBUS0_DTE ;


/*****************************************************************************************/
/* CHRGVBUS0                                                                             */
/* CHRGVBUS0                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_CHRGVBUS0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_CHRGVBUS0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_OFFSET ( 0x00000048 )

#define CE_USB_BLOCK_REGFILE_CHRGVBUS0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_CHRGVBUS0_OFFSET )
#define BL_USB_BLOCK_REGFILE_CHRGVBUS0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_CHRGVBUS0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_CHRGVBUS0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_CHRGVBUS0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CHRGVBUS0 */
	stt_uint32 chrgvbus0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_CHRGVBUS0_DTE ;


/*****************************************************************************************/
/* CHRGVBUS1                                                                             */
/* CHRGVBUS1                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_CHRGVBUS1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_CHRGVBUS1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_OFFSET ( 0x0000004C )

#define CE_USB_BLOCK_REGFILE_CHRGVBUS1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_CHRGVBUS1_OFFSET )
#define BL_USB_BLOCK_REGFILE_CHRGVBUS1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_CHRGVBUS1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_CHRGVBUS1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_CHRGVBUS1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CHRGVBUS1 */
	stt_uint32 chrgvbus1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_CHRGVBUS1_DTE ;


/*****************************************************************************************/
/* DISCHRGVBUS0                                                                          */
/* DISCHRGVBUS0                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_DISCHRGVBUS0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_DISCHRGVBUS0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_OFFSET ( 0x00000050 )

#define CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_OFFSET )
#define BL_USB_BLOCK_REGFILE_DISCHRGVBUS0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_DISCHRGVBUS0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_DISCHRGVBUS0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DISCHRGVBUS0 */
	stt_uint32 dischrgvbus0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DISCHRGVBUS0_DTE ;


/*****************************************************************************************/
/* IDPULLUP0                                                                             */
/* IDPULLUP0                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_IDPULLUP0_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDPULLUP0_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDPULLUP0_IDPULLUP0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDPULLUP0_IDPULLUP0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_IDPULLUP0_OFFSET ( 0x00000058 )

#define CE_USB_BLOCK_REGFILE_IDPULLUP0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_IDPULLUP0_OFFSET )
#define BL_USB_BLOCK_REGFILE_IDPULLUP0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_IDPULLUP0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_IDPULLUP0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_IDPULLUP0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IDPULLUP0 */
	stt_uint32 idpullup0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_IDPULLUP0_DTE ;


/*****************************************************************************************/
/* ATERESET                                                                              */
/* ATERESET                                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_ATERESET_R1_DEFAULT_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ATERESET_R1_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ATERESET_ATERESET_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ATERESET_ATERESET_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_ATERESET_OFFSET ( 0x0000005C )

#define CE_USB_BLOCK_REGFILE_ATERESET_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_ATERESET_OFFSET )
#define BL_USB_BLOCK_REGFILE_ATERESET_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_ATERESET_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_ATERESET_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_ATERESET_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ATERESET */
	stt_uint32 atereset	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_ATERESET_DTE ;


/*****************************************************************************************/
/* BISTEN                                                                                */
/* BISTEN                                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_BISTEN_R1_DEFAULT_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTEN_R1_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTEN_BISTEN_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTEN_BISTEN_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_BISTEN_OFFSET ( 0x00000080 )

#define CE_USB_BLOCK_REGFILE_BISTEN_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_BISTEN_OFFSET )
#define BL_USB_BLOCK_REGFILE_BISTEN_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_BISTEN_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_BISTEN_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_BISTEN_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTEN */
	stt_uint32 bisten	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_BISTEN_DTE ;


/*****************************************************************************************/
/* LSBIST                                                                                */
/*  LSBIST                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_LSBIST_R1_DEFAULT_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LSBIST_R1_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LSBIST_LSBIST_LSBIST_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LSBIST_LSBIST_LSBIST_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_LSBIST_OFFSET ( 0x00000084 )

#define CE_USB_BLOCK_REGFILE_LSBIST_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_LSBIST_OFFSET )
#define BL_USB_BLOCK_REGFILE_LSBIST_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_LSBIST_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_LSBIST_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_LSBIST_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LSBIST */
	stt_uint32 lsbist	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_LSBIST_DTE ;


/*****************************************************************************************/
/* FSBIST                                                                                */
/*  FSBIST                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_FSBIST_R1_DEFAULT_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_FSBIST_R1_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_FSBIST_FSBIST_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_FSBIST_FSBIST_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_FSBIST_OFFSET ( 0x00000088 )

#define CE_USB_BLOCK_REGFILE_FSBIST_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_FSBIST_OFFSET )
#define BL_USB_BLOCK_REGFILE_FSBIST_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_FSBIST_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_FSBIST_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_FSBIST_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* FSBIST */
	stt_uint32 fsbist	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_FSBIST_DTE ;


/*****************************************************************************************/
/* HSBIST                                                                                */
/*  HSBIST                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_HSBIST_R1_DEFAULT_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_HSBIST_R1_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_HSBIST_HSBIST_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_HSBIST_HSBIST_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_HSBIST_OFFSET ( 0x0000008C )

#define CE_USB_BLOCK_REGFILE_HSBIST_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_HSBIST_OFFSET )
#define BL_USB_BLOCK_REGFILE_HSBIST_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_HSBIST_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_HSBIST_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_HSBIST_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HSBIST */
	stt_uint32 hsbist	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_HSBIST_DTE ;


/*****************************************************************************************/
/* LOOPBACKENB0                                                                          */
/*  LOOPBACKENB0                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_LOOPBACKENB0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_LOOPBACKENB0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_OFFSET ( 0x00000090 )

#define CE_USB_BLOCK_REGFILE_LOOPBACKENB0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_LOOPBACKENB0_OFFSET )
#define BL_USB_BLOCK_REGFILE_LOOPBACKENB0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_LOOPBACKENB0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_LOOPBACKENB0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_LOOPBACKENB0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LOOPBACKENB0 */
	stt_uint32 loopbackenb0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_LOOPBACKENB0_DTE ;


/*****************************************************************************************/
/* LOOPBACKENB1                                                                          */
/*  LOOPBACKENB1                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_LOOPBACKENB1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_LOOPBACKENB1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_OFFSET ( 0x00000094 )

#define CE_USB_BLOCK_REGFILE_LOOPBACKENB1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_LOOPBACKENB1_OFFSET )
#define BL_USB_BLOCK_REGFILE_LOOPBACKENB1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_LOOPBACKENB1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_LOOPBACKENB1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_LOOPBACKENB1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LOOPBACKENB1 */
	stt_uint32 loopbackenb1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_LOOPBACKENB1_DTE ;


/*****************************************************************************************/
/* REFCLKDIV                                                                             */
/*  REFCLKDIV                                                                            */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_REFCLKDIV_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKDIV_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKDIV_REFCLKDIV_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKDIV_REFCLKDIV_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_REFCLKDIV_OFFSET ( 0x00000098 )

#define CE_USB_BLOCK_REGFILE_REFCLKDIV_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_REFCLKDIV_OFFSET )
#define BL_USB_BLOCK_REGFILE_REFCLKDIV_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_REFCLKDIV_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_REFCLKDIV_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_REFCLKDIV_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REFCLKDIV */
	stt_uint32 refclkdiv	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_REFCLKDIV_DTE ;


/*****************************************************************************************/
/* REFCLKSEL                                                                             */
/* REFCLKSEL                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_REFCLKSEL_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKSEL_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKSEL_REFCLKSEL_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_REFCLKSEL_REFCLKSEL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_REFCLKSEL_OFFSET ( 0x0000009C )

#define CE_USB_BLOCK_REGFILE_REFCLKSEL_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_REFCLKSEL_OFFSET )
#define BL_USB_BLOCK_REGFILE_REFCLKSEL_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_REFCLKSEL_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_REFCLKSEL_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_REFCLKSEL_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REFCLKSEL */
	stt_uint32 refclksel	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_REFCLKSEL_DTE ;


/*****************************************************************************************/
/* COMPDISTUNE0                                                                          */
/* COMPDISTUNE0                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_COMPDISTUNE0_DEFAULT_VALUE             ( 0x4 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_COMPDISTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x4 )


#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_OFFSET ( 0x000000A0 )

#define CE_USB_BLOCK_REGFILE_COMPDISTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_COMPDISTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_COMPDISTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_COMPDISTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_COMPDISTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_COMPDISTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMPDISTUNE0 */
	stt_uint32 compdistune0	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_COMPDISTUNE0_DTE ;


/*****************************************************************************************/
/* COMPDISTUNE1                                                                          */
/* COMPDISTUNE1                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_COMPDISTUNE1_DEFAULT_VALUE             ( 0x4 )
#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_COMPDISTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x4 )


#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_OFFSET ( 0x000000A4 )

#define CE_USB_BLOCK_REGFILE_COMPDISTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_COMPDISTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_COMPDISTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_COMPDISTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_COMPDISTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_COMPDISTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMPDISTUNE1 */
	stt_uint32 compdistune1	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_COMPDISTUNE1_DTE ;


/*****************************************************************************************/
/* OTGTUNE                                                                               */
/* OTGTUNE                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OTGTUNE_R1_DEFAULT_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OTGTUNE_R1_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OTGTUNE_OTGTUNE_DEFAULT_VALUE             ( 0x4 )
#define CE_USB_BLOCK_REGFILE_OTGTUNE_OTGTUNE_DEFAULT_VALUE_RESET_VALUE ( 0x4 )


#define CE_USB_BLOCK_REGFILE_OTGTUNE_OFFSET ( 0x000000A8 )

#define CE_USB_BLOCK_REGFILE_OTGTUNE_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OTGTUNE_OFFSET )
#define BL_USB_BLOCK_REGFILE_OTGTUNE_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OTGTUNE_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OTGTUNE_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OTGTUNE_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1     	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OTGTUNE */
	stt_uint32 otgtune	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OTGTUNE_DTE ;


/*****************************************************************************************/
/* SQRXTUNE0                                                                             */
/* SQRXTUNE0                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_SQRXTUNE0_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_SQRXTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_OFFSET ( 0x000000AC )

#define CE_USB_BLOCK_REGFILE_SQRXTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SQRXTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_SQRXTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SQRXTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SQRXTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SQRXTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SQRXTUNE0 */
	stt_uint32 sqrxtune0	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SQRXTUNE0_DTE ;


/*****************************************************************************************/
/* SQRXTUNE1                                                                             */
/* SQRXTUNE1                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_SQRXTUNE1_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_SQRXTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_OFFSET ( 0x000000B0 )

#define CE_USB_BLOCK_REGFILE_SQRXTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SQRXTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_SQRXTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SQRXTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SQRXTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SQRXTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SQRXTUNE1 */
	stt_uint32 sqrxtune1	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SQRXTUNE1_DTE ;


/*****************************************************************************************/
/* TXFSLSTUNE0                                                                           */
/* TXFSLSTUNE0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_TXFSLSTUNE0_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_TXFSLSTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_OFFSET ( 0x000000B4 )

#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXFSLSTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXFSLSTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXFSLSTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXFSLSTUNE0 */
	stt_uint32 txfslstune0	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXFSLSTUNE0_DTE ;


/*****************************************************************************************/
/* TXFSLSTUNE1                                                                           */
/* TXFSLSTUNE1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_TXFSLSTUNE1_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_TXFSLSTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_OFFSET ( 0x000000B8 )

#define CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXFSLSTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXFSLSTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXFSLSTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXFSLSTUNE1 */
	stt_uint32 txfslstune1	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXFSLSTUNE1_DTE ;


/*****************************************************************************************/
/* TXPREEMPHASISTUNE0                                                                    */
/* TXPREEMPHASISTUNE0                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_TXPREEMPHASISTUNE0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_TXPREEMPHASISTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_OFFSET ( 0x000000BC )

#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXPREEMPHASISTUNE0 */
	stt_uint32 txpreemphasistune0	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_DTE ;


/*****************************************************************************************/
/* TXPREEMPHASISTUNE1                                                                    */
/* TXPREEMPHASISTUNE1                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_TXPREEMPHASISTUNE1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_TXPREEMPHASISTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_OFFSET ( 0x000000C0 )

#define CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXPREEMPHASISTUNE1 */
	stt_uint32 txpreemphasistune1	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_DTE ;


/*****************************************************************************************/
/* TXRISETUNE0                                                                           */
/* TXRISETUNE0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_TXRISETUNE0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_TXRISETUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_OFFSET ( 0x000000C4 )

#define CE_USB_BLOCK_REGFILE_TXRISETUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXRISETUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXRISETUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXRISETUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXRISETUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXRISETUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXRISETUNE0 */
	stt_uint32 txrisetune0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXRISETUNE0_DTE ;


/*****************************************************************************************/
/* TXRISETUNE1                                                                           */
/* TXRISETUNE1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_TXRISETUNE1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_TXRISETUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_OFFSET ( 0x000000C8 )

#define CE_USB_BLOCK_REGFILE_TXRISETUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXRISETUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXRISETUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXRISETUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXRISETUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXRISETUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXRISETUNE1 */
	stt_uint32 txrisetune1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXRISETUNE1_DTE ;


/*****************************************************************************************/
/* TXVREFTUNE0                                                                           */
/* TXVREFTUNE0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_TXVREFTUNE0_DEFAULT_VALUE             ( 0x8 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_TXVREFTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x8 )


#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_OFFSET ( 0x000000CC )

#define CE_USB_BLOCK_REGFILE_TXVREFTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXVREFTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXVREFTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXVREFTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXVREFTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXVREFTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXVREFTUNE0 */
	stt_uint32 txvreftune0	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXVREFTUNE0_DTE ;


/*****************************************************************************************/
/* TXVREFTUNE1                                                                           */
/* TXVREFTUNE1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_TXVREFTUNE1_DEFAULT_VALUE             ( 0x8 )
#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_TXVREFTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x8 )


#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_OFFSET ( 0x000000D0 )

#define CE_USB_BLOCK_REGFILE_TXVREFTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXVREFTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXVREFTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXVREFTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXVREFTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXVREFTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXVREFTUNE1 */
	stt_uint32 txvreftune1	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXVREFTUNE1_DTE ;


/*****************************************************************************************/
/* TXHSXVTUNE0                                                                           */
/* TXHSXVTUNE0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_TXHSXVTUNE0_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_TXHSXVTUNE0_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_OFFSET ( 0x000000D4 )

#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXHSXVTUNE0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXHSXVTUNE0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXHSXVTUNE0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXHSXVTUNE0 */
	stt_uint32 txhsxvtune0	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXHSXVTUNE0_DTE ;


/*****************************************************************************************/
/* TXHSXVTUNE1                                                                           */
/* TXHSXVTUNE1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_TXHSXVTUNE1_DEFAULT_VALUE             ( 0x3 )
#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_TXHSXVTUNE1_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_OFFSET ( 0x000000D8 )

#define CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TXHSXVTUNE1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TXHSXVTUNE1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TXHSXVTUNE1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXHSXVTUNE1 */
	stt_uint32 txhsxvtune1	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TXHSXVTUNE1_DTE ;


/*****************************************************************************************/
/* COMMONONN                                                                             */
/* COMMONONN                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_COMMONONN_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMMONONN_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMMONONN_COMMONONN_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_COMMONONN_COMMONONN_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_COMMONONN_OFFSET ( 0x000000DC )

#define CE_USB_BLOCK_REGFILE_COMMONONN_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_COMMONONN_OFFSET )
#define BL_USB_BLOCK_REGFILE_COMMONONN_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_COMMONONN_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_COMMONONN_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_COMMONONN_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMMONONN */
	stt_uint32 commononn	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_COMMONONN_DTE ;


/*****************************************************************************************/
/* VBUSVALID0                                                                            */
/* VBUSVALID0                                                                            */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_VBUSVALID0_R1_DEFAULT_VALUE                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVALID0_R1_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVALID0_VBUSVALID0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VBUSVALID0_VBUSVALID0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_VBUSVALID0_OFFSET ( 0x000000E0 )

#define CE_USB_BLOCK_REGFILE_VBUSVALID0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_VBUSVALID0_OFFSET )
#define BL_USB_BLOCK_REGFILE_VBUSVALID0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_VBUSVALID0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_VBUSVALID0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_VBUSVALID0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1        	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVALID0 */
	stt_uint32 vbusvalid0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_VBUSVALID0_DTE ;


/*****************************************************************************************/
/* IDDIG0                                                                                */
/* IDDIG0                                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_IDDIG0_R1_DEFAULT_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDDIG0_R1_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDDIG0_IDDIG0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_IDDIG0_IDDIG0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_IDDIG0_OFFSET ( 0x000000E8 )

#define CE_USB_BLOCK_REGFILE_IDDIG0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_IDDIG0_OFFSET )
#define BL_USB_BLOCK_REGFILE_IDDIG0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_IDDIG0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_IDDIG0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_IDDIG0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IDDIG0 */
	stt_uint32 iddig0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_IDDIG0_DTE ;


/*****************************************************************************************/
/* TESTDATAIN0                                                                           */
/* TESTDATAIN0                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_TESTDATAIN0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_TESTDATAIN0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_OFFSET ( 0x000000EC )

#define CE_USB_BLOCK_REGFILE_TESTDATAIN0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TESTDATAIN0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TESTDATAIN0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TESTDATAIN0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TESTDATAIN0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TESTDATAIN0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TESTDATAIN0 */
	stt_uint32 testdatain0	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TESTDATAIN0_DTE ;


/*****************************************************************************************/
/* AVALID0                                                                               */
/* AVALID0                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_AVALID0_R1_DEFAULT_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_AVALID0_R1_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_AVALID0_AVALID0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_AVALID0_AVALID0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_AVALID0_OFFSET ( 0x000000F0 )

#define CE_USB_BLOCK_REGFILE_AVALID0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_AVALID0_OFFSET )
#define BL_USB_BLOCK_REGFILE_AVALID0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_AVALID0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_AVALID0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_AVALID0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AVALID0 */
	stt_uint32 avalid0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_AVALID0_DTE ;


/*****************************************************************************************/
/* TESTDATAIN1                                                                           */
/* TESTDATAIN1                                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_R1_DEFAULT_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_R1_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_TESTDATAIN1_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_TESTDATAIN1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_OFFSET ( 0x000000F4 )

#define CE_USB_BLOCK_REGFILE_TESTDATAIN1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TESTDATAIN1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TESTDATAIN1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TESTDATAIN1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TESTDATAIN1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TESTDATAIN1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1         	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TESTDATAIN1 */
	stt_uint32 testdatain1	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TESTDATAIN1_DTE ;


/*****************************************************************************************/
/* BVALID0                                                                               */
/* BVALID0                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_BVALID0_R1_DEFAULT_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BVALID0_R1_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BVALID0_BVALID0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BVALID0_BVALID0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_BVALID0_OFFSET ( 0x000000F8 )

#define CE_USB_BLOCK_REGFILE_BVALID0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_BVALID0_OFFSET )
#define BL_USB_BLOCK_REGFILE_BVALID0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_BVALID0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_BVALID0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_BVALID0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BVALID0 */
	stt_uint32 bvalid0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_BVALID0_DTE ;


/*****************************************************************************************/
/* VATESTENB                                                                             */
/* VATESTENB                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_VATESTENB_R1_RESERVED_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VATESTENB_R1_RESERVED_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VATESTENB_VATESTENB_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_VATESTENB_VATESTENB_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_VATESTENB_OFFSET ( 0x000000FC )

#define CE_USB_BLOCK_REGFILE_VATESTENB_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_VATESTENB_OFFSET )
#define BL_USB_BLOCK_REGFILE_VATESTENB_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_VATESTENB_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_VATESTENB_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_VATESTENB_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VATESTENB */
	stt_uint32 vatestenb	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_VATESTENB_DTE ;


/*****************************************************************************************/
/* SESSEND0                                                                              */
/* SESSEND0                                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SESSEND0_R1_DEFAULT_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SESSEND0_R1_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SESSEND0_SESSEND0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SESSEND0_SESSEND0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_SESSEND0_OFFSET ( 0x00000100 )

#define CE_USB_BLOCK_REGFILE_SESSEND0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SESSEND0_OFFSET )
#define BL_USB_BLOCK_REGFILE_SESSEND0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SESSEND0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SESSEND0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SESSEND0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SESSEND0 */
	stt_uint32 sessend0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SESSEND0_DTE ;


/*****************************************************************************************/
/* SIDDQ                                                                                 */
/* SIDDQ                                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SIDDQ_R1_DEFAULT_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SIDDQ_R1_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SIDDQ_SIDDQ_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SIDDQ_SIDDQ_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_SIDDQ_OFFSET ( 0x00000104 )

#define CE_USB_BLOCK_REGFILE_SIDDQ_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SIDDQ_OFFSET )
#define BL_USB_BLOCK_REGFILE_SIDDQ_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SIDDQ_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SIDDQ_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SIDDQ_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SIDDQ */
	stt_uint32 siddq	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SIDDQ_DTE ;


/*****************************************************************************************/
/* BISTERROR                                                                             */
/* BISTERROR                                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_BISTERROR_R1_DEFAULT_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTERROR_R1_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTERROR_BISTERROR_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTERROR_BISTERROR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_BISTERROR_OFFSET ( 0x00000108 )

#define CE_USB_BLOCK_REGFILE_BISTERROR_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_BISTERROR_OFFSET )
#define BL_USB_BLOCK_REGFILE_BISTERROR_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_BISTERROR_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_BISTERROR_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_BISTERROR_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTERROR */
	stt_uint32 bisterror	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_BISTERROR_DTE ;


/*****************************************************************************************/
/* BISTDONE                                                                              */
/* BISTDONE                                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_BISTDONE_R1_DEFAULT_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTDONE_R1_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTDONE_BISTDONE_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_BISTDONE_BISTDONE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_BISTDONE_OFFSET ( 0x0000010C )

#define CE_USB_BLOCK_REGFILE_BISTDONE_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_BISTDONE_OFFSET )
#define BL_USB_BLOCK_REGFILE_BISTDONE_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_BISTDONE_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_BISTDONE_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_BISTDONE_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTDONE */
	stt_uint32 bistdone	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_BISTDONE_DTE ;


/*****************************************************************************************/
/* usb0_ss_ena_incr16_i                                                                  */
/* usb0_ss_ena_incr16_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_USB0_SS_ENA_INCR16_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_USB0_SS_ENA_INCR16_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_OFFSET ( 0x00000110 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr16_i */
	stt_uint32 usb0_ss_ena_incr16_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_ena_incr16_i                                                                  */
/* usb1_ss_ena_incr16_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_USB1_SS_ENA_INCR16_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_USB1_SS_ENA_INCR16_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_OFFSET ( 0x00000114 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr16_i */
	stt_uint32 usb1_ss_ena_incr16_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_ena_incr4_i                                                                   */
/* usb0_ss_ena_incr4_i                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_USB0_SS_ENA_INCR4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_USB0_SS_ENA_INCR4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_OFFSET ( 0x00000118 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr4_i */
	stt_uint32 usb0_ss_ena_incr4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_ena_incr4_i                                                                   */
/* usb1_ss_ena_incr4_i                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_USB1_SS_ENA_INCR4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_USB1_SS_ENA_INCR4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_OFFSET ( 0x0000011C )

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr4_i */
	stt_uint32 usb1_ss_ena_incr4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_ena_incrx_align_i                                                             */
/* usb0_ss_ena_incrx_align_i                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_USB0_SS_ENA_INCRX_ALIGN_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_USB0_SS_ENA_INCRX_ALIGN_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_OFFSET ( 0x00000120 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incrx_align_i */
	stt_uint32 usb0_ss_ena_incrx_align_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_ena_incrx_align_i                                                             */
/* usb1_ss_ena_incrx_align_i                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_USB1_SS_ENA_INCRX_ALIGN_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_USB1_SS_ENA_INCRX_ALIGN_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_OFFSET ( 0x00000124 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incrx_align_i */
	stt_uint32 usb1_ss_ena_incrx_align_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_host_i                                                              */
/* usb0_ss_fladj_val_host_i                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_USB0_SS_FLADJ_VAL_HOST_I_DEFAULT_VALUE             ( 0x20 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_USB0_SS_FLADJ_VAL_HOST_I_DEFAULT_VALUE_RESET_VALUE ( 0x20 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_OFFSET ( 0x00000130 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_host_i */
	stt_uint32 usb0_ss_fladj_val_host_i	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_host_i                                                              */
/* usb1_ss_fladj_val_host_i                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_USB1_SS_FLADJ_VAL_HOST_I_DEFAULT_VALUE             ( 0x20 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_USB1_SS_FLADJ_VAL_HOST_I_DEFAULT_VALUE_RESET_VALUE ( 0x20 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_OFFSET ( 0x00000134 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_host_i */
	stt_uint32 usb1_ss_fladj_val_host_i	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_0_i                                                                 */
/* usb0_ss_fladj_val_0_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_USB0_SS_FLADJ_VAL_0_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_USB0_SS_FLADJ_VAL_0_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_OFFSET ( 0x00000138 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_0_i */
	stt_uint32 usb0_ss_fladj_val_0_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_1_i                                                                 */
/* usb0_ss_fladj_val_1_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_USB0_SS_FLADJ_VAL_1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_USB0_SS_FLADJ_VAL_1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_OFFSET ( 0x0000013C )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_1_i */
	stt_uint32 usb0_ss_fladj_val_1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_2_i                                                                 */
/* usb0_ss_fladj_val_2_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_USB0_SS_FLADJ_VAL_2_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_USB0_SS_FLADJ_VAL_2_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_OFFSET ( 0x00000140 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_2_i */
	stt_uint32 usb0_ss_fladj_val_2_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_3_i                                                                 */
/* usb0_ss_fladj_val_3_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_USB0_SS_FLADJ_VAL_3_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_USB0_SS_FLADJ_VAL_3_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_OFFSET ( 0x00000144 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_3_i */
	stt_uint32 usb0_ss_fladj_val_3_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_4_i                                                                 */
/* usb0_ss_fladj_val_4_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_USB0_SS_FLADJ_VAL_4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_USB0_SS_FLADJ_VAL_4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_OFFSET ( 0x00000148 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_4_i */
	stt_uint32 usb0_ss_fladj_val_4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_fladj_val_5_i                                                                 */
/* usb0_ss_fladj_val_5_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_USB0_SS_FLADJ_VAL_5_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_USB0_SS_FLADJ_VAL_5_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_OFFSET ( 0x0000014C )

#define CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_5_i */
	stt_uint32 usb0_ss_fladj_val_5_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_0_i                                                                 */
/* usb1_ss_fladj_val_0_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_USB1_SS_FLADJ_VAL_0_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_USB1_SS_FLADJ_VAL_0_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_OFFSET ( 0x00000150 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_0_i */
	stt_uint32 usb1_ss_fladj_val_0_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_1_i                                                                 */
/* usb1_ss_fladj_val_1_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_USB1_SS_FLADJ_VAL_1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_USB1_SS_FLADJ_VAL_1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_OFFSET ( 0x00000154 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_1_i */
	stt_uint32 usb1_ss_fladj_val_1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_2_i                                                                 */
/* usb1_ss_fladj_val_2_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_USB1_SS_FLADJ_VAL_2_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_USB1_SS_FLADJ_VAL_2_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_OFFSET ( 0x00000158 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_2_i */
	stt_uint32 usb1_ss_fladj_val_2_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_3_i                                                                 */
/* usb1_ss_fladj_val_3_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_USB1_SS_FLADJ_VAL_3_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_USB1_SS_FLADJ_VAL_3_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_OFFSET ( 0x0000015C )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_3_i */
	stt_uint32 usb1_ss_fladj_val_3_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_4_i                                                                 */
/* usb1_ss_fladj_val_4_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_USB1_SS_FLADJ_VAL_4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_USB1_SS_FLADJ_VAL_4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_OFFSET ( 0x00000160 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_4_i */
	stt_uint32 usb1_ss_fladj_val_4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_fladj_val_5_i                                                                 */
/* usb1_ss_fladj_val_5_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_USB1_SS_FLADJ_VAL_5_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_USB1_SS_FLADJ_VAL_5_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_OFFSET ( 0x00000164 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_5_i */
	stt_uint32 usb1_ss_fladj_val_5_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_utmi_backward_enb_i                                                           */
/* usb0_ss_utmi_backward_enb_i                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_R1_DEFAULT_VALUE                                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_R1_DEFAULT_VALUE_RESET_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_USB0_SS_UTMI_BACKWARD_ENB_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_USB0_SS_UTMI_BACKWARD_ENB_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_OFFSET ( 0x00000168 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_utmi_backward_enb_i */
	stt_uint32 usb0_ss_utmi_backward_enb_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_utmi_backward_enb_i                                                           */
/* usb1_ss_utmi_backward_enb_i                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_R1_DEFAULT_VALUE                                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_R1_DEFAULT_VALUE_RESET_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_USB1_SS_UTMI_BACKWARD_ENB_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_USB1_SS_UTMI_BACKWARD_ENB_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_OFFSET ( 0x0000016C )

#define CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_utmi_backward_enb_i */
	stt_uint32 usb1_ss_utmi_backward_enb_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_resume_utmi_pls_dis_i                                                         */
/* usb0_ss_resume_utmi_pls_dis_i                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_R1_DEFAULT_VALUE                                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_R1_DEFAULT_VALUE_RESET_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_USB0_SS_RESUME_UTMI_PLS_DIS_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_USB0_SS_RESUME_UTMI_PLS_DIS_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_OFFSET ( 0x00000170 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                           	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_resume_utmi_pls_dis_i */
	stt_uint32 usb0_ss_resume_utmi_pls_dis_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_resume_utmi_pls_dis_i                                                         */
/* usb1_ss_resume_utmi_pls_dis_i                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_R1_DEFAULT_VALUE                                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_R1_DEFAULT_VALUE_RESET_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_USB1_SS_RESUME_UTMI_PLS_DIS_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_USB1_SS_RESUME_UTMI_PLS_DIS_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_OFFSET ( 0x00000174 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                           	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_resume_utmi_pls_dis_i */
	stt_uint32 usb1_ss_resume_utmi_pls_dis_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_autoppd_on_overcur_en_i                                                       */
/* usb0_ss_autoppd_on_overcur_en_i                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_R1_DEFAULT_VALUE                                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_R1_DEFAULT_VALUE_RESET_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_OFFSET ( 0x00000178 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_autoppd_on_overcur_en_i */
	stt_uint32 usb0_ss_autoppd_on_overcur_en_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_autoppd_on_overcur_en_i                                                       */
/* usb1_ss_autoppd_on_overcur_en_i                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_R1_DEFAULT_VALUE                                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_R1_DEFAULT_VALUE_RESET_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_OFFSET ( 0x0000017C )

#define CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_autoppd_on_overcur_en_i */
	stt_uint32 usb1_ss_autoppd_on_overcur_en_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_DTE ;


/*****************************************************************************************/
/* ohci_0_cntsel_i_n                                                                     */
/* ohci_0_cntsel_i_n                                                                     */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_OHCI_0_CNTSEL_I_N_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_OHCI_0_CNTSEL_I_N_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_OFFSET ( 0x00000180 )

#define CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_OFFSET )
#define BL_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci_0_cntsel_i_n */
	stt_uint32 ohci_0_cntsel_i_n	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_DTE ;


/*****************************************************************************************/
/* ohci_1_cntsel_i_n                                                                     */
/* ohci_1_cntsel_i_n                                                                     */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_OHCI_1_CNTSEL_I_N_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_OHCI_1_CNTSEL_I_N_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_OFFSET ( 0x00000184 )

#define CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_OFFSET )
#define BL_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci_1_cntsel_i_n */
	stt_uint32 ohci_1_cntsel_i_n	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_DTE ;


/*****************************************************************************************/
/* usb0_app_start_clk_i                                                                  */
/* usb0_app_start_clk_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_USB0_APP_START_CLK_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_USB0_APP_START_CLK_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_OFFSET ( 0x00000188 )

#define CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_app_start_clk_i */
	stt_uint32 usb0_app_start_clk_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_DTE ;


/*****************************************************************************************/
/* usb1_app_start_clk_i                                                                  */
/* usb1_app_start_clk_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_USB1_APP_START_CLK_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_USB1_APP_START_CLK_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_OFFSET ( 0x0000018C )

#define CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_app_start_clk_i */
	stt_uint32 usb1_app_start_clk_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_DTE ;


/*****************************************************************************************/
/* usb0_ohci_susp_lgcy_i                                                                 */
/* usb0_ohci_susp_lgcy_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_USB0_OHCI_SUSP_LGCY_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_USB0_OHCI_SUSP_LGCY_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_OFFSET ( 0x00000190 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_susp_lgcy_i */
	stt_uint32 usb0_ohci_susp_lgcy_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_DTE ;


/*****************************************************************************************/
/* usb1_ohci_susp_lgcy_i                                                                 */
/* usb1_ohci_susp_lgcy_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_USB1_OHCI_SUSP_LGCY_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_USB1_OHCI_SUSP_LGCY_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_OFFSET ( 0x00000194 )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_susp_lgcy_i */
	stt_uint32 usb1_ohci_susp_lgcy_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_7_i                                                                  */
/* usb0_phy_vstatus_7_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_USB1_OHCI_SUSP_LGCY_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_USB1_OHCI_SUSP_LGCY_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_OFFSET ( 0x00000198 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_susp_lgcy_i */
	stt_uint32 usb1_ohci_susp_lgcy_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_6_i                                                                  */
/* usb0_phy_vstatus_6_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_USB0_PHY_VSTATUS_6_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_USB0_PHY_VSTATUS_6_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_OFFSET ( 0x0000019C )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_6_i */
	stt_uint32 usb0_phy_vstatus_6_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_5_i                                                                  */
/* usb0_phy_vstatus_5_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_USB0_PHY_VSTATUS_5_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_USB0_PHY_VSTATUS_5_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_OFFSET ( 0x000001A0 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_5_i */
	stt_uint32 usb0_phy_vstatus_5_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_4_i                                                                  */
/* usb0_phy_vstatus_4_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_USB0_PHY_VSTATUS_4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_USB0_PHY_VSTATUS_4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_OFFSET ( 0x000001A4 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_4_i */
	stt_uint32 usb0_phy_vstatus_4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_3_i                                                                  */
/* usb0_phy_vstatus_3_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_USB0_PHY_VSTATUS_3_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_USB0_PHY_VSTATUS_3_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_OFFSET ( 0x000001A8 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_3_i */
	stt_uint32 usb0_phy_vstatus_3_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_2_i                                                                  */
/* usb0_phy_vstatus_2_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_USB0_PHY_VSTATUS_2_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_USB0_PHY_VSTATUS_2_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_OFFSET ( 0x000001AC )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_2_i */
	stt_uint32 usb0_phy_vstatus_2_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_1_i                                                                  */
/* usb0_phy_vstatus_1_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_USB0_PHY_VSTATUS_1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_USB0_PHY_VSTATUS_1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_OFFSET ( 0x000001B0 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_1_i */
	stt_uint32 usb0_phy_vstatus_1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_DTE ;


/*****************************************************************************************/
/* usb0_phy_vstatus_0_i                                                                  */
/* usb0_phy_vstatus_0_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_USB0_PHY_VSTATUS_0_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_USB0_PHY_VSTATUS_0_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_OFFSET ( 0x000001B4 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_0_i */
	stt_uint32 usb0_phy_vstatus_0_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_7_i                                                                  */
/* usb1_phy_vstatus_7_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_USB1_PHY_VSTATUS_7_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_USB1_PHY_VSTATUS_7_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_OFFSET ( 0x000001B8 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_7_i */
	stt_uint32 usb1_phy_vstatus_7_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_6_i                                                                  */
/* usb1_phy_vstatus_6_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_USB1_PHY_VSTATUS_6_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_USB1_PHY_VSTATUS_6_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_OFFSET ( 0x000001BC )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_6_i */
	stt_uint32 usb1_phy_vstatus_6_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_5_i                                                                  */
/* usb1_phy_vstatus_5_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_USB1_PHY_VSTATUS_5_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_USB1_PHY_VSTATUS_5_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_OFFSET ( 0x000001C0 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_5_i */
	stt_uint32 usb1_phy_vstatus_5_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_4_i                                                                  */
/* usb1_phy_vstatus_4_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_USB1_PHY_VSTATUS_4_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_USB1_PHY_VSTATUS_4_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_OFFSET ( 0x000001C4 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_4_i */
	stt_uint32 usb1_phy_vstatus_4_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_3_i                                                                  */
/* usb1_phy_vstatus_3_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_USB1_PHY_VSTATUS_3_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_USB1_PHY_VSTATUS_3_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_OFFSET ( 0x000001C8 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_3_i */
	stt_uint32 usb1_phy_vstatus_3_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_2_i                                                                  */
/* usb1_phy_vstatus_2_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_USB1_PHY_VSTATUS_2_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_USB1_PHY_VSTATUS_2_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_OFFSET ( 0x000001CC )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_2_i */
	stt_uint32 usb1_phy_vstatus_2_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_1_i                                                                  */
/* usb1_phy_vstatus_1_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_USB1_PHY_VSTATUS_1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_USB1_PHY_VSTATUS_1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_OFFSET ( 0x000001D0 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_1_i */
	stt_uint32 usb1_phy_vstatus_1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_DTE ;


/*****************************************************************************************/
/* usb1_phy_vstatus_0_i                                                                  */
/* usb1_phy_vstatus_0_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_USB1_PHY_VSTATUS_0_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_USB1_PHY_VSTATUS_0_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_OFFSET ( 0x000001D4 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_0_i */
	stt_uint32 usb1_phy_vstatus_0_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_DTE ;


/*****************************************************************************************/
/* usb0_ohci_sof_counter                                                                 */
/* usb0_ohci_sof counter                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_R1_DEFAULT_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_R1_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_USB0_OHCI_SOF_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_USB0_OHCI_SOF_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_OFFSET ( 0x000001D8 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1           	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_sof */
	stt_uint32 usb0_ohci_sof	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_DTE ;


/*****************************************************************************************/
/* usb1_ohci_sof_counter                                                                 */
/* usb1_ohci_sof counter                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_R1_DEFAULT_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_R1_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_USB1_OHCI_SOF_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_USB1_OHCI_SOF_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_OFFSET ( 0x000001DC )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1           	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_sof */
	stt_uint32 usb1_ohci_sof	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_DTE ;


/*****************************************************************************************/
/* usb0_sys_interrupt_i                                                                  */
/* usb0_sys_interrupt_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_USB0_SYS_INTERRUPT_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_USB0_SYS_INTERRUPT_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_OFFSET ( 0x000001E0 )

#define CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_sys_interrupt_i */
	stt_uint32 usb0_sys_interrupt_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_DTE ;


/*****************************************************************************************/
/* usb1_sys_interrupt_i                                                                  */
/* usb1_sys_interrupt_i                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_USB1_SYS_INTERRUPT_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_USB1_SYS_INTERRUPT_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_OFFSET ( 0x000001E4 )

#define CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_sys_interrupt_i */
	stt_uint32 usb1_sys_interrupt_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_DTE ;


/*****************************************************************************************/
/* usb0_ohci_0_app_io_hit_i                                                              */
/* usb0_ohci_0_app_io_hit_i                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_USB0_OHCI_0_APP_IO_HIT_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_USB0_OHCI_0_APP_IO_HIT_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_OFFSET ( 0x000001E8 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_io_hit_i */
	stt_uint32 usb0_ohci_0_app_io_hit_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_DTE ;


/*****************************************************************************************/
/* usb1_ohci_0_app_io_hit_i                                                              */
/* usb1_ohci_0_app_io_hit_i                                                              */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_USB1_OHCI_0_APP_IO_HIT_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_USB1_OHCI_0_APP_IO_HIT_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_OFFSET ( 0x000001EC )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_io_hit_i */
	stt_uint32 usb1_ohci_0_app_io_hit_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_DTE ;


/*****************************************************************************************/
/* usb0_ohci_0_app_irq1_i                                                                */
/* usb0_ohci_0_app_irq1_i                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_R1_DEFAULT_VALUE                                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_R1_DEFAULT_VALUE_RESET_VALUE                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_USB0_OHCI_0_APP_IRQ1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_USB0_OHCI_0_APP_IRQ1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_OFFSET ( 0x000001F0 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_irq1_i */
	stt_uint32 usb0_ohci_0_app_irq1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_DTE ;


/*****************************************************************************************/
/* usb1_ohci_0_app_irq1_i                                                                */
/* usb1_ohci_0_app_irq1_i                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_R1_DEFAULT_VALUE                                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_R1_DEFAULT_VALUE_RESET_VALUE                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_USB1_OHCI_0_APP_IRQ1_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_USB1_OHCI_0_APP_IRQ1_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_OFFSET ( 0x000001F4 )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_irq1_i */
	stt_uint32 usb1_ohci_0_app_irq1_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_DTE ;


/*****************************************************************************************/
/* usb0_ohci_0_app_irq12_i                                                               */
/* usb0_ohci_0_app_irq12_i                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_R1_DEFAULT_VALUE                                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_R1_DEFAULT_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_USB0_OHCI_0_APP_IRQ12_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_USB0_OHCI_0_APP_IRQ12_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_OFFSET ( 0x000001F8 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_irq12_i */
	stt_uint32 usb0_ohci_0_app_irq12_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_DTE ;


/*****************************************************************************************/
/* usb1_ohci_0_app_irq12_i                                                               */
/* usb1_ohci_0_app_irq12_i                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_R1_DEFAULT_VALUE                                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_R1_DEFAULT_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_USB1_OHCI_0_APP_IRQ12_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_USB1_OHCI_0_APP_IRQ12_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_OFFSET ( 0x000001FC )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_irq12_i */
	stt_uint32 usb1_ohci_0_app_irq12_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_DTE ;


/*****************************************************************************************/
/* usb0_ahb_ohci_ehci_sel                                                                */
/* usb0_ahb_ohci_ehci_sel                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_R1_DEFAULT_VALUE                                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_R1_DEFAULT_VALUE_RESET_VALUE                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_USB0_AHB_OHCI_EHCI_SEL_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_USB0_AHB_OHCI_EHCI_SEL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_OFFSET ( 0x00000200 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_ohci_ehci_sel */
	stt_uint32 usb0_ahb_ohci_ehci_sel	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_DTE ;


/*****************************************************************************************/
/* usb1_ahb_ohci_ehci_sel                                                                */
/* usb1_ahb_ohci_ehci_sel                                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_R1_DEFAULT_VALUE                                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_R1_DEFAULT_VALUE_RESET_VALUE                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_USB1_AHB_OHCI_EHCI_SEL_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_USB1_AHB_OHCI_EHCI_SEL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_OFFSET ( 0x00000204 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                    	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_ohci_ehci_sel */
	stt_uint32 usb1_ahb_ohci_ehci_sel	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_DTE ;


/*****************************************************************************************/
/* usb0_ahb_ohci_ehci_sel_cb                                                             */
/* usb0_ahb_ohci_ehci_sel_cb                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_USB0_AHB_OHCI_EHCI_SEL_CB_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_USB0_AHB_OHCI_EHCI_SEL_CB_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_OFFSET ( 0x00000208 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_ohci_ehci_sel_cb */
	stt_uint32 usb0_ahb_ohci_ehci_sel_cb	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_DTE ;


/*****************************************************************************************/
/* usb1_ahb_ohci_ehci_sel_cb                                                             */
/* usb1_ahb_ohci_ehci_sel_cb                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_USB1_AHB_OHCI_EHCI_SEL_CB_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_USB1_AHB_OHCI_EHCI_SEL_CB_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_OFFSET ( 0x0000020C )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_ohci_ehci_sel_cb */
	stt_uint32 usb1_ahb_ohci_ehci_sel_cb	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_DTE ;


/*****************************************************************************************/
/* usb0_ehci_prt_pwr_o                                                                   */
/* usb0_ehci_prt_pwr_o                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_USB0_EHCI_PRT_PWR_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_USB0_EHCI_PRT_PWR_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_OFFSET ( 0x00000210 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_prt_pwr_o */
	stt_uint32 usb0_ehci_prt_pwr_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_prt_pwr_o                                                                   */
/* usb1_ehci_prt_pwr_o                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_USB1_EHCI_PRT_PWR_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_USB1_EHCI_PRT_PWR_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_OFFSET ( 0x00000214 )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_prt_pwr_o */
	stt_uint32 usb1_ehci_prt_pwr_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_DTE ;


/*****************************************************************************************/
/* usb0_ehci_xfer_cnt_o                                                                  */
/* usb0_ehci_xfer_cnt_o                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_USB0_EHCI_XFER_CNT_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_USB0_EHCI_XFER_CNT_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_OFFSET ( 0x00000218 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_xfer_cnt_o */
	stt_uint32 usb0_ehci_xfer_cnt_o	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_xfer_cnt_o                                                                  */
/* usb1_ehci_xfer_cnt_o                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_USB1_EHCI_XFER_CNT_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_USB1_EHCI_XFER_CNT_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_OFFSET ( 0x0000021C )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_xfer_cnt_o */
	stt_uint32 usb1_ehci_xfer_cnt_o	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_DTE ;


/*****************************************************************************************/
/* usb0_ehci_xfer_prdc_o                                                                 */
/* usb0_ehci_xfer_prdc_o                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_USB0_EHCI_XFER_PRDC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_USB0_EHCI_XFER_PRDC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_OFFSET ( 0x00000220 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_xfer_prdc_o */
	stt_uint32 usb0_ehci_xfer_prdc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_xfer_prdc_o                                                                 */
/* usb1_ehci_xfer_prdc_o                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_USB1_EHCI_XFER_PRDC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_USB1_EHCI_XFER_PRDC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_OFFSET ( 0x00000224 )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_xfer_prdc_o */
	stt_uint32 usb1_ehci_xfer_prdc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_DTE ;


/*****************************************************************************************/
/* usb0_ehci_bufacc_o                                                                    */
/* usb0_ehci_bufacc_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_USB0_EHCI_BUFACC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_USB0_EHCI_BUFACC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_OFFSET ( 0x00000228 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_bufacc_o */
	stt_uint32 usb0_ehci_bufacc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_bufacc_o                                                                    */
/* usb1_ehci_bufacc_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_USB1_EHCI_BUFACC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_USB1_EHCI_BUFACC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_OFFSET ( 0x0000022C )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_bufacc_o */
	stt_uint32 usb1_ehci_bufacc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_DTE ;


/*****************************************************************************************/
/* usb0_ehci_usbsts_o                                                                    */
/* usb0_ehci_usbsts_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_USB0_EHCI_USBSTS_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_USB0_EHCI_USBSTS_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_OFFSET ( 0x00000230 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_usbsts_o */
	stt_uint32 usb0_ehci_usbsts_o	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_usbsts_o                                                                    */
/* usb1_ehci_usbsts_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_USB1_EHCI_USBSTS_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_USB1_EHCI_USBSTS_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_OFFSET ( 0x00000234 )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_usbsts_o */
	stt_uint32 usb1_ehci_usbsts_o	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_DTE ;


/*****************************************************************************************/
/* usb0_ehci_lpsmc_state_o                                                               */
/* usb0_ehci_lpsmc_state_o                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_R1_DEFAULT_VALUE                                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_R1_DEFAULT_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_USB0_EHCI_LPSMC_STATE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_USB0_EHCI_LPSMC_STATE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_OFFSET ( 0x00000238 )

#define CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                     	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_lpsmc_state_o */
	stt_uint32 usb0_ehci_lpsmc_state_o	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_DTE ;


/*****************************************************************************************/
/* usb1_ehci_lpsmc_state_o                                                               */
/* usb1_ehci_lpsmc_state_o                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_R1_DEFAULT_VALUE                                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_R1_DEFAULT_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_USB1_EHCI_LPSMC_STATE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_USB1_EHCI_LPSMC_STATE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_OFFSET ( 0x0000023C )

#define CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                     	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_lpsmc_state_o */
	stt_uint32 usb1_ehci_lpsmc_state_o	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_globalsuspend_o                                                             */
/* usb0_ohci_globalsuspend_o                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_USB0_OHCI_GLOBALSUSPEND_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_USB0_OHCI_GLOBALSUSPEND_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_OFFSET ( 0x00000240 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_globalsuspend_o */
	stt_uint32 usb0_ohci_globalsuspend_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_globalsuspend_o                                                             */
/* usb1_ohci_globalsuspend_o                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_USB1_OHCI_GLOBALSUSPEND_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_USB1_OHCI_GLOBALSUSPEND_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_OFFSET ( 0x00000244 )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_globalsuspend_o */
	stt_uint32 usb1_ohci_globalsuspend_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_rwe_o                                                                       */
/* usb0_ohci_rwe_o                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_USB0_OHCI_RWE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_USB0_OHCI_RWE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_OFFSET ( 0x00000248 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_rwe_o */
	stt_uint32 usb0_ohci_rwe_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_rwe_o                                                                       */
/* usb1_ohci_rwe_o                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_USB1_OHCI_RWE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_USB1_OHCI_RWE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_OFFSET ( 0x0000024C )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_rwe_o */
	stt_uint32 usb1_ohci_rwe_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_rmtwkp_o                                                                    */
/* usb0_ohci_rmtwkp_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_USB0_OHCI_RMTWKP_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_USB0_OHCI_RMTWKP_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_OFFSET ( 0x00000250 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_rmtwkp_o */
	stt_uint32 usb0_ohci_rmtwkp_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_rmtwkp_o                                                                    */
/* usb1_ohci_rmtwkp_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_USB1_OHCI_RMTWKP_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_USB1_OHCI_RMTWKP_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_OFFSET ( 0x00000254 )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_rmtwkp_o */
	stt_uint32 usb1_ohci_rmtwkp_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_drwe_o                                                                      */
/* usb0_ohci_drwe_o                                                                      */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_R1_DEFAULT_VALUE                           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_R1_DEFAULT_VALUE_RESET_VALUE               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_USB0_OHCI_DRWE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_USB0_OHCI_DRWE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_OFFSET ( 0x00000258 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1              	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_drwe_o */
	stt_uint32 usb0_ohci_drwe_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_drwe_o                                                                      */
/* usb1_ohci_drwe_o                                                                      */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_R1_DEFAULT_VALUE                           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_R1_DEFAULT_VALUE_RESET_VALUE               ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_USB1_OHCI_DRWE_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_USB1_OHCI_DRWE_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_OFFSET ( 0x0000025C )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1              	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_drwe_o */
	stt_uint32 usb1_ohci_drwe_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_ccs_o                                                                       */
/* usb0_ohci_ccs_o                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_USB0_OHCI_CCS_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_USB0_OHCI_CCS_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_OFFSET ( 0x00000260 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_ccs_o */
	stt_uint32 usb0_ohci_ccs_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_ccs_o                                                                       */
/* usb1_ohci_ccs_o                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_USB1_OHCI_CCS_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_USB1_OHCI_CCS_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_OFFSET ( 0x00000264 )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_ccs_o */
	stt_uint32 usb1_ohci_ccs_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_DTE ;


/*****************************************************************************************/
/* usb0_ohci_bufacc_o                                                                    */
/* usb0_ohci_bufacc_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_USB0_OHCI_BUFACC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_USB0_OHCI_BUFACC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_OFFSET ( 0x00000268 )

#define CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_bufacc_o */
	stt_uint32 usb0_ohci_bufacc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_DTE ;


/*****************************************************************************************/
/* usb1_ohci_bufacc_o                                                                    */
/* usb1_ohci_bufacc_o                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_USB1_OHCI_BUFACC_O_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_USB1_OHCI_BUFACC_O_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_OFFSET ( 0x0000026C )

#define CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_bufacc_o */
	stt_uint32 usb1_ohci_bufacc_o	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_DTE ;


/*****************************************************************************************/
/* usb0_ss_simulation_mode_i                                                             */
/* usb0_ss_simulation_mode_i                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_USB0_SS_SIMULATION_MODE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_USB0_SS_SIMULATION_MODE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_OFFSET ( 0x00000270 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_simulation_mode_i */
	stt_uint32 usb0_ss_simulation_mode_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_simulation_mode_i                                                             */
/* usb1_ss_simulation_mode_i                                                             */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_USB1_SS_SIMULATION_MODE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_USB1_SS_SIMULATION_MODE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_OFFSET ( 0x00000274 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_simulation_mode_i */
	stt_uint32 usb1_ss_simulation_mode_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_DTE ;


/*****************************************************************************************/
/* SLEEPM0                                                                               */
/* SLEEPM0                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SLEEPM0_R1_DEFAULT_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SLEEPM0_R1_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SLEEPM0_SLEEPM0_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_SLEEPM0_SLEEPM0_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_SLEEPM0_OFFSET ( 0x00000278 )

#define CE_USB_BLOCK_REGFILE_SLEEPM0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SLEEPM0_OFFSET )
#define BL_USB_BLOCK_REGFILE_SLEEPM0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SLEEPM0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SLEEPM0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SLEEPM0_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLEEPM0 */
	stt_uint32 sleepm0	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SLEEPM0_DTE ;


/*****************************************************************************************/
/* SLEEPM1                                                                               */
/* SLEEPM1                                                                               */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_SLEEPM1_R1_DEFAULT_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SLEEPM1_R1_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_SLEEPM1_SLEEPM1_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_SLEEPM1_SLEEPM1_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_SLEEPM1_OFFSET ( 0x0000027C )

#define CE_USB_BLOCK_REGFILE_SLEEPM1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_SLEEPM1_OFFSET )
#define BL_USB_BLOCK_REGFILE_SLEEPM1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_SLEEPM1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_SLEEPM1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_SLEEPM1_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1     	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLEEPM1 */
	stt_uint32 sleepm1	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_SLEEPM1_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_0                                                                        */
/* usb0_ahb_cfg_0                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_USB0_AHB_CFG_0_DEFAULT_VALUE             ( 0xFFFFFFFF )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_USB0_AHB_CFG_0_DEFAULT_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_OFFSET ( 0x00000280 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_0 */
	stt_uint32 usb0_ahb_cfg_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_0_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_1                                                                        */
/* usb0_ahb_cfg_1                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_USB0_AHB_CFG_1_DEFAULT_VALUE             ( 0x881 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_USB0_AHB_CFG_1_DEFAULT_VALUE_RESET_VALUE ( 0x881 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_OFFSET ( 0x00000284 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_1 */
	stt_uint32 usb0_ahb_cfg_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_1_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_2                                                                        */
/* usb0_ahb_cfg_2                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_USB0_AHB_CFG_2_DEFAULT_VALUE             ( 0xAAAAAAAA )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_USB0_AHB_CFG_2_DEFAULT_VALUE_RESET_VALUE ( 0xAAAAAAAA )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_OFFSET ( 0x00000288 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_2 */
	stt_uint32 usb0_ahb_cfg_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_2_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_3                                                                        */
/* usb0_ahb_cfg_3                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_USB0_AHB_CFG_3_DEFAULT_VALUE             ( 0x181 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_USB0_AHB_CFG_3_DEFAULT_VALUE_RESET_VALUE ( 0x181 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_OFFSET ( 0x0000028C )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_3 */
	stt_uint32 usb0_ahb_cfg_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_3_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_4                                                                        */
/* usb0_ahb_cfg_4                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_USB0_AHB_CFG_4_DEFAULT_VALUE             ( 0x55555555 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_USB0_AHB_CFG_4_DEFAULT_VALUE_RESET_VALUE ( 0x55555555 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_OFFSET ( 0x00000290 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_4 */
	stt_uint32 usb0_ahb_cfg_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_4_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_5                                                                        */
/* usb0_ahb_cfg_5                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_USB0_AHB_CFG_5_DEFAULT_VALUE             ( 0x23 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_USB0_AHB_CFG_5_DEFAULT_VALUE_RESET_VALUE ( 0x23 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_OFFSET ( 0x00000294 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_5 */
	stt_uint32 usb0_ahb_cfg_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_5_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_6                                                                        */
/* usb0_ahb_cfg_6                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_USB0_AHB_CFG_6_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_USB0_AHB_CFG_6_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_OFFSET ( 0x00000298 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_6 */
	stt_uint32 usb0_ahb_cfg_6	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_6_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_7                                                                        */
/* usb0_ahb_cfg_7                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_USB0_AHB_CFG_7_DEFAULT_VALUE             ( 0x7 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_USB0_AHB_CFG_7_DEFAULT_VALUE_RESET_VALUE ( 0x7 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_OFFSET ( 0x0000029C )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_7 */
	stt_uint32 usb0_ahb_cfg_7	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_7_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_8                                                                        */
/* usb0_ahb_cfg_8                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_USB0_AHB_CFG_8_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_USB0_AHB_CFG_8_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_OFFSET ( 0x000002A0 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_8 */
	stt_uint32 usb0_ahb_cfg_8	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_8_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_9                                                                        */
/* usb0_ahb_cfg_9                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_USB0_AHB_CFG_9_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_USB0_AHB_CFG_9_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_OFFSET ( 0x000002A4 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_9 */
	stt_uint32 usb0_ahb_cfg_9	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_9_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_10                                                                       */
/* usb0_ahb_cfg_10                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_USB0_AHB_CFG_10_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_USB0_AHB_CFG_10_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_OFFSET ( 0x000002A8 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_10 */
	stt_uint32 usb0_ahb_cfg_10	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_10_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_11                                                                       */
/* usb0_ahb_cfg_11                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_USB0_AHB_CFG_11_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_USB0_AHB_CFG_11_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_OFFSET ( 0x000002AC )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_11 */
	stt_uint32 usb0_ahb_cfg_11	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_11_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_12                                                                       */
/* usb0_ahb_cfg_12                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_USB0_AHB_CFG_12_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_USB0_AHB_CFG_12_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_OFFSET ( 0x000002B0 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_12 */
	stt_uint32 usb0_ahb_cfg_12	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_12_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_13                                                                       */
/* usb0_ahb_cfg_13                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_USB0_AHB_CFG_13_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_USB0_AHB_CFG_13_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_OFFSET ( 0x000002B4 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_13 */
	stt_uint32 usb0_ahb_cfg_13	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_13_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_14                                                                       */
/* usb0_ahb_cfg_14                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_USB0_AHB_CFG_14_DEFAULT_VALUE             ( 0x80 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_USB0_AHB_CFG_14_DEFAULT_VALUE_RESET_VALUE ( 0x80 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_OFFSET ( 0x000002B8 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_14 */
	stt_uint32 usb0_ahb_cfg_14	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_14_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_0                                                                        */
/* usb1_ahb_cfg_0                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_USB1_AHB_CFG_0_DEFAULT_VALUE             ( 0xFFFFFFFF )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_USB1_AHB_CFG_0_DEFAULT_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_OFFSET ( 0x000002BC )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_0 */
	stt_uint32 usb1_ahb_cfg_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_0_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_1                                                                        */
/* usb1_ahb_cfg_1                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_USB1_AHB_CFG_1_DEFAULT_VALUE             ( 0x881 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_USB1_AHB_CFG_1_DEFAULT_VALUE_RESET_VALUE ( 0x881 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_OFFSET ( 0x000002C0 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_1 */
	stt_uint32 usb1_ahb_cfg_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_1_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_2                                                                        */
/* usb1_ahb_cfg_2                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_USB1_AHB_CFG_2_DEFAULT_VALUE             ( 0xAAAAAAAA )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_USB1_AHB_CFG_2_DEFAULT_VALUE_RESET_VALUE ( 0xAAAAAAAA )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_OFFSET ( 0x000002C4 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_2 */
	stt_uint32 usb1_ahb_cfg_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_2_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_3                                                                        */
/* usb1_ahb_cfg_3                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_USB1_AHB_CFG_3_DEFAULT_VALUE             ( 0x181 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_USB1_AHB_CFG_3_DEFAULT_VALUE_RESET_VALUE ( 0x181 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_OFFSET ( 0x000002C8 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_3 */
	stt_uint32 usb1_ahb_cfg_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_3_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_4                                                                        */
/* usb1_ahb_cfg_4                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_USB1_AHB_CFG_4_DEFAULT_VALUE             ( 0x55555555 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_USB1_AHB_CFG_4_DEFAULT_VALUE_RESET_VALUE ( 0x55555555 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_OFFSET ( 0x000002CC )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_4 */
	stt_uint32 usb1_ahb_cfg_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_4_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_5                                                                        */
/* usb1_ahb_cfg_5                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_USB1_AHB_CFG_5_DEFAULT_VALUE             ( 0x23 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_USB1_AHB_CFG_5_DEFAULT_VALUE_RESET_VALUE ( 0x23 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_OFFSET ( 0x000002D0 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_5 */
	stt_uint32 usb1_ahb_cfg_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_5_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_6                                                                        */
/* usb1_ahb_cfg_6                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_USB1_AHB_CFG_6_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_USB1_AHB_CFG_6_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_OFFSET ( 0x000002D4 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_6 */
	stt_uint32 usb1_ahb_cfg_6	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_6_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_7                                                                        */
/* usb1_ahb_cfg_7                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_USB1_AHB_CFG_7_DEFAULT_VALUE             ( 0x7 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_USB1_AHB_CFG_7_DEFAULT_VALUE_RESET_VALUE ( 0x7 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_OFFSET ( 0x000002D8 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_7 */
	stt_uint32 usb1_ahb_cfg_7	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_7_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_8                                                                        */
/* usb1_ahb_cfg_8                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_USB1_AHB_CFG_8_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_USB1_AHB_CFG_8_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_OFFSET ( 0x000002DC )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_8 */
	stt_uint32 usb1_ahb_cfg_8	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_8_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_9                                                                        */
/* usb1_ahb_cfg_9                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_USB1_AHB_CFG_9_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_USB1_AHB_CFG_9_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_OFFSET ( 0x000002E0 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_9 */
	stt_uint32 usb1_ahb_cfg_9	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_9_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_10                                                                       */
/* usb1_ahb_cfg_10                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_USB1_AHB_CFG_10_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_USB1_AHB_CFG_10_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_OFFSET ( 0x000002E4 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_10 */
	stt_uint32 usb1_ahb_cfg_10	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_10_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_11                                                                       */
/* usb1_ahb_cfg_11                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_USB1_AHB_CFG_11_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_USB1_AHB_CFG_11_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_OFFSET ( 0x000002E8 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_11 */
	stt_uint32 usb1_ahb_cfg_11	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_11_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_12                                                                       */
/* usb1_ahb_cfg_12                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_USB1_AHB_CFG_12_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_USB1_AHB_CFG_12_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_OFFSET ( 0x000002EC )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_12 */
	stt_uint32 usb1_ahb_cfg_12	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_12_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_13                                                                       */
/* usb1_ahb_cfg_13                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_USB1_AHB_CFG_13_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_USB1_AHB_CFG_13_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_OFFSET ( 0x000002F0 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_13 */
	stt_uint32 usb1_ahb_cfg_13	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_13_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_14                                                                       */
/* usb1_ahb_cfg_14                                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_USB1_AHB_CFG_14_DEFAULT_VALUE             ( 0x80 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_USB1_AHB_CFG_14_DEFAULT_VALUE_RESET_VALUE ( 0x80 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_OFFSET ( 0x000002F4 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_14 */
	stt_uint32 usb1_ahb_cfg_14	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_14_DTE ;


/*****************************************************************************************/
/* usb0_test_addr                                                                        */
/* usb0_test_addr                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_R1_RESERVED_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_R1_RESERVED_VALUE_RESET_VALUE            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_USB0_TEST_ADDR_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_USB0_TEST_ADDR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_OFFSET ( 0x000002F8 )

#define CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_TEST_ADDR_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_TEST_ADDR_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_TEST_ADDR_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1            	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_test_addr */
	stt_uint32 usb0_test_addr	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_TEST_ADDR_DTE ;


/*****************************************************************************************/
/* usb1_test_addr                                                                        */
/* usb1_test_addr                                                                        */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_R1_RESERVED_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_R1_RESERVED_VALUE_RESET_VALUE            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_USB1_TEST_ADDR_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_USB1_TEST_ADDR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_OFFSET ( 0x000002FC )

#define CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_TEST_ADDR_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_TEST_ADDR_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_TEST_ADDR_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1            	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_test_addr */
	stt_uint32 usb1_test_addr	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_TEST_ADDR_DTE ;


/*****************************************************************************************/
/* usb0_testdataoutsel                                                                   */
/* usb0_testdataoutsel                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_USB0_TESTDATAOUTSEL_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_USB0_TESTDATAOUTSEL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_OFFSET ( 0x00000300 )

#define CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_testdataoutsel */
	stt_uint32 usb0_testdataoutsel	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_DTE ;


/*****************************************************************************************/
/* usb1_testdataoutsel                                                                   */
/* usb1_testdataoutsel                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_USB1_TESTDATAOUTSEL_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_USB1_TESTDATAOUTSEL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_OFFSET ( 0x00000304 )

#define CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_testdataoutsel */
	stt_uint32 usb1_testdataoutsel	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_DTE ;


/*****************************************************************************************/
/* usb0_testclk                                                                          */
/* usb0_testclk                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_USB0_TESTCLK_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_USB0_TESTCLK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_OFFSET ( 0x00000308 )

#define CE_USB_BLOCK_REGFILE_USB0_TESTCLK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_TESTCLK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_TESTCLK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_TESTCLK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_TESTCLK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_TESTCLK_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_testclk */
	stt_uint32 usb0_testclk	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_TESTCLK_DTE ;


/*****************************************************************************************/
/* usb1_testclk                                                                          */
/* usb1_testclk                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_USB1_TESTCLK_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_USB1_TESTCLK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_OFFSET ( 0x0000030C )

#define CE_USB_BLOCK_REGFILE_USB1_TESTCLK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_TESTCLK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_TESTCLK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_TESTCLK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_TESTCLK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_TESTCLK_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_testclk */
	stt_uint32 usb1_testclk	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_TESTCLK_DTE ;


/*****************************************************************************************/
/* usb0_phy_test_mode                                                                    */
/* usb0_phy_test_mode                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_USB0_PHY_TEST_MODE_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_USB0_PHY_TEST_MODE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_OFFSET ( 0x00000310 )

#define CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_test_mode */
	stt_uint32 usb0_phy_test_mode	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_DTE ;


/*****************************************************************************************/
/* usb1_phy_test_mode                                                                    */
/* usb1_phy_test_mode                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_USB1_PHY_TEST_MODE_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_USB1_PHY_TEST_MODE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_OFFSET ( 0x00000314 )

#define CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_test_mode */
	stt_uint32 usb1_phy_test_mode	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_0                                                                          */
/* usb_ec_cfg_0                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_USB_EC_CFG_0_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_USB_EC_CFG_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_OFFSET ( 0x00000340 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_0_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_0 */
	stt_uint32 usb_ec_cfg_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_0_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_1                                                                          */
/* usb_ec_cfg_1                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_USB_EC_CFG_1_DEFAULT_VALUE             ( 0x18004800 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_USB_EC_CFG_1_DEFAULT_VALUE_RESET_VALUE ( 0x18004800 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_OFFSET ( 0x00000344 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_1_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_1 */
	stt_uint32 usb_ec_cfg_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_1_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_2                                                                          */
/* usb_ec_cfg_2                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_USB_EC_CFG_2_DEFAULT_VALUE             ( 0x18004000 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_USB_EC_CFG_2_DEFAULT_VALUE_RESET_VALUE ( 0x18004000 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_OFFSET ( 0x00000348 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_2_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_2_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_2_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_2 */
	stt_uint32 usb_ec_cfg_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_2_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_3                                                                          */
/* usb_ec_cfg_3                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_USB_EC_CFG_3_DEFAULT_VALUE             ( 0x18004100 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_USB_EC_CFG_3_DEFAULT_VALUE_RESET_VALUE ( 0x18004100 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_OFFSET ( 0x0000034C )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_3_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_3_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_3_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_3 */
	stt_uint32 usb_ec_cfg_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_3_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_4                                                                          */
/* usb_ec_cfg_4                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_USB_EC_CFG_4_DEFAULT_VALUE             ( 0x18004400 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_USB_EC_CFG_4_DEFAULT_VALUE_RESET_VALUE ( 0x18004400 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_OFFSET ( 0x00000350 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_4_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_4_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_4_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_4 */
	stt_uint32 usb_ec_cfg_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_4_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_5                                                                          */
/* usb_ec_cfg_5                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_USB_EC_CFG_5_DEFAULT_VALUE             ( 0x18004500 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_USB_EC_CFG_5_DEFAULT_VALUE_RESET_VALUE ( 0x18004500 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_OFFSET ( 0x00000354 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_5_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_5_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_5_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_5 */
	stt_uint32 usb_ec_cfg_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_5_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_6                                                                          */
/* usb_ec_cfg_6                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_USB_EC_CFG_6_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_USB_EC_CFG_6_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_OFFSET ( 0x00000358 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_6_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_6_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_6_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_6 */
	stt_uint32 usb_ec_cfg_6	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_6_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_7                                                                          */
/* usb_ec_cfg_7                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_USB_EC_CFG_7_DEFAULT_VALUE             ( 0x18007FFF )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_USB_EC_CFG_7_DEFAULT_VALUE_RESET_VALUE ( 0x18007FFF )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_OFFSET ( 0x0000035C )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_7_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_7_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_7_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_7 */
	stt_uint32 usb_ec_cfg_7	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_7_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_8                                                                          */
/* usb_ec_cfg_8                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_USB_EC_CFG_8_DEFAULT_VALUE             ( 0x180040FF )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_USB_EC_CFG_8_DEFAULT_VALUE_RESET_VALUE ( 0x180040FF )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_OFFSET ( 0x00000360 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_8_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_8_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_8_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_8 */
	stt_uint32 usb_ec_cfg_8	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_8_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_9                                                                          */
/* usb_ec_cfg_9                                                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_USB_EC_CFG_9_DEFAULT_VALUE             ( 0x180043FF )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_USB_EC_CFG_9_DEFAULT_VALUE_RESET_VALUE ( 0x180043FF )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_OFFSET ( 0x00000364 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_9_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_9_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_9_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_9 */
	stt_uint32 usb_ec_cfg_9	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_9_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_10                                                                         */
/* usb_ec_cfg_10                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_USB_EC_CFG_10_DEFAULT_VALUE             ( 0x180044FF )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_USB_EC_CFG_10_DEFAULT_VALUE_RESET_VALUE ( 0x180044FF )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_OFFSET ( 0x00000368 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_10_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_10_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_10_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_10 */
	stt_uint32 usb_ec_cfg_10	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_10_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_11                                                                         */
/* usb_ec_cfg_11                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_USB_EC_CFG_11_DEFAULT_VALUE             ( 0x180047FF )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_USB_EC_CFG_11_DEFAULT_VALUE_RESET_VALUE ( 0x180047FF )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_OFFSET ( 0x0000036C )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_11_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_11_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_11_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_11 */
	stt_uint32 usb_ec_cfg_11	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_11_DTE ;


/*****************************************************************************************/
/* usb_ec_cfg_12                                                                         */
/* usb_ec_cfg_12                                                                         */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_USB_EC_CFG_12_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_USB_EC_CFG_12_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_OFFSET ( 0x00000370 )

#define CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_12_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB_EC_CFG_12_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB_EC_CFG_12_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_cfg_12 */
	stt_uint32 usb_ec_cfg_12	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB_EC_CFG_12_DTE ;


/*****************************************************************************************/
/* usb0_ahb_haddr_mask                                                                   */
/* usb0_ahb_haddr_mask                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_USB0_AHB_HADDR_MASK_DEFAULT_VALUE             ( 0xFF )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_USB0_AHB_HADDR_MASK_DEFAULT_VALUE_RESET_VALUE ( 0xFF )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_OFFSET ( 0x00000374 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_haddr_mask */
	stt_uint32 usb0_ahb_haddr_mask	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_DTE ;


/*****************************************************************************************/
/* usb1_ahb_haddr_mask                                                                   */
/* usb1_ahb_haddr_mask                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_USB1_AHB_HADDR_MASK_DEFAULT_VALUE             ( 0xFF )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_USB1_AHB_HADDR_MASK_DEFAULT_VALUE_RESET_VALUE ( 0xFF )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_OFFSET ( 0x00000378 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_haddr_mask */
	stt_uint32 usb1_ahb_haddr_mask	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_DTE ;


/*****************************************************************************************/
/* common_ahb_haddr_mask                                                                 */
/* common_ahb_haddr_mask                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_COMMON_AHB_HADDR_MASK_DEFAULT_VALUE             ( 0x7FF )
#define CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_COMMON_AHB_HADDR_MASK_DEFAULT_VALUE_RESET_VALUE ( 0x7FF )


#define CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_OFFSET ( 0x0000037C )

#define CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_OFFSET )
#define BL_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_ADDRESS ), (v) )

typedef struct
{
	/* common_ahb_haddr_mask */
	stt_uint32 common_ahb_haddr_mask	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_DTE ;


/*****************************************************************************************/
/* usb0_interrupt_mask                                                                   */
/* usb0_interrupt_mask                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_USB0_INTERRUPT_MASK_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_USB0_INTERRUPT_MASK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_OFFSET ( 0x00000380 )

#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_interrupt_mask */
	stt_uint32 usb0_interrupt_mask	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_DTE ;


/*****************************************************************************************/
/* usb1_interrupt_mask                                                                   */
/* usb1_interrupt_mask                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_USB1_INTERRUPT_MASK_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_USB1_INTERRUPT_MASK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_OFFSET ( 0x00000384 )

#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_interrupt_mask */
	stt_uint32 usb1_interrupt_mask	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_DTE ;


/*****************************************************************************************/
/* usb0_interrupt_status                                                                 */
/* usb0_interrupt_status                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_USB0_INTERRUPT_STATUS_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_USB0_INTERRUPT_STATUS_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_OFFSET ( 0x00000388 )

#define CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_interrupt_status */
	stt_uint32 usb0_interrupt_status	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_DTE ;


/*****************************************************************************************/
/* usb1_interrupt_status                                                                 */
/* usb1_interrupt_status                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_USB1_INTERRUPT_STATUS_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_USB1_INTERRUPT_STATUS_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_OFFSET ( 0x0000038C )

#define CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_interrupt_status */
	stt_uint32 usb1_interrupt_status	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_DTE ;


/*****************************************************************************************/
/* usb0_test_interrupt                                                                   */
/* usb0_test_interrupt                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_USB0_TEST_INTERRUPT_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_USB0_TEST_INTERRUPT_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_OFFSET ( 0x00000390 )

#define CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_test_interrupt */
	stt_uint32 usb0_test_interrupt	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_DTE ;


/*****************************************************************************************/
/* usb1_test_interrupt                                                                   */
/* usb1_test_interrupt                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_USB1_TEST_INTERRUPT_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_USB1_TEST_INTERRUPT_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_OFFSET ( 0x00000394 )

#define CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_test_interrupt */
	stt_uint32 usb1_test_interrupt	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_DTE ;


/*****************************************************************************************/
/* usb0_ss_ena_incr8_i                                                                   */
/* usb0_ss_ena_incr8_i                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_USB0_SS_ENA_INCR8_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_USB0_SS_ENA_INCR8_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_OFFSET ( 0x000003C0 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr8_i */
	stt_uint32 usb0_ss_ena_incr8_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_ena_incr8_i                                                                   */
/* usb1_ss_ena_incr8_i                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_USB1_SS_ENA_INCR8_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_USB1_SS_ENA_INCR8_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_OFFSET ( 0x000003C4 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr8_i */
	stt_uint32 usb1_ss_ena_incr8_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_power_state_i                                                                 */
/* usb0_ss_power_state_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_USB0_SS_POWER_STATE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_USB0_SS_POWER_STATE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_OFFSET ( 0x000003C8 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_power_state_i */
	stt_uint32 usb0_ss_power_state_i	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_power_state_i                                                                 */
/* usb1_ss_power_state_i                                                                 */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_USB1_SS_POWER_STATE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_USB1_SS_POWER_STATE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_OFFSET ( 0x000003CC )

#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_ADDRESS ), (v) )

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_power_state_i */
	stt_uint32 usb1_ss_power_state_i	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_nxt_power_state_valid_i                                                       */
/* usb0_ss_nxt_power_state_valid_i                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_R1_RESERVED_VALUE                                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_R1_RESERVED_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_USB0_SS_NXT_POWER_STATE_VALID_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_USB0_SS_NXT_POWER_STATE_VALID_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_OFFSET ( 0x000003D0 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_nxt_power_state_valid_i */
	stt_uint32 usb0_ss_nxt_power_state_valid_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_nxt_power_state_valid_i                                                       */
/* usb1_ss_nxt_power_state_valid_i                                                       */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_R1_RESERVED_VALUE                                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_R1_RESERVED_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_USB1_SS_NXT_POWER_STATE_VALID_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_USB1_SS_NXT_POWER_STATE_VALID_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_OFFSET ( 0x000003D4 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                             	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_nxt_power_state_valid_i */
	stt_uint32 usb1_ss_nxt_power_state_valid_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_next_power_state_i                                                            */
/* usb0_ss_next_power_state_i                                                            */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_R1_RESERVED_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_R1_RESERVED_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_USB0_SS_NEXT_POWER_STATE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_USB0_SS_NEXT_POWER_STATE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_OFFSET ( 0x000003D8 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                        	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_next_power_state_i */
	stt_uint32 usb0_ss_next_power_state_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_next_power_state_i                                                            */
/* usb1_ss_next_power_state_i                                                            */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_R1_RESERVED_VALUE                                    ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_R1_RESERVED_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_USB1_SS_NEXT_POWER_STATE_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_USB1_SS_NEXT_POWER_STATE_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_OFFSET ( 0x000003DC )

#define CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                        	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_next_power_state_i */
	stt_uint32 usb1_ss_next_power_state_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_DTE ;


/*****************************************************************************************/
/* usb0_ss_power_state_valid_i                                                           */
/* usb0_ss_power_state_valid_i                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_R1_RESERVED_VALUE                                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_R1_RESERVED_VALUE_RESET_VALUE                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_USB0_SS_POWER_STATE_VALID_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_USB0_SS_POWER_STATE_VALID_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_OFFSET ( 0x000003E0 )

#define CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_power_state_valid_i */
	stt_uint32 usb0_ss_power_state_valid_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_DTE ;


/*****************************************************************************************/
/* usb1_ss_power_state_valid_i                                                           */
/* usb1_ss_power_state_valid_i                                                           */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_R1_RESERVED_VALUE                                     ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_R1_RESERVED_VALUE_RESET_VALUE                         ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_USB1_SS_POWER_STATE_VALID_I_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_USB1_SS_POWER_STATE_VALID_I_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_OFFSET ( 0x000003E4 )

#define CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                         	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_power_state_valid_i */
	stt_uint32 usb1_ss_power_state_valid_i	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_0_swap                                                                   */
/* usb0_ahb_cfg_0_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_USB0_AHB_CFG_0_SWAP_DEFAULT_VALUE             ( 0xFFFFFFFF )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_USB0_AHB_CFG_0_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_OFFSET ( 0x00000400 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_0_swap */
	stt_uint32 usb0_ahb_cfg_0_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_1_swap                                                                   */
/* usb0_ahb_cfg_1_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_USB0_AHB_CFG_1_SWAP_DEFAULT_VALUE             ( 0x881 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_USB0_AHB_CFG_1_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x881 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_OFFSET ( 0x00000404 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_1_swap */
	stt_uint32 usb0_ahb_cfg_1_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_2_swap                                                                   */
/* usb0_ahb_cfg_2_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_USB0_AHB_CFG_2_SWAP_DEFAULT_VALUE             ( 0xAAAAAAAA )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_USB0_AHB_CFG_2_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0xAAAAAAAA )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_OFFSET ( 0x00000408 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_2_swap */
	stt_uint32 usb0_ahb_cfg_2_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_3_swap                                                                   */
/* usb0_ahb_cfg_3_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_USB0_AHB_CFG_3_SWAP_DEFAULT_VALUE             ( 0x181 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_USB0_AHB_CFG_3_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x181 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_OFFSET ( 0x0000040C )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_3_swap */
	stt_uint32 usb0_ahb_cfg_3_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_4_swap                                                                   */
/* usb0_ahb_cfg_4_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_USB0_AHB_CFG_4_SWAP_DEFAULT_VALUE             ( 0x55555555 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_USB0_AHB_CFG_4_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x55555555 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_OFFSET ( 0x00000410 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_4_swap */
	stt_uint32 usb0_ahb_cfg_4_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_5_swap                                                                   */
/* usb0_ahb_cfg_5_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_USB0_AHB_CFG_5_SWAP_DEFAULT_VALUE             ( 0x23 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_USB0_AHB_CFG_5_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x23 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_OFFSET ( 0x00000414 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_5_swap */
	stt_uint32 usb0_ahb_cfg_5_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_6_swap                                                                   */
/* usb0_ahb_cfg_6_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_USB0_AHB_CFG_6_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_USB0_AHB_CFG_6_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_OFFSET ( 0x00000418 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_6_swap */
	stt_uint32 usb0_ahb_cfg_6_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_7_swap                                                                   */
/* usb0_ahb_cfg_7_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_USB0_AHB_CFG_7_SWAP_DEFAULT_VALUE             ( 0x7 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_USB0_AHB_CFG_7_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x7 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_OFFSET ( 0x0000041C )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_7_swap */
	stt_uint32 usb0_ahb_cfg_7_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_8_swap                                                                   */
/* usb0_ahb_cfg_8_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_USB0_AHB_CFG_8_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_USB0_AHB_CFG_8_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_OFFSET ( 0x00000420 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_8_swap */
	stt_uint32 usb0_ahb_cfg_8_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_9_swap                                                                   */
/* usb0_ahb_cfg_9_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_USB0_AHB_CFG_9_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_USB0_AHB_CFG_9_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_OFFSET ( 0x00000424 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_9_swap */
	stt_uint32 usb0_ahb_cfg_9_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_10_swap                                                                  */
/* usb0_ahb_cfg_10_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_USB0_AHB_CFG_10_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_USB0_AHB_CFG_10_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_OFFSET ( 0x00000428 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_10_swap */
	stt_uint32 usb0_ahb_cfg_10_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_11_swap                                                                  */
/* usb0_ahb_cfg_11_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_USB0_AHB_CFG_11_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_USB0_AHB_CFG_11_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_OFFSET ( 0x0000042C )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_11_swap */
	stt_uint32 usb0_ahb_cfg_11_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_12_swap                                                                  */
/* usb0_ahb_cfg_12_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_USB0_AHB_CFG_12_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_USB0_AHB_CFG_12_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_OFFSET ( 0x00000430 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_12_swap */
	stt_uint32 usb0_ahb_cfg_12_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_13_swap                                                                  */
/* usb0_ahb_cfg_13_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_USB0_AHB_CFG_13_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_USB0_AHB_CFG_13_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_OFFSET ( 0x00000434 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_13_swap */
	stt_uint32 usb0_ahb_cfg_13_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_ahb_cfg_14_swap                                                                  */
/* usb0_ahb_cfg_14_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_USB0_AHB_CFG_14_SWAP_DEFAULT_VALUE             ( 0x80 )
#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_USB0_AHB_CFG_14_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x80 )


#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_OFFSET ( 0x00000438 )

#define CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb0_ahb_cfg_14_swap */
	stt_uint32 usb0_ahb_cfg_14_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_0_swap                                                                   */
/* usb1_ahb_cfg_0_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_USB1_AHB_CFG_0_SWAP_DEFAULT_VALUE             ( 0xFFFFFFFF )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_USB1_AHB_CFG_0_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_OFFSET ( 0x00000440 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_0_swap */
	stt_uint32 usb1_ahb_cfg_0_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_1_swap                                                                   */
/* usb1_ahb_cfg_1_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_USB1_AHB_CFG_1_SWAP_DEFAULT_VALUE             ( 0x881 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_USB1_AHB_CFG_1_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x881 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_OFFSET ( 0x00000444 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_1_swap */
	stt_uint32 usb1_ahb_cfg_1_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_2_swap                                                                   */
/* usb1_ahb_cfg_2_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_USB1_AHB_CFG_2_SWAP_DEFAULT_VALUE             ( 0xAAAAAAAA )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_USB1_AHB_CFG_2_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0xAAAAAAAA )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_OFFSET ( 0x00000448 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_2_swap */
	stt_uint32 usb1_ahb_cfg_2_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_3_swap                                                                   */
/* usb1_ahb_cfg_3_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_USB1_AHB_CFG_3_SWAP_DEFAULT_VALUE             ( 0x181 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_USB1_AHB_CFG_3_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x181 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_OFFSET ( 0x0000044C )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_3_swap */
	stt_uint32 usb1_ahb_cfg_3_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_4_swap                                                                   */
/* usb1_ahb_cfg_4_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_USB1_AHB_CFG_4_SWAP_DEFAULT_VALUE             ( 0x55555555 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_USB1_AHB_CFG_4_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x55555555 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_OFFSET ( 0x00000450 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_4_swap */
	stt_uint32 usb1_ahb_cfg_4_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_5_swap                                                                   */
/* usb1_ahb_cfg_5_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_USB1_AHB_CFG_5_SWAP_DEFAULT_VALUE             ( 0x23 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_USB1_AHB_CFG_5_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x23 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_OFFSET ( 0x00000454 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_5_swap */
	stt_uint32 usb1_ahb_cfg_5_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_6_swap                                                                   */
/* usb1_ahb_cfg_6_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_USB1_AHB_CFG_6_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_USB1_AHB_CFG_6_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_OFFSET ( 0x00000458 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_6_swap */
	stt_uint32 usb1_ahb_cfg_6_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_7_swap                                                                   */
/* usb1_ahb_cfg_7_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_USB1_AHB_CFG_7_SWAP_DEFAULT_VALUE             ( 0x7 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_USB1_AHB_CFG_7_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x7 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_OFFSET ( 0x0000045C )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_7_swap */
	stt_uint32 usb1_ahb_cfg_7_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_8_swap                                                                   */
/* usb1_ahb_cfg_8_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_USB1_AHB_CFG_8_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_USB1_AHB_CFG_8_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_OFFSET ( 0x00000460 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_8_swap */
	stt_uint32 usb1_ahb_cfg_8_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_9_swap                                                                   */
/* usb1_ahb_cfg_9_swap                                                                   */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_USB1_AHB_CFG_9_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_USB1_AHB_CFG_9_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_OFFSET ( 0x00000464 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_9_swap */
	stt_uint32 usb1_ahb_cfg_9_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_10_swap                                                                  */
/* usb1_ahb_cfg_10_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_USB1_AHB_CFG_10_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_USB1_AHB_CFG_10_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_OFFSET ( 0x00000468 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_10_swap */
	stt_uint32 usb1_ahb_cfg_10_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_11_swap                                                                  */
/* usb1_ahb_cfg_11_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_USB1_AHB_CFG_11_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_USB1_AHB_CFG_11_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_OFFSET ( 0x0000046C )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_11_swap */
	stt_uint32 usb1_ahb_cfg_11_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_12_swap                                                                  */
/* usb1_ahb_cfg_12_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_USB1_AHB_CFG_12_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_USB1_AHB_CFG_12_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_OFFSET ( 0x00000470 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_12_swap */
	stt_uint32 usb1_ahb_cfg_12_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_13_swap                                                                  */
/* usb1_ahb_cfg_13_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_USB1_AHB_CFG_13_SWAP_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_USB1_AHB_CFG_13_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_OFFSET ( 0x00000474 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_13_swap */
	stt_uint32 usb1_ahb_cfg_13_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_DTE ;


/*****************************************************************************************/
/* usb1_ahb_cfg_14_swap                                                                  */
/* usb1_ahb_cfg_14_swap                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_USB1_AHB_CFG_14_SWAP_DEFAULT_VALUE             ( 0x80 )
#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_USB1_AHB_CFG_14_SWAP_DEFAULT_VALUE_RESET_VALUE ( 0x80 )


#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_OFFSET ( 0x00000478 )

#define CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_ADDRESS ), (v) )

typedef struct
{
	/* usb1_ahb_cfg_14_swap */
	stt_uint32 usb1_ahb_cfg_14_swap	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_DTE ;


/*****************************************************************************************/
/* usb0_disable_suspend                                                                  */
/* usb0_disable_suspend                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_RESERVED_RESERVED_VALUE                        ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_RESERVED_RESERVED_VALUE_RESET_VALUE            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_USB0_DISABLE_SUSPEND_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_USB0_DISABLE_SUSPEND_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_OFFSET ( 0x00000480 )

#define CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 reserved            	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_disable_suspend */
	stt_uint32 usb0_disable_suspend	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_DTE ;


/*****************************************************************************************/
/* usb1_disable_suspend                                                                  */
/* usb1_disable_suspend                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_R1_RESERVED_VALUE                              ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_R1_RESERVED_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_USB1_DISABLE_SUSPEND_DEFAULT_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_USB1_DISABLE_SUSPEND_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_OFFSET ( 0x00000484 )

#define CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                  	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_disable_suspend */
	stt_uint32 usb1_disable_suspend	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_DTE ;


/*****************************************************************************************/
/* usb0_force_suspend                                                                    */
/* usb0_force_suspend                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_R1_RESERVED_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_R1_RESERVED_VALUE_RESET_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_USB0_FORCE_SUSPEND_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_USB0_FORCE_SUSPEND_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_OFFSET ( 0x00000488 )

#define CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_force_suspend */
	stt_uint32 usb0_force_suspend	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_DTE ;


/*****************************************************************************************/
/* usb1_force_suspend                                                                    */
/* usb1_force_suspend                                                                    */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_R1_RESERVED_VALUE                            ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_R1_RESERVED_VALUE_RESET_VALUE                ( 0x0 )
#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_USB1_FORCE_SUSPEND_DEFAULT_VALUE             ( 0x1 )
#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_USB1_FORCE_SUSPEND_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_OFFSET ( 0x0000048C )

#define CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_OFFSET )
#define BL_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1                	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_force_suspend */
	stt_uint32 usb1_force_suspend	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_0                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_0_EC_END_CONV_0_USB_EC_ENDIAN_0_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_0_EC_END_CONV_0_USB_EC_ENDIAN_0_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_0_OFFSET ( 0x00000490 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_0_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_0_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_0 */
	stt_uint32 ec_end_conv_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_0_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_1                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_1_EC_END_CONV_1_USB_EC_ENDIAN_1_VALUE             ( 0x7 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_1_EC_END_CONV_1_USB_EC_ENDIAN_1_VALUE_RESET_VALUE ( 0x7 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_1_OFFSET ( 0x00000494 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_1_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_1_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_1 */
	stt_uint32 ec_end_conv_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_1_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_2                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_2_EC_END_CONV_2_USB_EC_ENDIAN_2_VALUE             ( 0x55555555 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_2_EC_END_CONV_2_USB_EC_ENDIAN_2_VALUE_RESET_VALUE ( 0x55555555 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_2_OFFSET ( 0x00000498 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_2_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_2_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_2_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_2_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_2_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_2_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_2 */
	stt_uint32 ec_end_conv_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_2_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_3                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_3_EC_END_CONV_3_USB_EC_ENDIAN_3_VALUE             ( 0x23 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_3_EC_END_CONV_3_USB_EC_ENDIAN_3_VALUE_RESET_VALUE ( 0x23 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_3_OFFSET ( 0x0000049C )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_3_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_3_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_3_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_3_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_3_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_3_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_3 */
	stt_uint32 ec_end_conv_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_3_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_4                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_4_EC_END_CONV_4_USB_EC_ENDIAN_4_VALUE             ( 0xAAAAAAAA )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_4_EC_END_CONV_4_USB_EC_ENDIAN_4_VALUE_RESET_VALUE ( 0xAAAAAAAA )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_4_OFFSET ( 0x000004A0 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_4_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_4_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_4_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_4_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_4_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_4_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_4 */
	stt_uint32 ec_end_conv_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_4_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_5                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_5_EC_END_CONV_5_USB_EC_ENDIAN_5_VALUE             ( 0x181 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_5_EC_END_CONV_5_USB_EC_ENDIAN_5_VALUE_RESET_VALUE ( 0x181 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_5_OFFSET ( 0x000004A4 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_5_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_5_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_5_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_5_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_5_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_5_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_5 */
	stt_uint32 ec_end_conv_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_5_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_6                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_6_EC_END_CONV_6_USB_EC_ENDIAN_6_VALUE             ( 0xFFFFFFFF )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_6_EC_END_CONV_6_USB_EC_ENDIAN_6_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_6_OFFSET ( 0x000004A8 )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_6_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_6_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_6_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_6_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_6_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_6_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_6 */
	stt_uint32 ec_end_conv_6	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_6_DTE ;


/*****************************************************************************************/
/* usb_ec_endian_7                                                                       */
/* ec2ahb endian conversion configuration                                                */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_7_EC_END_CONV_7_USB_EC_ENDIAN_7_VALUE             ( 0x881 )
#define CE_USB_BLOCK_REGFILE_EC_END_CONV_7_EC_END_CONV_7_USB_EC_ENDIAN_7_VALUE_RESET_VALUE ( 0x881 )


#define CE_USB_BLOCK_REGFILE_EC_END_CONV_7_OFFSET ( 0x000004AC )

#define CE_USB_BLOCK_REGFILE_EC_END_CONV_7_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_EC_END_CONV_7_OFFSET )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_7_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_7_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_EC_END_CONV_7_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_EC_END_CONV_7_ADDRESS ), (v) )

typedef struct
{
	/* usb_ec_endian_7 */
	stt_uint32 ec_end_conv_7	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_EC_END_CONV_7_DTE ;


/*****************************************************************************************/
/* ENDIAN_CONV_CFG                                                                       */
/* bypass descriptor and data endian conversion                                          */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_R1_R1_VALUE                                  ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_R1_R1_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB1_END_VAL_END_VAL_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB1_END_VAL_END_VAL_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB0_END_VAL_END_VAL_VALUE                   ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB0_END_VAL_END_VAL_VALUE_RESET_VALUE       ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB1_END_BYPASS_END_BYPASS_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB1_END_BYPASS_END_BYPASS_VALUE_RESET_VALUE ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB0_END_BYPASS_END_BYPASS_VALUE             ( 0x0 )
#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_USB0_END_BYPASS_END_BYPASS_VALUE_RESET_VALUE ( 0x0 )


#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_OFFSET ( 0x000004B0 )

#define CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_OFFSET )
#define BL_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_ADDRESS ), (v) )

typedef struct
{
	/* RESERVED */
	stt_uint32 r1             	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_endian_val */
	stt_uint32 usb1_end_val   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_endian_val */
	stt_uint32 usb0_end_val   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_endian_bypass */
	stt_uint32 usb1_end_bypass	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_endian_bypass */
	stt_uint32 usb0_end_bypass	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_DTE ;


/*****************************************************************************************/
/* test_mode_register_0                                                                  */
/* test_mode_register_0                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_TEST_MODE_REGISTER_0_DEFAULT_VALUE             ( 0x4C8 )
#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_TEST_MODE_REGISTER_0_DEFAULT_VALUE_RESET_VALUE ( 0x4C8 )


#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_OFFSET ( 0x000004C0 )

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_OFFSET )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_ADDRESS ), (v) )

typedef struct
{
	/* test_mode_register_0 */
	stt_uint32 test_mode_register_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_DTE ;


/*****************************************************************************************/
/* test_mode_register_1                                                                  */
/* test_mode_register_1                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_TEST_MODE_REGISTER_1_DEFAULT_VALUE             ( 0x37206000 )
#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_TEST_MODE_REGISTER_1_DEFAULT_VALUE_RESET_VALUE ( 0x37206000 )


#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_OFFSET ( 0x000004C4 )

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_OFFSET )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_ADDRESS ), (v) )

typedef struct
{
	/* test_mode_register_1 */
	stt_uint32 test_mode_register_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_DTE ;


/*****************************************************************************************/
/* test_mode_register_2                                                                  */
/* test_mode_register_2                                                                  */
/*****************************************************************************************/

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_TEST_MODE_REGISTER_2_DEFAULT_VALUE             ( 0x1C0 )
#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_TEST_MODE_REGISTER_2_DEFAULT_VALUE_RESET_VALUE ( 0x1C0 )


#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_OFFSET ( 0x000004C8 )

#define CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_ADDRESS   	( CE_USB_BLOCK_REGFILE_ADDRESS + CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_OFFSET )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_READ( r ) 	BL_READ_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_ADDRESS ), (r) )
#define BL_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_WRITE( v )	BL_WRITE_32( ( CE_USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_ADDRESS ), (v) )

typedef struct
{
	/* test_mode_register_2 */
	stt_uint32 test_mode_register_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_DTE ;


typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI0_CAP_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI0_OPT_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI0_SYN_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_OHCI0_OPT_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_OHCI0_SYN_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI1_CAP_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI1_OPT_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_EHCI1_SYN_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_OHCI1_OPT_REGS_DTE ;

typedef struct
{}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_OHCI1_SYN_REGS_DTE ;

typedef struct
{
	/* OPMODE0 */
	USB_BLOCK_REGFILE_OPMODE0_DTE opmode0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OPMODE1 */
	USB_BLOCK_REGFILE_OPMODE1_DTE opmode1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* WORDINTERFACE0 */
	USB_BLOCK_REGFILE_WORDINTERFACE0_DTE wordinterface0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* WORDINTERFACE1 */
	USB_BLOCK_REGFILE_WORDINTERFACE1_DTE wordinterface1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DPPULLDOWN0 */
	USB_BLOCK_REGFILE_DPPULLDOWN0_DTE dppulldown0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DPPULLDOWN1 */
	USB_BLOCK_REGFILE_DPPULLDOWN1_DTE dppulldown1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFEN0 */
	USB_BLOCK_REGFILE_TXBITSTUFFEN0_DTE txbitstuffen0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFEN1 */
	USB_BLOCK_REGFILE_TXBITSTUFFEN1_DTE txbitstuffen1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFENH0 */
	USB_BLOCK_REGFILE_TXBITSTUFFENH0_DTE txbitstuffenh0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXBITSTUFFENH1 */
	USB_BLOCK_REGFILE_TXBITSTUFFENH1_DTE txbitstuffenh1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OTGDISABLE0 */
	USB_BLOCK_REGFILE_OTGDISABLE0_DTE otgdisable0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DMPULLDOWN0 */
	USB_BLOCK_REGFILE_DMPULLDOWN0_DTE dmpulldown0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXTSEL0 */
	USB_BLOCK_REGFILE_VBUSVLDEXTSEL0_DTE vbusvldextsel0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DMPULLDOWN1 */
	USB_BLOCK_REGFILE_DMPULLDOWN1_DTE dmpulldown1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXT0 */
	USB_BLOCK_REGFILE_VBUSVLDEXT0_DTE vbusvldext0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVLDEXT1 */
	USB_BLOCK_REGFILE_VBUSVLDEXT1_DTE vbusvldext1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DRVVBUS0 */
	USB_BLOCK_REGFILE_DRVVBUS0_DTE drvvbus0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CHRGVBUS0 */
	USB_BLOCK_REGFILE_CHRGVBUS0_DTE chrgvbus0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CHRGVBUS1 */
	USB_BLOCK_REGFILE_CHRGVBUS1_DTE chrgvbus1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DISCHRGVBUS0 */
	USB_BLOCK_REGFILE_DISCHRGVBUS0_DTE dischrgvbus0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved2 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IDPULLUP0 */
	USB_BLOCK_REGFILE_IDPULLUP0_DTE idpullup0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ATERESET */
	USB_BLOCK_REGFILE_ATERESET_DTE atereset __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved3 [ 32 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTEN */
	USB_BLOCK_REGFILE_BISTEN_DTE bisten __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LSBIST */
	USB_BLOCK_REGFILE_LSBIST_DTE lsbist __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* FSBIST */
	USB_BLOCK_REGFILE_FSBIST_DTE fsbist __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HSBIST */
	USB_BLOCK_REGFILE_HSBIST_DTE hsbist __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LOOPBACKENB0 */
	USB_BLOCK_REGFILE_LOOPBACKENB0_DTE loopbackenb0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LOOPBACKENB1 */
	USB_BLOCK_REGFILE_LOOPBACKENB1_DTE loopbackenb1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REFCLKDIV */
	USB_BLOCK_REGFILE_REFCLKDIV_DTE refclkdiv __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REFCLKSEL */
	USB_BLOCK_REGFILE_REFCLKSEL_DTE refclksel __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMPDISTUNE0 */
	USB_BLOCK_REGFILE_COMPDISTUNE0_DTE compdistune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMPDISTUNE1 */
	USB_BLOCK_REGFILE_COMPDISTUNE1_DTE compdistune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* OTGTUNE */
	USB_BLOCK_REGFILE_OTGTUNE_DTE otgtune __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SQRXTUNE0 */
	USB_BLOCK_REGFILE_SQRXTUNE0_DTE sqrxtune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SQRXTUNE1 */
	USB_BLOCK_REGFILE_SQRXTUNE1_DTE sqrxtune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXFSLSTUNE0 */
	USB_BLOCK_REGFILE_TXFSLSTUNE0_DTE txfslstune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXFSLSTUNE1 */
	USB_BLOCK_REGFILE_TXFSLSTUNE1_DTE txfslstune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXPREEMPHASISTUNE0 */
	USB_BLOCK_REGFILE_TXPREEMPHASISTUNE0_DTE txpreemphasistune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXPREEMPHASISTUNE1 */
	USB_BLOCK_REGFILE_TXPREEMPHASISTUNE1_DTE txpreemphasistune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXRISETUNE0 */
	USB_BLOCK_REGFILE_TXRISETUNE0_DTE txrisetune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXRISETUNE1 */
	USB_BLOCK_REGFILE_TXRISETUNE1_DTE txrisetune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXVREFTUNE0 */
	USB_BLOCK_REGFILE_TXVREFTUNE0_DTE txvreftune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXVREFTUNE1 */
	USB_BLOCK_REGFILE_TXVREFTUNE1_DTE txvreftune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXHSXVTUNE0 */
	USB_BLOCK_REGFILE_TXHSXVTUNE0_DTE txhsxvtune0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TXHSXVTUNE1 */
	USB_BLOCK_REGFILE_TXHSXVTUNE1_DTE txhsxvtune1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* COMMONONN */
	USB_BLOCK_REGFILE_COMMONONN_DTE commononn __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VBUSVALID0 */
	USB_BLOCK_REGFILE_VBUSVALID0_DTE vbusvalid0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved4 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IDDIG0 */
	USB_BLOCK_REGFILE_IDDIG0_DTE iddig0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TESTDATAIN0 */
	USB_BLOCK_REGFILE_TESTDATAIN0_DTE testdatain0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AVALID0 */
	USB_BLOCK_REGFILE_AVALID0_DTE avalid0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TESTDATAIN1 */
	USB_BLOCK_REGFILE_TESTDATAIN1_DTE testdatain1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BVALID0 */
	USB_BLOCK_REGFILE_BVALID0_DTE bvalid0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VATESTENB */
	USB_BLOCK_REGFILE_VATESTENB_DTE vatestenb __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SESSEND0 */
	USB_BLOCK_REGFILE_SESSEND0_DTE sessend0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SIDDQ */
	USB_BLOCK_REGFILE_SIDDQ_DTE siddq __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTERROR */
	USB_BLOCK_REGFILE_BISTERROR_DTE bisterror __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BISTDONE */
	USB_BLOCK_REGFILE_BISTDONE_DTE bistdone __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr16_i */
	USB_BLOCK_REGFILE_USB0_SS_ENA_INCR16_I_DTE usb0_ss_ena_incr16_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr16_i */
	USB_BLOCK_REGFILE_USB1_SS_ENA_INCR16_I_DTE usb1_ss_ena_incr16_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr4_i */
	USB_BLOCK_REGFILE_USB0_SS_ENA_INCR4_I_DTE usb0_ss_ena_incr4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr4_i */
	USB_BLOCK_REGFILE_USB1_SS_ENA_INCR4_I_DTE usb1_ss_ena_incr4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incrx_align_i */
	USB_BLOCK_REGFILE_USB0_SS_ENA_INCRX_ALIGN_I_DTE usb0_ss_ena_incrx_align_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incrx_align_i */
	USB_BLOCK_REGFILE_USB1_SS_ENA_INCRX_ALIGN_I_DTE usb1_ss_ena_incrx_align_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved5 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_host_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_HOST_I_DTE usb0_ss_fladj_val_host_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_host_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_HOST_I_DTE usb1_ss_fladj_val_host_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_0_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_0_I_DTE usb0_ss_fladj_val_0_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_1_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_1_I_DTE usb0_ss_fladj_val_1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_2_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_2_I_DTE usb0_ss_fladj_val_2_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_3_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_3_I_DTE usb0_ss_fladj_val_3_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_4_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_4_I_DTE usb0_ss_fladj_val_4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_fladj_val_5_i */
	USB_BLOCK_REGFILE_USB0_SS_FLADJ_VAL_5_I_DTE usb0_ss_fladj_val_5_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_0_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_0_I_DTE usb1_ss_fladj_val_0_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_1_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_1_I_DTE usb1_ss_fladj_val_1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_2_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_2_I_DTE usb1_ss_fladj_val_2_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_3_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_3_I_DTE usb1_ss_fladj_val_3_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_4_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_4_I_DTE usb1_ss_fladj_val_4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_fladj_val_5_i */
	USB_BLOCK_REGFILE_USB1_SS_FLADJ_VAL_5_I_DTE usb1_ss_fladj_val_5_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_utmi_backward_enb_i */
	USB_BLOCK_REGFILE_USB0_SS_UTMI_BACKWARD_ENB_I_DTE usb0_ss_utmi_backward_enb_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_utmi_backward_enb_i */
	USB_BLOCK_REGFILE_USB1_SS_UTMI_BACKWARD_ENB_I_DTE usb1_ss_utmi_backward_enb_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_resume_utmi_pls_dis_i */
	USB_BLOCK_REGFILE_USB0_SS_RESUME_UTMI_PLS_DIS_I_DTE usb0_ss_resume_utmi_pls_dis_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_resume_utmi_pls_dis_i */
	USB_BLOCK_REGFILE_USB1_SS_RESUME_UTMI_PLS_DIS_I_DTE usb1_ss_resume_utmi_pls_dis_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_autoppd_on_overcur_en_i */
	USB_BLOCK_REGFILE_USB0_SS_AUTOPPD_ON_OVERCUR_EN_I_DTE usb0_ss_autoppd_on_overcur_en_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_autoppd_on_overcur_en_i */
	USB_BLOCK_REGFILE_USB1_SS_AUTOPPD_ON_OVERCUR_EN_I_DTE usb1_ss_autoppd_on_overcur_en_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci_0_cntsel_i_n */
	USB_BLOCK_REGFILE_OHCI_0_CNTSEL_I_N_DTE ohci_0_cntsel_i_n __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci_1_cntsel_i_n */
	USB_BLOCK_REGFILE_OHCI_1_CNTSEL_I_N_DTE ohci_1_cntsel_i_n __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_app_start_clk_i */
	USB_BLOCK_REGFILE_USB0_APP_START_CLK_I_DTE usb0_app_start_clk_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_app_start_clk_i */
	USB_BLOCK_REGFILE_USB1_APP_START_CLK_I_DTE usb1_app_start_clk_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_susp_lgcy_i */
	USB_BLOCK_REGFILE_USB0_OHCI_SUSP_LGCY_I_DTE usb0_ohci_susp_lgcy_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_susp_lgcy_i */
	USB_BLOCK_REGFILE_USB1_OHCI_SUSP_LGCY_I_DTE usb1_ohci_susp_lgcy_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_7_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_7_I_DTE usb0_phy_vstatus_7_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_6_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_6_I_DTE usb0_phy_vstatus_6_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_5_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_5_I_DTE usb0_phy_vstatus_5_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_4_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_4_I_DTE usb0_phy_vstatus_4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_3_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_3_I_DTE usb0_phy_vstatus_3_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_2_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_2_I_DTE usb0_phy_vstatus_2_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_1_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_1_I_DTE usb0_phy_vstatus_1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_vstatus_0_i */
	USB_BLOCK_REGFILE_USB0_PHY_VSTATUS_0_I_DTE usb0_phy_vstatus_0_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_7_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_7_I_DTE usb1_phy_vstatus_7_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_6_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_6_I_DTE usb1_phy_vstatus_6_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_5_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_5_I_DTE usb1_phy_vstatus_5_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_4_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_4_I_DTE usb1_phy_vstatus_4_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_3_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_3_I_DTE usb1_phy_vstatus_3_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_2_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_2_I_DTE usb1_phy_vstatus_2_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_1_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_1_I_DTE usb1_phy_vstatus_1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_vstatus_0_i */
	USB_BLOCK_REGFILE_USB1_PHY_VSTATUS_0_I_DTE usb1_phy_vstatus_0_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_sof_counter */
	USB_BLOCK_REGFILE_USB0_OHCI_SOF_COUNTER_DTE usb0_ohci_sof_counter __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_sof_counter */
	USB_BLOCK_REGFILE_USB1_OHCI_SOF_COUNTER_DTE usb1_ohci_sof_counter __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_sys_interrupt_i */
	USB_BLOCK_REGFILE_USB0_SYS_INTERRUPT_I_DTE usb0_sys_interrupt_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_sys_interrupt_i */
	USB_BLOCK_REGFILE_USB1_SYS_INTERRUPT_I_DTE usb1_sys_interrupt_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_io_hit_i */
	USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IO_HIT_I_DTE usb0_ohci_0_app_io_hit_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_io_hit_i */
	USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IO_HIT_I_DTE usb1_ohci_0_app_io_hit_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_irq1_i */
	USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ1_I_DTE usb0_ohci_0_app_irq1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_irq1_i */
	USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ1_I_DTE usb1_ohci_0_app_irq1_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_0_app_irq12_i */
	USB_BLOCK_REGFILE_USB0_OHCI_0_APP_IRQ12_I_DTE usb0_ohci_0_app_irq12_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_0_app_irq12_i */
	USB_BLOCK_REGFILE_USB1_OHCI_0_APP_IRQ12_I_DTE usb1_ohci_0_app_irq12_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_ohci_ehci_sel */
	USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_DTE usb0_ahb_ohci_ehci_sel __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_ohci_ehci_sel */
	USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_DTE usb1_ahb_ohci_ehci_sel __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_ohci_ehci_sel_cb */
	USB_BLOCK_REGFILE_USB0_AHB_OHCI_EHCI_SEL_CB_DTE usb0_ahb_ohci_ehci_sel_cb __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_ohci_ehci_sel_cb */
	USB_BLOCK_REGFILE_USB1_AHB_OHCI_EHCI_SEL_CB_DTE usb1_ahb_ohci_ehci_sel_cb __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_prt_pwr_o */
	USB_BLOCK_REGFILE_USB0_EHCI_PRT_PWR_O_DTE usb0_ehci_prt_pwr_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_prt_pwr_o */
	USB_BLOCK_REGFILE_USB1_EHCI_PRT_PWR_O_DTE usb1_ehci_prt_pwr_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_xfer_cnt_o */
	USB_BLOCK_REGFILE_USB0_EHCI_XFER_CNT_O_DTE usb0_ehci_xfer_cnt_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_xfer_cnt_o */
	USB_BLOCK_REGFILE_USB1_EHCI_XFER_CNT_O_DTE usb1_ehci_xfer_cnt_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_xfer_prdc_o */
	USB_BLOCK_REGFILE_USB0_EHCI_XFER_PRDC_O_DTE usb0_ehci_xfer_prdc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_xfer_prdc_o */
	USB_BLOCK_REGFILE_USB1_EHCI_XFER_PRDC_O_DTE usb1_ehci_xfer_prdc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_bufacc_o */
	USB_BLOCK_REGFILE_USB0_EHCI_BUFACC_O_DTE usb0_ehci_bufacc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_bufacc_o */
	USB_BLOCK_REGFILE_USB1_EHCI_BUFACC_O_DTE usb1_ehci_bufacc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_usbsts_o */
	USB_BLOCK_REGFILE_USB0_EHCI_USBSTS_O_DTE usb0_ehci_usbsts_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_usbsts_o */
	USB_BLOCK_REGFILE_USB1_EHCI_USBSTS_O_DTE usb1_ehci_usbsts_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ehci_lpsmc_state_o */
	USB_BLOCK_REGFILE_USB0_EHCI_LPSMC_STATE_O_DTE usb0_ehci_lpsmc_state_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ehci_lpsmc_state_o */
	USB_BLOCK_REGFILE_USB1_EHCI_LPSMC_STATE_O_DTE usb1_ehci_lpsmc_state_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_globalsuspend_o */
	USB_BLOCK_REGFILE_USB0_OHCI_GLOBALSUSPEND_O_DTE usb0_ohci_globalsuspend_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_globalsuspend_o */
	USB_BLOCK_REGFILE_USB1_OHCI_GLOBALSUSPEND_O_DTE usb1_ohci_globalsuspend_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_rwe_o */
	USB_BLOCK_REGFILE_USB0_OHCI_RWE_O_DTE usb0_ohci_rwe_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_rwe_o */
	USB_BLOCK_REGFILE_USB1_OHCI_RWE_O_DTE usb1_ohci_rwe_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_rmtwkp_o */
	USB_BLOCK_REGFILE_USB0_OHCI_RMTWKP_O_DTE usb0_ohci_rmtwkp_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_rmtwkp_o */
	USB_BLOCK_REGFILE_USB1_OHCI_RMTWKP_O_DTE usb1_ohci_rmtwkp_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_drwe_o */
	USB_BLOCK_REGFILE_USB0_OHCI_DRWE_O_DTE usb0_ohci_drwe_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_drwe_o */
	USB_BLOCK_REGFILE_USB1_OHCI_DRWE_O_DTE usb1_ohci_drwe_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_ccs_o */
	USB_BLOCK_REGFILE_USB0_OHCI_CCS_O_DTE usb0_ohci_ccs_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_ccs_o */
	USB_BLOCK_REGFILE_USB1_OHCI_CCS_O_DTE usb1_ohci_ccs_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ohci_bufacc_o */
	USB_BLOCK_REGFILE_USB0_OHCI_BUFACC_O_DTE usb0_ohci_bufacc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ohci_bufacc_o */
	USB_BLOCK_REGFILE_USB1_OHCI_BUFACC_O_DTE usb1_ohci_bufacc_o __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_simulation_mode_i */
	USB_BLOCK_REGFILE_USB0_SS_SIMULATION_MODE_I_DTE usb0_ss_simulation_mode_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_simulation_mode_i */
	USB_BLOCK_REGFILE_USB1_SS_SIMULATION_MODE_I_DTE usb1_ss_simulation_mode_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLEEPM0 */
	USB_BLOCK_REGFILE_SLEEPM0_DTE sleepm0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLEEPM1 */
	USB_BLOCK_REGFILE_SLEEPM1_DTE sleepm1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_0 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_0_DTE usb0_ahb_cfg_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_1 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_1_DTE usb0_ahb_cfg_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_2 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_2_DTE usb0_ahb_cfg_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_3 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_3_DTE usb0_ahb_cfg_3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_4 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_4_DTE usb0_ahb_cfg_4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_5 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_5_DTE usb0_ahb_cfg_5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_6 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_6_DTE usb0_ahb_cfg_6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_7 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_7_DTE usb0_ahb_cfg_7 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_8 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_8_DTE usb0_ahb_cfg_8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_9 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_9_DTE usb0_ahb_cfg_9 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_10 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_10_DTE usb0_ahb_cfg_10 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_11 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_11_DTE usb0_ahb_cfg_11 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_12 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_12_DTE usb0_ahb_cfg_12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_13 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_13_DTE usb0_ahb_cfg_13 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_14 */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_14_DTE usb0_ahb_cfg_14 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_0 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_0_DTE usb1_ahb_cfg_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_1 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_1_DTE usb1_ahb_cfg_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_2 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_2_DTE usb1_ahb_cfg_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_3 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_3_DTE usb1_ahb_cfg_3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_4 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_4_DTE usb1_ahb_cfg_4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_5 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_5_DTE usb1_ahb_cfg_5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_6 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_6_DTE usb1_ahb_cfg_6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_7 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_7_DTE usb1_ahb_cfg_7 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_8 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_8_DTE usb1_ahb_cfg_8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_9 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_9_DTE usb1_ahb_cfg_9 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_10 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_10_DTE usb1_ahb_cfg_10 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_11 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_11_DTE usb1_ahb_cfg_11 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_12 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_12_DTE usb1_ahb_cfg_12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_13 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_13_DTE usb1_ahb_cfg_13 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_14 */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_14_DTE usb1_ahb_cfg_14 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_test_addr */
	USB_BLOCK_REGFILE_USB0_TEST_ADDR_DTE usb0_test_addr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_test_addr */
	USB_BLOCK_REGFILE_USB1_TEST_ADDR_DTE usb1_test_addr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_testdataoutsel */
	USB_BLOCK_REGFILE_USB0_TESTDATAOUTSEL_DTE usb0_testdataoutsel __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_testdataoutsel */
	USB_BLOCK_REGFILE_USB1_TESTDATAOUTSEL_DTE usb1_testdataoutsel __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_testclk */
	USB_BLOCK_REGFILE_USB0_TESTCLK_DTE usb0_testclk __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_testclk */
	USB_BLOCK_REGFILE_USB1_TESTCLK_DTE usb1_testclk __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_phy_test_mode */
	USB_BLOCK_REGFILE_USB0_PHY_TEST_MODE_DTE usb0_phy_test_mode __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_phy_test_mode */
	USB_BLOCK_REGFILE_USB1_PHY_TEST_MODE_DTE usb1_phy_test_mode __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved6 [ 40 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_0 */
	USB_BLOCK_REGFILE_USB_EC_CFG_0_DTE usb_ec_cfg_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_1 */
	USB_BLOCK_REGFILE_USB_EC_CFG_1_DTE usb_ec_cfg_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_2 */
	USB_BLOCK_REGFILE_USB_EC_CFG_2_DTE usb_ec_cfg_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_3 */
	USB_BLOCK_REGFILE_USB_EC_CFG_3_DTE usb_ec_cfg_3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_4 */
	USB_BLOCK_REGFILE_USB_EC_CFG_4_DTE usb_ec_cfg_4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_5 */
	USB_BLOCK_REGFILE_USB_EC_CFG_5_DTE usb_ec_cfg_5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_6 */
	USB_BLOCK_REGFILE_USB_EC_CFG_6_DTE usb_ec_cfg_6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_7 */
	USB_BLOCK_REGFILE_USB_EC_CFG_7_DTE usb_ec_cfg_7 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_8 */
	USB_BLOCK_REGFILE_USB_EC_CFG_8_DTE usb_ec_cfg_8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_9 */
	USB_BLOCK_REGFILE_USB_EC_CFG_9_DTE usb_ec_cfg_9 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_10 */
	USB_BLOCK_REGFILE_USB_EC_CFG_10_DTE usb_ec_cfg_10 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_11 */
	USB_BLOCK_REGFILE_USB_EC_CFG_11_DTE usb_ec_cfg_11 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_cfg_12 */
	USB_BLOCK_REGFILE_USB_EC_CFG_12_DTE usb_ec_cfg_12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_haddr_mask */
	USB_BLOCK_REGFILE_USB0_AHB_HADDR_MASK_DTE usb0_ahb_haddr_mask __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_haddr_mask */
	USB_BLOCK_REGFILE_USB1_AHB_HADDR_MASK_DTE usb1_ahb_haddr_mask __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* common_ahb_haddr_mask */
	USB_BLOCK_REGFILE_COMMON_AHB_HADDR_MASK_DTE common_ahb_haddr_mask __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_interrupt_mask */
	USB_BLOCK_REGFILE_USB0_INTERRUPT_MASK_DTE usb0_interrupt_mask __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_interrupt_mask */
	USB_BLOCK_REGFILE_USB1_INTERRUPT_MASK_DTE usb1_interrupt_mask __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_interrupt_status */
	USB_BLOCK_REGFILE_USB0_INTERRUPT_STATUS_DTE usb0_interrupt_status __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_interrupt_status */
	USB_BLOCK_REGFILE_USB1_INTERRUPT_STATUS_DTE usb1_interrupt_status __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_test_interrupt */
	USB_BLOCK_REGFILE_USB0_TEST_INTERRUPT_DTE usb0_test_interrupt __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_test_interrupt */
	USB_BLOCK_REGFILE_USB1_TEST_INTERRUPT_DTE usb1_test_interrupt __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved7 [ 40 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_ena_incr8_i */
	USB_BLOCK_REGFILE_USB0_SS_ENA_INCR8_I_DTE usb0_ss_ena_incr8_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_ena_incr8_i */
	USB_BLOCK_REGFILE_USB1_SS_ENA_INCR8_I_DTE usb1_ss_ena_incr8_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_power_state_i */
	USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_I_DTE usb0_ss_power_state_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_power_state_i */
	USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_I_DTE usb1_ss_power_state_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_nxt_power_state_valid_i */
	USB_BLOCK_REGFILE_USB0_SS_NXT_POWER_STATE_VALID_I_DTE usb0_ss_nxt_power_state_valid_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_nxt_power_state_valid_i */
	USB_BLOCK_REGFILE_USB1_SS_NXT_POWER_STATE_VALID_I_DTE usb1_ss_nxt_power_state_valid_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_next_power_state_i */
	USB_BLOCK_REGFILE_USB0_SS_NEXT_POWER_STATE_I_DTE usb0_ss_next_power_state_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_next_power_state_i */
	USB_BLOCK_REGFILE_USB1_SS_NEXT_POWER_STATE_I_DTE usb1_ss_next_power_state_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ss_power_state_valid_i */
	USB_BLOCK_REGFILE_USB0_SS_POWER_STATE_VALID_I_DTE usb0_ss_power_state_valid_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ss_power_state_valid_i */
	USB_BLOCK_REGFILE_USB1_SS_POWER_STATE_VALID_I_DTE usb1_ss_power_state_valid_i __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved8 [ 24 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_0_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_0_SWAP_DTE usb0_ahb_cfg_0_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_1_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_1_SWAP_DTE usb0_ahb_cfg_1_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_2_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_2_SWAP_DTE usb0_ahb_cfg_2_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_3_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_3_SWAP_DTE usb0_ahb_cfg_3_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_4_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_4_SWAP_DTE usb0_ahb_cfg_4_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_5_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_5_SWAP_DTE usb0_ahb_cfg_5_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_6_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_6_SWAP_DTE usb0_ahb_cfg_6_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_7_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_7_SWAP_DTE usb0_ahb_cfg_7_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_8_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_8_SWAP_DTE usb0_ahb_cfg_8_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_9_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_9_SWAP_DTE usb0_ahb_cfg_9_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_10_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_10_SWAP_DTE usb0_ahb_cfg_10_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_11_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_11_SWAP_DTE usb0_ahb_cfg_11_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_12_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_12_SWAP_DTE usb0_ahb_cfg_12_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_13_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_13_SWAP_DTE usb0_ahb_cfg_13_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_ahb_cfg_14_swap */
	USB_BLOCK_REGFILE_USB0_AHB_CFG_14_SWAP_DTE usb0_ahb_cfg_14_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved9 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_0_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_0_SWAP_DTE usb1_ahb_cfg_0_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_1_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_1_SWAP_DTE usb1_ahb_cfg_1_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_2_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_2_SWAP_DTE usb1_ahb_cfg_2_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_3_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_3_SWAP_DTE usb1_ahb_cfg_3_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_4_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_4_SWAP_DTE usb1_ahb_cfg_4_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_5_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_5_SWAP_DTE usb1_ahb_cfg_5_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_6_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_6_SWAP_DTE usb1_ahb_cfg_6_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_7_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_7_SWAP_DTE usb1_ahb_cfg_7_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_8_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_8_SWAP_DTE usb1_ahb_cfg_8_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_9_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_9_SWAP_DTE usb1_ahb_cfg_9_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_10_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_10_SWAP_DTE usb1_ahb_cfg_10_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_11_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_11_SWAP_DTE usb1_ahb_cfg_11_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_12_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_12_SWAP_DTE usb1_ahb_cfg_12_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_13_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_13_SWAP_DTE usb1_ahb_cfg_13_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_ahb_cfg_14_swap */
	USB_BLOCK_REGFILE_USB1_AHB_CFG_14_SWAP_DTE usb1_ahb_cfg_14_swap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved10 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_disable_suspend */
	USB_BLOCK_REGFILE_USB0_DISABLE_SUSPEND_DTE usb0_disable_suspend __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_disable_suspend */
	USB_BLOCK_REGFILE_USB1_DISABLE_SUSPEND_DTE usb1_disable_suspend __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb0_force_suspend */
	USB_BLOCK_REGFILE_USB0_FORCE_SUSPEND_DTE usb0_force_suspend __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb1_force_suspend */
	USB_BLOCK_REGFILE_USB1_FORCE_SUSPEND_DTE usb1_force_suspend __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_0 */
	USB_BLOCK_REGFILE_EC_END_CONV_0_DTE ec_end_conv_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_1 */
	USB_BLOCK_REGFILE_EC_END_CONV_1_DTE ec_end_conv_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_2 */
	USB_BLOCK_REGFILE_EC_END_CONV_2_DTE ec_end_conv_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_3 */
	USB_BLOCK_REGFILE_EC_END_CONV_3_DTE ec_end_conv_3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_4 */
	USB_BLOCK_REGFILE_EC_END_CONV_4_DTE ec_end_conv_4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_5 */
	USB_BLOCK_REGFILE_EC_END_CONV_5_DTE ec_end_conv_5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_6 */
	USB_BLOCK_REGFILE_EC_END_CONV_6_DTE ec_end_conv_6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* usb_ec_endian_7 */
	USB_BLOCK_REGFILE_EC_END_CONV_7_DTE ec_end_conv_7 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ENDIAN_CONV_CFG */
	USB_BLOCK_REGFILE_ENDIAN_CONV_CFG_DTE endian_conv_cfg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved11 [ 12 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* test_mode_register_0 */
	USB_BLOCK_REGFILE_TEST_MODE_REGISTER_0_DTE test_mode_register_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* test_mode_register_1 */
	USB_BLOCK_REGFILE_TEST_MODE_REGISTER_1_DTE test_mode_register_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* test_mode_register_2 */
	USB_BLOCK_REGFILE_TEST_MODE_REGISTER_2_DTE test_mode_register_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_REGFILE_DTE ;

typedef struct
{
	/* ehci0_cap_regs function */
	USB_BLOCK_EHCI0_CAP_REGS_DTE ehci0_cap_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved0 [ 16 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ehci0_opt_regs function */
	USB_BLOCK_EHCI0_OPT_REGS_DTE ehci0_opt_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 128 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ehci0_syn_regs function */
	USB_BLOCK_EHCI0_SYN_REGS_DTE ehci0_syn_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved2 [ 112 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci0_opt_regs function */
	USB_BLOCK_OHCI0_OPT_REGS_DTE ohci0_opt_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved3 [ 152 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci0_syn_regs function */
	USB_BLOCK_OHCI0_SYN_REGS_DTE ohci0_syn_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved4 [ 616 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ehci1_cap_regs function */
	USB_BLOCK_EHCI1_CAP_REGS_DTE ehci1_cap_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved5 [ 16 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ehci1_opt_regs function */
	USB_BLOCK_EHCI1_OPT_REGS_DTE ehci1_opt_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved6 [ 128 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ehci1_syn_regs function */
	USB_BLOCK_EHCI1_SYN_REGS_DTE ehci1_syn_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved7 [ 112 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci1_opt_regs function */
	USB_BLOCK_OHCI1_OPT_REGS_DTE ohci1_opt_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved8 [ 152 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ohci1_syn_regs function */
	USB_BLOCK_OHCI1_SYN_REGS_DTE ohci1_syn_regs __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved9 [ 616 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* regfile function */
	USB_BLOCK_REGFILE_DTE regfile __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
USB_BLOCK_DTE ;

typedef struct
{
	/* BLOCK */
	USB_BLOCK_DTE block __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__ 
USB_DTE ;
#endif /* USB_H_INCLUDED */

