/*
* <:copyright-BRCM:2012:DUAL/GPL:standard
* 
*    Copyright (c) 2012 Broadcom Corporation
*    All Rights Reserved
* 
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License, version 2, as published by
* the Free Software Foundation (the "GPL").
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* 
* A copy of the GPL is available at http://www.broadcom.com/licenses/GPLv2.php, or by
* writing to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* Boston, MA 02111-1307, USA.
* 
* :> 
*/

#ifndef __PCIE_H_INCLUDED
#define __PCIE_H_INCLUDED

/*  File automatically generated by Reggae at 09/08/2011  17:32:51   */

#include "stt_basic_defs.h"
#include "access_macros.h"
#include "packing.h"

/*****************************************************************************************/
/* PCIe subsystem registers                                                              */
/*****************************************************************************************/

/*****************************************************************************************/
/* Blocks offsets                                                                        */
/*****************************************************************************************/
#define CE_PCIE_CORE_0_OFFSET	( 0x18008000 )
#define CE_PCIE_CORE_1_OFFSET	( 0x1800C000 )
#define CE_PCIE_REGFILE_0_OFFSET	( 0x1800A000 )
#define CE_PCIE_REGFILE_1_OFFSET	( 0x1800E000 )
/*****************************************************************************************/
/* Functions offsets and addresses                                                       */
/*****************************************************************************************/
#define CE_PCIE_CORE_0_RC_OFFSET 	( 0x00000000 )
#define CE_PCIE_CORE_0_RC_ADDRESS	( CE_PCIE_CORE_0_OFFSET + CE_PCIE_CORE_0_RC_OFFSET )

#define CE_PCIE_CORE_1_RC_OFFSET 	( 0x00000000 )
#define CE_PCIE_CORE_1_RC_ADDRESS	( CE_PCIE_CORE_1_OFFSET + CE_PCIE_CORE_1_RC_OFFSET )

#define CE_PCIE_REGFILE_0_CORE_OFFSET 	( 0x00000000 )
#define CE_PCIE_REGFILE_0_CORE_ADDRESS	( CE_PCIE_REGFILE_0_OFFSET + CE_PCIE_REGFILE_0_CORE_OFFSET )

#define CE_PCIE_REGFILE_0_AHB2EC_OFFSET 	( 0x00000118 )
#define CE_PCIE_REGFILE_0_AHB2EC_ADDRESS	( CE_PCIE_REGFILE_0_OFFSET + CE_PCIE_REGFILE_0_AHB2EC_OFFSET )

#define CE_PCIE_REGFILE_0_EC2AHB_OFFSET 	( 0x00000158 )
#define CE_PCIE_REGFILE_0_EC2AHB_ADDRESS	( CE_PCIE_REGFILE_0_OFFSET + CE_PCIE_REGFILE_0_EC2AHB_OFFSET )

#define CE_PCIE_REGFILE_1_CORE_OFFSET 	( 0x00000000 )
#define CE_PCIE_REGFILE_1_CORE_ADDRESS	( CE_PCIE_REGFILE_1_OFFSET + CE_PCIE_REGFILE_1_CORE_OFFSET )

#define CE_PCIE_REGFILE_1_AHB2EC_OFFSET 	( 0x00000118 )
#define CE_PCIE_REGFILE_1_AHB2EC_ADDRESS	( CE_PCIE_REGFILE_1_OFFSET + CE_PCIE_REGFILE_1_AHB2EC_OFFSET )

#define CE_PCIE_REGFILE_1_EC2AHB_OFFSET 	( 0x00000158 )
#define CE_PCIE_REGFILE_1_EC2AHB_ADDRESS	( CE_PCIE_REGFILE_1_OFFSET + CE_PCIE_REGFILE_1_EC2AHB_OFFSET )

/*   'i' is block index    */
/*   'j' is function index */
/*   'e' is function entry */
/*   'k' is register index */

/*****************************************************************************************/
/* ID                                                                                    */
/* ID                                                                                    */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_ID_DEVICEID_DEVICEID_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_ID_DEVICEID_DEVICEID_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_ID_VENDORID_VENDORID_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_ID_VENDORID_VENDORID_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_ID_OFFSET ( 0x00000000 )

#define CE_PCIE_CORE_0_RC_ID_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_ID_OFFSET )
#define BL_PCIE_CORE_0_RC_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_ID_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_ID_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_ID_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_ID_OFFSET )
#define BL_PCIE_CORE_1_RC_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_ID_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_ID_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_ID_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_ID_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_ID_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_ID_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_ID_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DeviceID */
	stt_uint32 deviceid	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VendorID */
	stt_uint32 vendorid	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_ID_DTE ;


/*****************************************************************************************/
/* STS_CMD_RGSTR                                                                         */
/* STS_CMD_RGSTR                                                                         */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_STS_CMD_RGSTR_STS_RGSTR_STS_RGSTR_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_STS_CMD_RGSTR_STS_RGSTR_STS_RGSTR_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_STS_CMD_RGSTR_CMD_RGSTR_CMD_RGSTR_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_STS_CMD_RGSTR_CMD_RGSTR_CMD_RGSTR_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_STS_CMD_RGSTR_OFFSET ( 0x00000004 )

#define CE_PCIE_CORE_0_RC_STS_CMD_RGSTR_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_STS_CMD_RGSTR_OFFSET )
#define BL_PCIE_CORE_0_RC_STS_CMD_RGSTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_STS_CMD_RGSTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_STS_CMD_RGSTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_STS_CMD_RGSTR_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_STS_CMD_RGSTR_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_STS_CMD_RGSTR_OFFSET )
#define BL_PCIE_CORE_1_RC_STS_CMD_RGSTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_STS_CMD_RGSTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_STS_CMD_RGSTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_STS_CMD_RGSTR_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_STS_CMD_RGSTR_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_STS_CMD_RGSTR_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_STS_CMD_RGSTR_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_STS_CMD_RGSTR_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_STS_CMD_RGSTR_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* STS_RGSTR */
	stt_uint32 sts_rgstr	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CMD_RGSTR */
	stt_uint32 cmd_rgstr	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_STS_CMD_RGSTR_DTE ;


/*****************************************************************************************/
/* CLS_REV_ID                                                                            */
/* CLS_REV_ID                                                                            */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_CLS_REV_ID_CLS_CD_CLASS_CODE_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_CLS_REV_ID_CLS_CD_CLASS_CODE_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_CLS_REV_ID_REVID_REVID_VALUE                   ( 0x0 )
#define CE_PCIE_CORE_RC_CLS_REV_ID_REVID_REVID_VALUE_RESET_VALUE       ( 0x0 )


#define CE_PCIE_CORE_RC_CLS_REV_ID_OFFSET ( 0x00000008 )

#define CE_PCIE_CORE_0_RC_CLS_REV_ID_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_CLS_REV_ID_OFFSET )
#define BL_PCIE_CORE_0_RC_CLS_REV_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_CLS_REV_ID_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_CLS_REV_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_CLS_REV_ID_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_CLS_REV_ID_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_CLS_REV_ID_OFFSET )
#define BL_PCIE_CORE_1_RC_CLS_REV_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_CLS_REV_ID_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_CLS_REV_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_CLS_REV_ID_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_CLS_REV_ID_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_CLS_REV_ID_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_CLS_REV_ID_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_CLS_REV_ID_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_CLS_REV_ID_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CLS_CD */
	stt_uint32 cls_cd	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RevID */
	stt_uint32 revid 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_CLS_REV_ID_DTE ;


/*****************************************************************************************/
/* BIST_HEAD_LAT_CACH                                                                    */
/* BIST_HEAD_LAT_CACH                                                                    */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_BIST_BIST_VALUE                               ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_BIST_BIST_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_HEAD_TYP_HEADER_TYPE_VALUE                    ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_HEAD_TYP_HEADER_TYPE_VALUE_RESET_VALUE        ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_LAT_TIM_LATENCY_TIMER_VALUE                   ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_LAT_TIM_LATENCY_TIMER_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_CACH_LN_SZE_CACHE_LINE_SIZE_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_CACH_LN_SZE_CACHE_LINE_SIZE_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_OFFSET ( 0x0000000C )

#define CE_PCIE_CORE_0_RC_BIST_HEAD_LAT_CACH_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_OFFSET )
#define BL_PCIE_CORE_0_RC_BIST_HEAD_LAT_CACH_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_BIST_HEAD_LAT_CACH_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_BIST_HEAD_LAT_CACH_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_BIST_HEAD_LAT_CACH_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_BIST_HEAD_LAT_CACH_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_OFFSET )
#define BL_PCIE_CORE_1_RC_BIST_HEAD_LAT_CACH_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_BIST_HEAD_LAT_CACH_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_BIST_HEAD_LAT_CACH_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_BIST_HEAD_LAT_CACH_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_BIST_HEAD_LAT_CACH_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_BIST_HEAD_LAT_CACH_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_BIST_HEAD_LAT_CACH_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_BIST_HEAD_LAT_CACH_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* BIST */
	stt_uint32 bist       	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HEAD_TYP */
	stt_uint32 head_typ   	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LAT_TIM */
	stt_uint32 lat_tim    	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CACH_LN_SZE */
	stt_uint32 cach_ln_sze	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_BIST_HEAD_LAT_CACH_DTE ;


/*****************************************************************************************/
/* LT_SP_BUS_N                                                                           */
/* LT_SP_BUS_N                                                                           */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SEC_LT_SECONDARY_LATENCY_TIMER_VALUE                ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SEC_LT_SECONDARY_LATENCY_TIMER_VALUE_RESET_VALUE    ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SUB_BUS_N_SUBORDINATE_BUS_NUMBER_VALUE              ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SUB_BUS_N_SUBORDINATE_BUS_NUMBER_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SEC_BUS_N_SECONDARY_LATENCY_TIMER_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_SEC_BUS_N_SECONDARY_LATENCY_TIMER_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_PRIM_BUS_N_PRIMARY_BUS_NUMBER_VALUE                 ( 0x0 )
#define CE_PCIE_CORE_RC_LT_SP_BUS_N_PRIM_BUS_N_PRIMARY_BUS_NUMBER_VALUE_RESET_VALUE     ( 0x0 )


#define CE_PCIE_CORE_RC_LT_SP_BUS_N_OFFSET ( 0x00000018 )

#define CE_PCIE_CORE_0_RC_LT_SP_BUS_N_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_LT_SP_BUS_N_OFFSET )
#define BL_PCIE_CORE_0_RC_LT_SP_BUS_N_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_LT_SP_BUS_N_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_LT_SP_BUS_N_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_LT_SP_BUS_N_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_LT_SP_BUS_N_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_LT_SP_BUS_N_OFFSET )
#define BL_PCIE_CORE_1_RC_LT_SP_BUS_N_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_LT_SP_BUS_N_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_LT_SP_BUS_N_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_LT_SP_BUS_N_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_LT_SP_BUS_N_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_LT_SP_BUS_N_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_LT_SP_BUS_N_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_LT_SP_BUS_N_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_LT_SP_BUS_N_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* SEC_LT */
	stt_uint32 sec_lt    	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SUB_BUS_N */
	stt_uint32 sub_bus_n 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SEC_BUS_N */
	stt_uint32 sec_bus_n 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PRIM_BUS_N */
	stt_uint32 prim_bus_n	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_LT_SP_BUS_N_DTE ;


/*****************************************************************************************/
/* SS_IO_LT_BAS                                                                          */
/* SS_IO_LT_BAS                                                                          */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_SEC_STS_SEC_STS_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_SEC_STS_SEC_STS_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_IO_LT_IO_LT_VALUE                 ( 0x0 )
#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_IO_LT_IO_LT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_IO_BAS_IO_BAS_VALUE               ( 0x1 )
#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_IO_BAS_IO_BAS_VALUE_RESET_VALUE   ( 0x1 )


#define CE_PCIE_CORE_RC_SS_IO_LT_BAS_OFFSET ( 0x0000001C )

#define CE_PCIE_CORE_0_RC_SS_IO_LT_BAS_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_SS_IO_LT_BAS_OFFSET )
#define BL_PCIE_CORE_0_RC_SS_IO_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_SS_IO_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_SS_IO_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_SS_IO_LT_BAS_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_SS_IO_LT_BAS_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_SS_IO_LT_BAS_OFFSET )
#define BL_PCIE_CORE_1_RC_SS_IO_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_SS_IO_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_SS_IO_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_SS_IO_LT_BAS_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_SS_IO_LT_BAS_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_SS_IO_LT_BAS_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_SS_IO_LT_BAS_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_SS_IO_LT_BAS_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_SS_IO_LT_BAS_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* SEC_STS */
	stt_uint32 sec_sts	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IO_LT */
	stt_uint32 io_lt  	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IO_BAS */
	stt_uint32 io_bas 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_SS_IO_LT_BAS_DTE ;


/*****************************************************************************************/
/* MEM_LT_BAS                                                                            */
/* MEM_LT_BAS                                                                            */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_MEM_LT_BAS_MEM_LT_MEM_LT_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_MEM_LT_BAS_MEM_LT_MEM_LT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_MEM_LT_BAS_MEM_BAS_MEM_BAS_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_MEM_LT_BAS_MEM_BAS_MEM_BAS_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_MEM_LT_BAS_OFFSET ( 0x00000020 )

#define CE_PCIE_CORE_0_RC_MEM_LT_BAS_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_MEM_LT_BAS_OFFSET )
#define BL_PCIE_CORE_0_RC_MEM_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_MEM_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_MEM_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_MEM_LT_BAS_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_MEM_LT_BAS_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_MEM_LT_BAS_OFFSET )
#define BL_PCIE_CORE_1_RC_MEM_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_MEM_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_MEM_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_MEM_LT_BAS_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_MEM_LT_BAS_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_MEM_LT_BAS_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_MEM_LT_BAS_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_MEM_LT_BAS_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_MEM_LT_BAS_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* MEM_LT */
	stt_uint32 mem_lt 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MEM_BAS */
	stt_uint32 mem_bas	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_MEM_LT_BAS_DTE ;


/*****************************************************************************************/
/* PF_MEM_LT_BAS                                                                         */
/* PF_MEM_LT_BAS                                                                         */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_PF_MEM_LT_BAS_PF_MEM_LT_PF_MEM_LT_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_PF_MEM_LT_BAS_PF_MEM_LT_PF_MEM_LT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_PF_MEM_LT_BAS_PF_MEM_BAS_PF_MEM_BAS_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_PF_MEM_LT_BAS_PF_MEM_BAS_PF_MEM_BAS_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_PF_MEM_LT_BAS_OFFSET ( 0x00000024 )

#define CE_PCIE_CORE_0_RC_PF_MEM_LT_BAS_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_PF_MEM_LT_BAS_OFFSET )
#define BL_PCIE_CORE_0_RC_PF_MEM_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_PF_MEM_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_PF_MEM_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_PF_MEM_LT_BAS_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_PF_MEM_LT_BAS_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_PF_MEM_LT_BAS_OFFSET )
#define BL_PCIE_CORE_1_RC_PF_MEM_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_PF_MEM_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_PF_MEM_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_PF_MEM_LT_BAS_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_PF_MEM_LT_BAS_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_PF_MEM_LT_BAS_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_PF_MEM_LT_BAS_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_PF_MEM_LT_BAS_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_PF_MEM_LT_BAS_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PF_MEM_LT */
	stt_uint32 pf_mem_lt 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PF_MEM_BAS */
	stt_uint32 pf_mem_bas	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_PF_MEM_LT_BAS_DTE ;


/*****************************************************************************************/
/* IO_LT_BAS                                                                             */
/* IO_LT_BAS                                                                             */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_IO_LT_BAS_IO_LT_32_IO_LT_32_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_IO_LT_BAS_IO_LT_32_IO_LT_32_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_IO_LT_BAS_IO_BAS_32_IO_BAS_32_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_IO_LT_BAS_IO_BAS_32_IO_BAS_32_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_IO_LT_BAS_OFFSET ( 0x00000030 )

#define CE_PCIE_CORE_0_RC_IO_LT_BAS_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_IO_LT_BAS_OFFSET )
#define BL_PCIE_CORE_0_RC_IO_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_IO_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_IO_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_IO_LT_BAS_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_IO_LT_BAS_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_IO_LT_BAS_OFFSET )
#define BL_PCIE_CORE_1_RC_IO_LT_BAS_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_IO_LT_BAS_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_IO_LT_BAS_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_IO_LT_BAS_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_IO_LT_BAS_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_IO_LT_BAS_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_IO_LT_BAS_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_IO_LT_BAS_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_IO_LT_BAS_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* IO_LT_32 */
	stt_uint32 io_lt_32 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IO_BAS_32 */
	stt_uint32 io_bas_32	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_IO_LT_BAS_DTE ;


/*****************************************************************************************/
/* CAPPTR                                                                                */
/* CAPPTR                                                                                */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_CAPPTR_RESERVE1_RESERVE1_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_CAPPTR_RESERVE1_RESERVE1_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_CAPPTR_CAPTR_CAPTR_VALUE                   ( 0x1 )
#define CE_PCIE_CORE_RC_CAPPTR_CAPTR_CAPTR_VALUE_RESET_VALUE       ( 0x1 )


#define CE_PCIE_CORE_RC_CAPPTR_OFFSET ( 0x00000034 )

#define CE_PCIE_CORE_0_RC_CAPPTR_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_CAPPTR_OFFSET )
#define BL_PCIE_CORE_0_RC_CAPPTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_CAPPTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_CAPPTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_CAPPTR_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_CAPPTR_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_CAPPTR_OFFSET )
#define BL_PCIE_CORE_1_RC_CAPPTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_CAPPTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_CAPPTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_CAPPTR_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_CAPPTR_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_CAPPTR_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_CAPPTR_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_CAPPTR_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_CAPPTR_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RESERVE1 */
	stt_uint32 reserve1	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Captr */
	stt_uint32 captr   	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_CAPPTR_DTE ;


/*****************************************************************************************/
/* BRDG_INT                                                                              */
/* BRDG_INT                                                                              */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_BRDG_INT_BRDG_CTRL_BRDG_CTRL_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_BRDG_INT_BRDG_CTRL_BRDG_CTRL_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_BRDG_INT_INT_PIN_INT_PIN_VALUE                 ( 0x0 )
#define CE_PCIE_CORE_RC_BRDG_INT_INT_PIN_INT_PIN_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_CORE_RC_BRDG_INT_INT_LIN_INT_LIN_VALUE                 ( 0x3F )
#define CE_PCIE_CORE_RC_BRDG_INT_INT_LIN_INT_LIN_VALUE_RESET_VALUE     ( 0x3F )


#define CE_PCIE_CORE_RC_BRDG_INT_OFFSET ( 0x0000003C )

#define CE_PCIE_CORE_0_RC_BRDG_INT_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_BRDG_INT_OFFSET )
#define BL_PCIE_CORE_0_RC_BRDG_INT_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_BRDG_INT_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_BRDG_INT_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_BRDG_INT_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_BRDG_INT_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_BRDG_INT_OFFSET )
#define BL_PCIE_CORE_1_RC_BRDG_INT_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_BRDG_INT_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_BRDG_INT_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_BRDG_INT_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_BRDG_INT_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_BRDG_INT_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_BRDG_INT_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_BRDG_INT_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_BRDG_INT_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* BRDG_CTRL */
	stt_uint32 brdg_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_PIN */
	stt_uint32 int_pin  	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_LIN */
	stt_uint32 int_lin  	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_BRDG_INT_DTE ;


/*****************************************************************************************/
/* CFG_PWR_CAP                                                                           */
/* CFG_PWR_CAP                                                                           */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_CFG_PWR_CAP_PMC_PMC_VALUE                         ( 0x0 )
#define CE_PCIE_CORE_RC_CFG_PWR_CAP_PMC_PMC_VALUE_RESET_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_CFG_PWR_CAP_PM_NX_PTR_PM_NX_PTR_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_CFG_PWR_CAP_PM_NX_PTR_PM_NX_PTR_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_CFG_PWR_CAP_CAP_ID_CAP_ID_VALUE                   ( 0x0 )
#define CE_PCIE_CORE_RC_CFG_PWR_CAP_CAP_ID_CAP_ID_VALUE_RESET_VALUE       ( 0x0 )


#define CE_PCIE_CORE_RC_CFG_PWR_CAP_OFFSET ( 0x00000040 )

#define CE_PCIE_CORE_0_RC_CFG_PWR_CAP_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_CFG_PWR_CAP_OFFSET )
#define BL_PCIE_CORE_0_RC_CFG_PWR_CAP_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_CFG_PWR_CAP_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_CFG_PWR_CAP_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_CFG_PWR_CAP_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_CFG_PWR_CAP_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_CFG_PWR_CAP_OFFSET )
#define BL_PCIE_CORE_1_RC_CFG_PWR_CAP_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_CFG_PWR_CAP_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_CFG_PWR_CAP_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_CFG_PWR_CAP_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_CFG_PWR_CAP_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_CFG_PWR_CAP_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_CFG_PWR_CAP_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_CFG_PWR_CAP_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_CFG_PWR_CAP_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PMC */
	stt_uint32 pmc      	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_NX_PTR */
	stt_uint32 pm_nx_ptr	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CAP_ID */
	stt_uint32 cap_id   	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_CFG_PWR_CAP_DTE ;


/*****************************************************************************************/
/* PWR_CSR                                                                               */
/* PWR_CSR                                                                               */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_PWR_CSR_DATA1_DATA1_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_PWR_CSR_DATA1_DATA1_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_PWR_CSR_PM_BSE_PM_BSE_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_PWR_CSR_PM_BSE_PM_BSE_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_PWR_CSR_PMCSR_PMCSR_VALUE               ( 0x10 )
#define CE_PCIE_CORE_RC_PWR_CSR_PMCSR_PMCSR_VALUE_RESET_VALUE   ( 0x10 )


#define CE_PCIE_CORE_RC_PWR_CSR_OFFSET ( 0x00000044 )

#define CE_PCIE_CORE_0_RC_PWR_CSR_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_PWR_CSR_OFFSET )
#define BL_PCIE_CORE_0_RC_PWR_CSR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_PWR_CSR_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_PWR_CSR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_PWR_CSR_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_PWR_CSR_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_PWR_CSR_OFFSET )
#define BL_PCIE_CORE_1_RC_PWR_CSR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_PWR_CSR_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_PWR_CSR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_PWR_CSR_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_PWR_CSR_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_PWR_CSR_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_PWR_CSR_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_PWR_CSR_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_PWR_CSR_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* Data1 */
	stt_uint32 data1 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_BSE */
	stt_uint32 pm_bse	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PMCSR */
	stt_uint32 pmcsr 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_PWR_CSR_DTE ;


/*****************************************************************************************/
/* PCIE_CAP                                                                              */
/* PCIE_CAP                                                                              */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_PCIE_CAP_PCIE_CAP_R_PCIE_CAP_R_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_PCIE_CAP_PCIE_CAP_R_PCIE_CAP_R_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_PCIE_CAP_PCIE_NX_PTR_PCIE_NX_PTR_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_PCIE_CAP_PCIE_NX_PTR_PCIE_NX_PTR_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_PCIE_CAP_CAP_ID_CAP_ID_VALUE                       ( 0x0 )
#define CE_PCIE_CORE_RC_PCIE_CAP_CAP_ID_CAP_ID_VALUE_RESET_VALUE           ( 0x0 )


#define CE_PCIE_CORE_RC_PCIE_CAP_OFFSET ( 0x00000050 )

#define CE_PCIE_CORE_0_RC_PCIE_CAP_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_PCIE_CAP_OFFSET )
#define BL_PCIE_CORE_0_RC_PCIE_CAP_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_PCIE_CAP_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_PCIE_CAP_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_PCIE_CAP_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_PCIE_CAP_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_PCIE_CAP_OFFSET )
#define BL_PCIE_CORE_1_RC_PCIE_CAP_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_PCIE_CAP_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_PCIE_CAP_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_PCIE_CAP_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_PCIE_CAP_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_PCIE_CAP_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_PCIE_CAP_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_PCIE_CAP_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_PCIE_CAP_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PCIE_CAP_R */
	stt_uint32 pcie_cap_r 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PCIE_NX_PTR */
	stt_uint32 pcie_nx_ptr	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CAP_ID */
	stt_uint32 cap_id     	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_PCIE_CAP_DTE ;


/*****************************************************************************************/
/* MSG_CTR                                                                               */
/* MSG_CTR                                                                               */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_MSG_CTR_MSG_CTR_RGS_MSG_CTR_RGS_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_MSG_CTR_MSG_CTR_RGS_MSG_CTR_RGS_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_MSG_CTR_MSI_NX_PTR_MSI_NX_PTR_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_MSG_CTR_MSI_NX_PTR_MSI_NX_PTR_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_MSG_CTR_CAP_ID_CAP_ID_VALUE                       ( 0x0 )
#define CE_PCIE_CORE_RC_MSG_CTR_CAP_ID_CAP_ID_VALUE_RESET_VALUE           ( 0x0 )


#define CE_PCIE_CORE_RC_MSG_CTR_OFFSET ( 0x00000054 )

#define CE_PCIE_CORE_0_RC_MSG_CTR_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_MSG_CTR_OFFSET )
#define BL_PCIE_CORE_0_RC_MSG_CTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_MSG_CTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_MSG_CTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_MSG_CTR_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_MSG_CTR_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_MSG_CTR_OFFSET )
#define BL_PCIE_CORE_1_RC_MSG_CTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_MSG_CTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_MSG_CTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_MSG_CTR_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_MSG_CTR_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_MSG_CTR_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_MSG_CTR_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_MSG_CTR_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_MSG_CTR_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* MSG_CTR_RGS */
	stt_uint32 msg_ctr_rgs	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSI_NX_PTR */
	stt_uint32 msi_nx_ptr 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CAP_ID */
	stt_uint32 cap_id     	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_MSG_CTR_DTE ;


/*****************************************************************************************/
/* DEV_STS_CTRL                                                                          */
/* DEV_STS_CTRL                                                                          */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_DEV_STS_CTRL_DEV_STS_DEV_STS_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_DEV_STS_CTRL_DEV_STS_DEV_STS_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_DEV_STS_CTRL_DEV_CTRL_DEV_CTRL_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_DEV_STS_CTRL_DEV_CTRL_DEV_CTRL_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_DEV_STS_CTRL_OFFSET ( 0x00000058 )

#define CE_PCIE_CORE_0_RC_DEV_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_DEV_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_0_RC_DEV_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_DEV_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_DEV_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_DEV_STS_CTRL_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_DEV_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_DEV_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_1_RC_DEV_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_DEV_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_DEV_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_DEV_STS_CTRL_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_DEV_STS_CTRL_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_DEV_STS_CTRL_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_DEV_STS_CTRL_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_DEV_STS_CTRL_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_DEV_STS_CTRL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DEV_STS */
	stt_uint32 dev_sts 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEV_CTRL */
	stt_uint32 dev_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_DEV_STS_CTRL_DTE ;


/*****************************************************************************************/
/* MSI_DATA                                                                              */
/* MSI_DATA                                                                              */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_MSI_DATA_R0_DEFAULT_VALUE                        ( 0x0 )
#define CE_PCIE_CORE_RC_MSI_DATA_R0_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_PCIE_CORE_RC_MSI_DATA_MSI_DATA_F_MSI_DATA_F_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_MSI_DATA_MSI_DATA_F_MSI_DATA_F_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_MSI_DATA_OFFSET ( 0x0000005C )

#define CE_PCIE_CORE_0_RC_MSI_DATA_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_MSI_DATA_OFFSET )
#define BL_PCIE_CORE_0_RC_MSI_DATA_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_MSI_DATA_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_MSI_DATA_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_MSI_DATA_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_MSI_DATA_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_MSI_DATA_OFFSET )
#define BL_PCIE_CORE_1_RC_MSI_DATA_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_MSI_DATA_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_MSI_DATA_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_MSI_DATA_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_MSI_DATA_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_MSI_DATA_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_MSI_DATA_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_MSI_DATA_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_MSI_DATA_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RESERVED */
	stt_uint32 r0        	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSI_DATA_F */
	stt_uint32 msi_data_f	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_MSI_DATA_DTE ;


/*****************************************************************************************/
/* LNK_STS_CTRL                                                                          */
/* LNK_STS_CTRL                                                                          */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_LNK_STS_CTRL_LNK_STS_LNK_STS_VALUE               ( 0xFFFF )
#define CE_PCIE_CORE_RC_LNK_STS_CTRL_LNK_STS_LNK_STS_VALUE_RESET_VALUE   ( 0xFFFF )
#define CE_PCIE_CORE_RC_LNK_STS_CTRL_LNK_CTRL_LNK_CTRL_VALUE             ( 0xFFFF )
#define CE_PCIE_CORE_RC_LNK_STS_CTRL_LNK_CTRL_LNK_CTRL_VALUE_RESET_VALUE ( 0xFFFF )


#define CE_PCIE_CORE_RC_LNK_STS_CTRL_OFFSET ( 0x00000060 )

#define CE_PCIE_CORE_0_RC_LNK_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_LNK_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_0_RC_LNK_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_LNK_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_LNK_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_LNK_STS_CTRL_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_LNK_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_LNK_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_1_RC_LNK_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_LNK_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_LNK_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_LNK_STS_CTRL_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_LNK_STS_CTRL_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_LNK_STS_CTRL_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_LNK_STS_CTRL_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_LNK_STS_CTRL_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_LNK_STS_CTRL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* LNK_STS */
	stt_uint32 lnk_sts 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LNK_CTRL */
	stt_uint32 lnk_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_LNK_STS_CTRL_DTE ;


/*****************************************************************************************/
/* SLT_STS_CTRL                                                                          */
/* SLT_STS_CTRL                                                                          */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_SLT_STS_CTRL_SLT_STS_SLT_STS_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_SLT_STS_CTRL_SLT_STS_SLT_STS_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_SLT_STS_CTRL_SLT_CTRL_SLT_CTRL_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_SLT_STS_CTRL_SLT_CTRL_SLT_CTRL_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_SLT_STS_CTRL_OFFSET ( 0x00000068 )

#define CE_PCIE_CORE_0_RC_SLT_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_SLT_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_0_RC_SLT_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_SLT_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_SLT_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_SLT_STS_CTRL_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_SLT_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_SLT_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_1_RC_SLT_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_SLT_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_SLT_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_SLT_STS_CTRL_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_SLT_STS_CTRL_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_SLT_STS_CTRL_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_SLT_STS_CTRL_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_SLT_STS_CTRL_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_SLT_STS_CTRL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* SLT_STS */
	stt_uint32 slt_sts 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLT_CTRL */
	stt_uint32 slt_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_SLT_STS_CTRL_DTE ;


/*****************************************************************************************/
/* RC_CAP_CTRL                                                                           */
/* RC_CAP_CTRL                                                                           */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_RC_CAP_CTRL_RC_CAP_RC_CAP_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_RC_CAP_CTRL_RC_CAP_RC_CAP_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_RC_CAP_CTRL_RC_CTRL_RC_CTRL_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_RC_CAP_CTRL_RC_CTRL_RC_CTRL_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_RC_CAP_CTRL_OFFSET ( 0x0000006C )

#define CE_PCIE_CORE_0_RC_RC_CAP_CTRL_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_RC_CAP_CTRL_OFFSET )
#define BL_PCIE_CORE_0_RC_RC_CAP_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_RC_CAP_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_RC_CAP_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_RC_CAP_CTRL_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_RC_CAP_CTRL_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_RC_CAP_CTRL_OFFSET )
#define BL_PCIE_CORE_1_RC_RC_CAP_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_RC_CAP_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_RC_CAP_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_RC_CAP_CTRL_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_RC_CAP_CTRL_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_RC_CAP_CTRL_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_RC_CAP_CTRL_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_RC_CAP_CTRL_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_RC_CAP_CTRL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RC_CAP */
	stt_uint32 rc_cap 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RC_CTRL */
	stt_uint32 rc_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_RC_CAP_CTRL_DTE ;


/*****************************************************************************************/
/* MSIX_CTR                                                                              */
/* MSIX_CTR                                                                              */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_MSIX_CTR_MSIX_CTR_RGS_MSIX_CTR_RGS_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_MSIX_CTR_MSIX_CTR_RGS_MSIX_CTR_RGS_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_CORE_RC_MSIX_CTR_MSIX_NX_PTR_MSIX_NX_PTR_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_MSIX_CTR_MSIX_NX_PTR_MSIX_NX_PTR_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_MSIX_CTR_CAP_ID_CAP_ID_VALUE                         ( 0x0 )
#define CE_PCIE_CORE_RC_MSIX_CTR_CAP_ID_CAP_ID_VALUE_RESET_VALUE             ( 0x0 )


#define CE_PCIE_CORE_RC_MSIX_CTR_OFFSET ( 0x000000B0 )

#define CE_PCIE_CORE_0_RC_MSIX_CTR_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_MSIX_CTR_OFFSET )
#define BL_PCIE_CORE_0_RC_MSIX_CTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_MSIX_CTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_MSIX_CTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_MSIX_CTR_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_MSIX_CTR_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_MSIX_CTR_OFFSET )
#define BL_PCIE_CORE_1_RC_MSIX_CTR_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_MSIX_CTR_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_MSIX_CTR_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_MSIX_CTR_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_MSIX_CTR_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_MSIX_CTR_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_MSIX_CTR_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_MSIX_CTR_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_MSIX_CTR_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* MSIX_CTR_RGS */
	stt_uint32 msix_ctr_rgs	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSIX_NX_PTR */
	stt_uint32 msix_nx_ptr 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CAP_ID */
	stt_uint32 cap_id      	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_MSIX_CTR_DTE ;


/*****************************************************************************************/
/* PVC_STS_CTRL                                                                          */
/* PVC_STS_CTRL                                                                          */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_PVC_STS_CTRL_PVC_STS_PVC_STS_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_PVC_STS_CTRL_PVC_STS_PVC_STS_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_CORE_RC_PVC_STS_CTRL_PVC_CTRL_PVC_CTRL_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_PVC_STS_CTRL_PVC_CTRL_PVC_CTRL_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_PVC_STS_CTRL_OFFSET ( 0x0000014C )

#define CE_PCIE_CORE_0_RC_PVC_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_PVC_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_0_RC_PVC_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_PVC_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_PVC_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_PVC_STS_CTRL_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_PVC_STS_CTRL_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_PVC_STS_CTRL_OFFSET )
#define BL_PCIE_CORE_1_RC_PVC_STS_CTRL_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_PVC_STS_CTRL_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_PVC_STS_CTRL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_PVC_STS_CTRL_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_PVC_STS_CTRL_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_PVC_STS_CTRL_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_PVC_STS_CTRL_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_PVC_STS_CTRL_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_PVC_STS_CTRL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PVC_STS */
	stt_uint32 pvc_sts 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PVC_CTRL */
	stt_uint32 pvc_ctrl	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_PVC_STS_CTRL_DTE ;


/*****************************************************************************************/
/* VC_STS_RSV                                                                            */
/* VC_STS_RSV                                                                            */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_VC_STS_RSV_VC_STS_VC_STS_VALUE             ( 0x4720 )
#define CE_PCIE_CORE_RC_VC_STS_RSV_VC_STS_VC_STS_VALUE_RESET_VALUE ( 0x4720 )
#define CE_PCIE_CORE_RC_VC_STS_RSV_RSVDP_RSVDP_VALUE               ( 0x0 )
#define CE_PCIE_CORE_RC_VC_STS_RSV_RSVDP_RSVDP_VALUE_RESET_VALUE   ( 0x0 )


#define CE_PCIE_CORE_RC_VC_STS_RSV_OFFSET ( 0x00000158 )

#define CE_PCIE_CORE_0_RC_VC_STS_RSV_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_VC_STS_RSV_OFFSET )
#define BL_PCIE_CORE_0_RC_VC_STS_RSV_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_VC_STS_RSV_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_VC_STS_RSV_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_VC_STS_RSV_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_VC_STS_RSV_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_VC_STS_RSV_OFFSET )
#define BL_PCIE_CORE_1_RC_VC_STS_RSV_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_VC_STS_RSV_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_VC_STS_RSV_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_VC_STS_RSV_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_VC_STS_RSV_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_VC_STS_RSV_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_VC_STS_RSV_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_VC_STS_RSV_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_VC_STS_RSV_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* VC_STS */
	stt_uint32 vc_sts	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RSVDP */
	stt_uint32 rsvdp 	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_VC_STS_RSV_DTE ;


/*****************************************************************************************/
/* VCR_STS_R1                                                                            */
/* VCR_STS_R1                                                                            */
/*****************************************************************************************/

#define CE_PCIE_CORE_RC_VCR_STS_R1_R0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_CORE_RC_VCR_STS_R1_R0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_CORE_RC_VCR_STS_R1_OFFSET ( 0x00000164 )

#define CE_PCIE_CORE_0_RC_VCR_STS_R1_ADDRESS   	( CE_PCIE_CORE_0_RC_ADDRESS + CE_PCIE_CORE_RC_VCR_STS_R1_OFFSET )
#define BL_PCIE_CORE_0_RC_VCR_STS_R1_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_0_RC_VCR_STS_R1_ADDRESS ), (r) )
#define BL_PCIE_CORE_0_RC_VCR_STS_R1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_0_RC_VCR_STS_R1_ADDRESS ), (v) )

#define CE_PCIE_CORE_1_RC_VCR_STS_R1_ADDRESS   	( CE_PCIE_CORE_1_RC_ADDRESS + CE_PCIE_CORE_RC_VCR_STS_R1_OFFSET )
#define BL_PCIE_CORE_1_RC_VCR_STS_R1_READ( r ) 	BL_READ_32( ( CE_PCIE_CORE_1_RC_VCR_STS_R1_ADDRESS ), (r) )
#define BL_PCIE_CORE_1_RC_VCR_STS_R1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_CORE_1_RC_VCR_STS_R1_ADDRESS ), (v) )


extern stt_uint32 PCIE_CORE_RC_VCR_STS_R1_ARRAY [ ] ;

#define BL_PCIE_CORE_RC_VCR_STS_R1_WRITE( i, v )	BL_WRITE_32( ( PCIE_CORE_RC_VCR_STS_R1_ARRAY [ i ] ), (v) )
#define BL_PCIE_CORE_RC_VCR_STS_R1_READ( i, v ) 	BL_READ_32( ( PCIE_CORE_RC_VCR_STS_R1_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RESERVED */
	stt_uint32 r0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_VCR_STS_R1_DTE ;


/*****************************************************************************************/
/* VEN_MSG_DATA_0_REG                                                                    */
/* VEN_MSG_DATA_0_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_VEN_MSG_DATA_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_VEN_MSG_DATA_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_OFFSET ( 0x00000000 )

#define CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* VEN_MSG_DATA_0 */
	stt_uint32 ven_msg_data_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_DTE ;


/*****************************************************************************************/
/* VEN_MSG_DATA_1_REG                                                                    */
/* VEN_MSG_DATA_1_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_VEN_MSG_DATA_1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_VEN_MSG_DATA_1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_OFFSET ( 0x00000004 )

#define CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_DATA_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_DATA_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* VEN_MSG_DATA_1 */
	stt_uint32 ven_msg_data_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_DTE ;


/*****************************************************************************************/
/* VEN_MSG_CONTRL_REG_0                                                                  */
/* VEN_MSG_CONTRL_REG_0                                                                  */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_FMT_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_FMT_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TYPE_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TYPE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TC_DEFAULT_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TC_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TD_DEFAULT_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_TD_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_EP_DEFAULT_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_EP_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_ATTR_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_ATTR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_LEN_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_VEN_MSG_LEN_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )


#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_OFFSET ( 0x00000008 )

#define CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_0_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_0_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_0_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_0_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_0_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_FMT */
	stt_uint32 ven_msg_fmt 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_TYPE */
	stt_uint32 ven_msg_type	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_TC */
	stt_uint32 ven_msg_tc  	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_TD */
	stt_uint32 ven_msg_td  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_EP */
	stt_uint32 ven_msg_ep  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_ATTR */
	stt_uint32 ven_msg_attr	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_LEN */
	stt_uint32 ven_msg_len 	: 10 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_DTE ;


/*****************************************************************************************/
/* VEN_MSG_CONTRL_REG_1                                                                  */
/* VEN_MSG_CONTRL_REG_1                                                                  */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_R1_DEFAULT_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_R1_DEFAULT_VALUE_RESET_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_TAG_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_TAG_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_CODE_DEFAULT_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_CODE_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_REQ_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_REQ_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_FUNC_NUM_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_VEN_MSG_FUNC_NUM_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_OFFSET ( 0x0000000C )

#define CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_VEN_MSG_CONTRL_REG_1_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1              	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_TAG */
	stt_uint32 ven_msg_tag     	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_CODE */
	stt_uint32 ven_msg_code    	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_REQ */
	stt_uint32 ven_msg_req     	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_FUNC_NUM */
	stt_uint32 ven_msg_func_num	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_DTE ;


/*****************************************************************************************/
/* SYSTEM_REG                                                                            */
/* SYSTEM_REG                                                                            */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APP_UNLOCK_MSG_DEFAULT_VALUE                        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APP_UNLOCK_MSG_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APPS_PM_XMT_TURNOFF_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APPS_PM_XMT_TURNOFF_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_AUX_PWR_DET_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_AUX_PWR_DET_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APP_LTSSM_ENABLE_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_APP_LTSSM_ENABLE_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_ATTEN_BUTTON_PRESSED_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_ATTEN_BUTTON_PRESSED_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PRE_DET_STATE_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PRE_DET_STATE_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_MRL_SENSOR_STATE_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_MRL_SENSOR_STATE_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PWR_FAULT_DET_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PWR_FAULT_DET_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_MRL_SENSOR_CHGED_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_MRL_SENSOR_CHGED_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PRE_DET_CHGED_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_PRE_DET_CHGED_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_CMD_CPLED_INT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_CMD_CPLED_INT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_EML_INTERLOCK_ENGAGED_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_SYS_EML_INTERLOCK_ENGAGED_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_RX_LANE_FLIP_EN_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_RX_LANE_FLIP_EN_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_TX_LANE_FLIP_EN_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_TX_LANE_FLIP_EN_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )


#define CE_PCIE_REGFILE_CORE_SYSTEM_REG_OFFSET ( 0x00000010 )

#define CE_PCIE_REGFILE_0_CORE_SYSTEM_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SYSTEM_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_SYSTEM_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_SYSTEM_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_SYSTEM_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_SYSTEM_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_SYSTEM_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SYSTEM_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_SYSTEM_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_SYSTEM_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_SYSTEM_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_SYSTEM_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_SYSTEM_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_SYSTEM_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_SYSTEM_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_SYSTEM_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_SYSTEM_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 18 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_UNLOCK_MSG */
	stt_uint32 app_unlock_msg           	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APPS_PM_XMT_TURNOFF */
	stt_uint32 apps_pm_xmt_turnoff      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_AUX_PWR_DET */
	stt_uint32 sys_aux_pwr_det          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_LTSSM_ENABLE */
	stt_uint32 app_ltssm_enable         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_ATTEN_BUTTON_PRESSED */
	stt_uint32 sys_atten_button_pressed 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_PRE_DET_STATE */
	stt_uint32 sys_pre_det_state        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_MRL_SENSOR_STATE */
	stt_uint32 sys_mrl_sensor_state     	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_PWR_FAULT_DET */
	stt_uint32 sys_pwr_fault_det        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_MRL_SENSOR_CHGED */
	stt_uint32 sys_mrl_sensor_chged     	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_PRE_DET_CHGED */
	stt_uint32 sys_pre_det_chged        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_CMD_CPLED_INT */
	stt_uint32 sys_cmd_cpled_int        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYS_EML_INTERLOCK_ENGAGED */
	stt_uint32 sys_eml_interlock_engaged	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RX_LANE_FLIP_EN */
	stt_uint32 rx_lane_flip_en          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TX_LANE_FLIP_EN */
	stt_uint32 tx_lane_flip_en          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_SYSTEM_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_0_REG                                                                   */
/* CONFIGURATION_0_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_CFG_BAR0_START_31_0_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_CFG_BAR0_START_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_OFFSET ( 0x00000014 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR0_START_31_0 */
	stt_uint32 cfg_bar0_start_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_0_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_1_REG                                                                   */
/* CONFIGURATION_1_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_CFG_BAR0_START_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_CFG_BAR0_START_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_OFFSET ( 0x00000018 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR0_START_63_32 */
	stt_uint32 cfg_bar0_start_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_1_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_2_REG                                                                   */
/* CONFIGURATION_2_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_CFG_BAR1_START_31_0_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_CFG_BAR1_START_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_OFFSET ( 0x0000001C )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR1_START_31_0 */
	stt_uint32 cfg_bar1_start_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_2_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_3_REG                                                                   */
/* CONFIGURATION_3_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_CFG_BAR1_START_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_CFG_BAR1_START_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_OFFSET ( 0x00000020 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_3_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_3_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_3_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_3_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_3_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_3_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_3_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_3_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR1_START_63_32 */
	stt_uint32 cfg_bar1_start_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_3_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_4_REG                                                                   */
/* CONFIGURATION_4_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_CFG_BAR0_LIMIT_31_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_CFG_BAR0_LIMIT_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_OFFSET ( 0x00000024 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_4_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_4_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_4_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_4_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_4_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_4_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_4_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_4_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR0_LIMIT_31_0 */
	stt_uint32 cfg_bar0_limit_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_4_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_5_REG                                                                   */
/* CONFIGURATION_5_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_CFG_BAR0_LIMIT_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_CFG_BAR0_LIMIT_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_OFFSET ( 0x00000028 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_5_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_5_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_5_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_5_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_5_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_5_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_5_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_5_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR0_LIMIT_63_32 */
	stt_uint32 cfg_bar0_limit_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_5_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_6_REG                                                                   */
/* CONFIGURATION_6_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_CFG_BAR1_LIMIT_31_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_CFG_BAR1_LIMIT_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_OFFSET ( 0x0000002C )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_6_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_6_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_6_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_6_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_6_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_6_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_6_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_6_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR1_LIMIT_31_0 */
	stt_uint32 cfg_bar1_limit_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_6_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_7_REG                                                                   */
/* CONFIGURATION_7_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_CFG_BAR1_LIMIT_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_CFG_BAR1_LIMIT_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_OFFSET ( 0x00000030 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_7_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_7_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_7_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_7_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_7_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_7_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_7_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_7_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_BAR1_LIMIT_63_32 */
	stt_uint32 cfg_bar1_limit_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_7_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_8_REG                                                                   */
/* CONFIGURATION_8_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_CFG_EXP_ROM_START_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_CFG_EXP_ROM_START_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_OFFSET ( 0x00000034 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_8_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_8_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_8_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_8_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_8_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_8_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_8_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_8_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_EXP_ROM_START */
	stt_uint32 cfg_exp_rom_start	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_8_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_9_REG                                                                   */
/* CONFIGURATION_9_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_CFG_EXP_ROM_LIMIT_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_CFG_EXP_ROM_LIMIT_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_OFFSET ( 0x00000038 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_9_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_9_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_9_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_9_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_9_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_9_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_9_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_9_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CFG_EXP_ROM_LIMIT */
	stt_uint32 cfg_exp_rom_limit	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_9_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_10_REG                                                                  */
/* CONFIGURATION_10_REG                                                                  */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_PWR_IND_DEFAULT_VALUE                     ( 0x3 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_PWR_IND_DEFAULT_VALUE_RESET_VALUE         ( 0x3 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_ATTEN_IND_DEFAULT_VALUE                   ( 0x3 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_ATTEN_IND_DEFAULT_VALUE_RESET_VALUE       ( 0x3 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_PWR_CTRLER_CTRL_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_CFG_PWR_CTRLER_CTRL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_PM_XTLH_BLOCK_TLP_DEFAULT_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_PM_XTLH_BLOCK_TLP_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_OFFSET ( 0x0000003C )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_10_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_10_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_10_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_10_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_10_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_10_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_10_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_10_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PWR_IND */
	stt_uint32 cfg_pwr_ind        	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_ATTEN_IND */
	stt_uint32 cfg_atten_ind      	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PWR_CTRLER_CTRL */
	stt_uint32 cfg_pwr_ctrler_ctrl	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_XTLH_BLOCK_TLP */
	stt_uint32 pm_xtlh_block_tlp  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_10_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_11_REG                                                                  */
/* CONFIGURATION_11_REG                                                                  */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_RCB_DEFAULT_VALUE                              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_RCB_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PM_NO_SOFT_RST_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PM_NO_SOFT_RST_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_RDLH_LINK_UP_DEFAULT_VALUE                         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_RDLH_LINK_UP_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_PM_CURNT_STATE_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_PM_CURNT_STATE_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_RC_ERR_INT_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_RC_ERR_INT_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_RC_ERR_MSI_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_RC_ERR_MSI_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_INT_MSG_NUM_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_AER_INT_MSG_NUM_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_SYS_ERR_RC_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_SYS_ERR_RC_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PME_INT_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PME_INT_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PME_MSI_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PME_MSI_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PCIE_CAP_INT_MSG_NUM_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_CFG_PCIE_CAP_INT_MSG_NUM_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_XMLH_LTSSM_STATE_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_XMLH_LTSSM_STATE_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_XMLH_LINK_UP_DEFAULT_VALUE                         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_XMLH_LINK_UP_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_LINK_REQ_RST_NOT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_LINK_REQ_RST_NOT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_OFFSET ( 0x00000040 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_11_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_11_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_11_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_11_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_11_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_11_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_11_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_11_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_RCB */
	stt_uint32 cfg_rcb                 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PM_NO_SOFT_RST */
	stt_uint32 cfg_pm_no_soft_rst      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RDLH_LINK_UP */
	stt_uint32 rdlh_link_up            	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_CURNT_STATE */
	stt_uint32 pm_curnt_state          	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_AER_RC_ERR_INT */
	stt_uint32 cfg_aer_rc_err_int      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_AER_RC_ERR_MSI */
	stt_uint32 cfg_aer_rc_err_msi      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_AER_INT_MSG_NUM */
	stt_uint32 cfg_aer_int_msg_num     	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_SYS_ERR_RC */
	stt_uint32 cfg_sys_err_rc          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PME_INT */
	stt_uint32 cfg_pme_int             	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PME_MSI */
	stt_uint32 cfg_pme_msi             	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PCIE_CAP_INT_MSG_NUM */
	stt_uint32 cfg_pcie_cap_int_msg_num	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* XMLH_LTSSM_STATE */
	stt_uint32 xmlh_ltssm_state        	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* XMLH_LINK_UP */
	stt_uint32 xmlh_link_up            	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LINK_REQ_RST_NOT */
	stt_uint32 link_req_rst_not        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_11_REG_DTE ;


/*****************************************************************************************/
/* CONFIGURATION_12_REG                                                                  */
/* CONFIGURATION_12_REG                                                                  */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_BUS_MASTER_EN_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_BUS_MASTER_EN_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MEM_SPACE_EN_DEFAULT_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MEM_SPACE_EN_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MAX_RD_REQ_SIZE_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MAX_RD_REQ_SIZE_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MAX_PAYLOAD_SIZE_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_CFG_MAX_PAYLOAD_SIZE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_OFFSET ( 0x00000044 )

#define CE_PCIE_REGFILE_0_CORE_CONFIGURATION_12_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_CONFIGURATION_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_CONFIGURATION_12_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_CONFIGURATION_12_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_CONFIGURATION_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_CONFIGURATION_12_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_CONFIGURATION_12_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_CONFIGURATION_12_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_CONFIGURATION_12_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_CONFIGURATION_12_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BUS_MASTER_EN */
	stt_uint32 cfg_bus_master_en   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_MEM_SPACE_EN */
	stt_uint32 cfg_mem_space_en    	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_MAX_RD_REQ_SIZE */
	stt_uint32 cfg_max_rd_req_size 	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_MAX_PAYLOAD_SIZE */
	stt_uint32 cfg_max_payload_size	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_CONFIGURATION_12_REG_DTE ;


/*****************************************************************************************/
/* DEBUG_0_REG                                                                           */
/* DEBUG_0_REG                                                                           */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DEBUG_0_REG_CXPL_DEBUG_INFO_31_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DEBUG_0_REG_CXPL_DEBUG_INFO_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DEBUG_0_REG_OFFSET ( 0x00000048 )

#define CE_PCIE_REGFILE_0_CORE_DEBUG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DEBUG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DEBUG_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DEBUG_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DEBUG_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DEBUG_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DEBUG_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CXPL_DEBUG_INFO_31_0 */
	stt_uint32 cxpl_debug_info_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DEBUG_0_REG_DTE ;


/*****************************************************************************************/
/* DEBUG_1_REG                                                                           */
/* DEBUG_1_REG                                                                           */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DEBUG_1_REG_CXPL_DEBUG_INFO_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DEBUG_1_REG_CXPL_DEBUG_INFO_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DEBUG_1_REG_OFFSET ( 0x0000004C )

#define CE_PCIE_REGFILE_0_CORE_DEBUG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DEBUG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DEBUG_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DEBUG_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DEBUG_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DEBUG_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DEBUG_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* CXPL_DEBUG_INFO_63_32 */
	stt_uint32 cxpl_debug_info_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DEBUG_1_REG_DTE ;


/*****************************************************************************************/
/* DIAG_CTRL_REG                                                                         */
/* DIAG_CTRL_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_R1_DEFAULT_VALUE                        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_R1_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_DIAG_CTRL_REG_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_DIAG_CTRL_REG_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_OFFSET ( 0x00000050 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_CTRL_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_CTRL_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_CTRL_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_CTRL_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_CTRL_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_CTRL_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_CTRL_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_CTRL_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_CTRL_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_CTRL_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_CTRL_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_CTRL_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_CTRL_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_CTRL_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_CTRL_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_CTRL_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1           	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_CTRL_REG */
	stt_uint32 diag_ctrl_reg	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_CTRL_REG_DTE ;


/*****************************************************************************************/
/* RTLH_RFC_DATA_REG                                                                     */
/* RTLH_RFC_DATA_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_RTLH_RFC_DATA_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_RTLH_RFC_DATA_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_OFFSET ( 0x00000054 )

#define CE_PCIE_REGFILE_0_CORE_RTLH_RFC_DATA_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_RTLH_RFC_DATA_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_RTLH_RFC_DATA_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_RTLH_RFC_DATA_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_RTLH_RFC_DATA_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_RTLH_RFC_DATA_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_RTLH_RFC_DATA_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_RTLH_RFC_DATA_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_RTLH_RFC_DATA_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_RTLH_RFC_DATA_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RTLH_RFC_DATA */
	stt_uint32 rtlh_rfc_data	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_DTE ;


/*****************************************************************************************/
/* INTERRUPT_0_REG                                                                       */
/* INTERRUPT_0_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_EML_CONTROL_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_EML_CONTROL_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_PME_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_PME_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_INT_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_INT_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_MSI_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_HP_MSI_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RTLH_RFC_UPD_DEFAULT_VALUE                         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RTLH_RFC_UPD_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_WAKE_DEFAULT_VALUE                                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_WAKE_DEFAULT_VALUE_RESET_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_LINK_REQ_RST_NOT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_LINK_REQ_RST_NOT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_GM_CMPOSER_LOOKUP_ERR_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_GM_CMPOSER_LOOKUP_ERR_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADMX_CMPOSER_LOOKUP_ERR_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADMX_CMPOSER_LOOKUP_ERR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CLK_REQ_N_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CLK_REQ_N_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_VENDOR_MSG_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_VENDOR_MSG_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_AER_RC_ERR_INT_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_AER_RC_ERR_INT_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_AER_RC_ERR_MSI_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_AER_RC_ERR_MSI_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_TRGT_CPL_TIMEOUT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_TRGT_CPL_TIMEOUT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_CPL_TIMEOUT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_CPL_TIMEOUT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_PME_MSI_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_PME_MSI_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_PME_INT_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_PME_INT_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_SYS_ERR_RC_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_CFG_SYS_ERR_RC_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_CORRECTABLE_ERR_DEFAULT_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_CORRECTABLE_ERR_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_NONFATAL_ERR_DEFAULT_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_NONFATAL_ERR_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_FATAL_ERR_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_FATAL_ERR_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_PM_PME_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_PM_PME_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_PM_TO_ACK_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_RADM_PM_TO_ACK_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_D_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_D_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_C_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_C_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_B_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_B_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_A_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_INT_A_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )


#define CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_OFFSET ( 0x00000058 )

#define CE_PCIE_REGFILE_0_CORE_INTERRUPT_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_INTERRUPT_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_INTERRUPT_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_INTERRUPT_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_INTERRUPT_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_INTERRUPT_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INTERRUPT_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_INTERRUPT_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_INTERRUPT_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_INTERRUPT_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_INTERRUPT_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_INTERRUPT_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_INTERRUPT_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_INTERRUPT_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_INTERRUPT_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_INTERRUPT_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_EML_CONTROL */
	stt_uint32 cfg_eml_control         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HP_PME */
	stt_uint32 hp_pme                  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HP_INT */
	stt_uint32 hp_int                  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* HP_MSI */
	stt_uint32 hp_msi                  	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RTLH_RFC_UPD */
	stt_uint32 rtlh_rfc_upd            	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* WAKE */
	stt_uint32 wake                    	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LINK_REQ_RST_NOT */
	stt_uint32 link_req_rst_not        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* GM_CMPOSER_LOOKUP_ERR */
	stt_uint32 gm_cmposer_lookup_err   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADMX_CMPOSER_LOOKUP_ERR */
	stt_uint32 radmx_cmposer_lookup_err	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CLK_REQ_N */
	stt_uint32 clk_req_n               	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_VENDOR_MSG */
	stt_uint32 radm_vendor_msg         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_AER_RC_ERR_INT */
	stt_uint32 cfg_aer_rc_err_int      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_AER_RC_ERR_MSI */
	stt_uint32 cfg_aer_rc_err_msi      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_CPL_TIMEOUT */
	stt_uint32 trgt_cpl_timeout        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_CPL_TIMEOUT */
	stt_uint32 radm_cpl_timeout        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PME_MSI */
	stt_uint32 cfg_pme_msi             	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PME_INT */
	stt_uint32 cfg_pme_int             	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_SYS_ERR_RC */
	stt_uint32 cfg_sys_err_rc          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_CORRECTABLE_ERR */
	stt_uint32 radm_correctable_err    	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_NONFATAL_ERR */
	stt_uint32 radm_nonfatal_err       	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_FATAL_ERR */
	stt_uint32 radm_fatal_err          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_PM_PME */
	stt_uint32 radm_pm_pme             	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_PM_TO_ACK */
	stt_uint32 radm_pm_to_ack          	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_D */
	stt_uint32 int_d                   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_C */
	stt_uint32 int_c                   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_B */
	stt_uint32 int_b                   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_A */
	stt_uint32 int_a                   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_INTERRUPT_0_REG_DTE ;


/*****************************************************************************************/
/* INT_MASK_REG                                                                          */
/* INT_MASK_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_INT_MASK_REG_INT_MASK_REG_DEFAULT_VALUE             ( 0xFFFFFFFF )
#define CE_PCIE_REGFILE_CORE_INT_MASK_REG_INT_MASK_REG_DEFAULT_VALUE_RESET_VALUE ( 0xFFFFFFFF )


#define CE_PCIE_REGFILE_CORE_INT_MASK_REG_OFFSET ( 0x00000060 )

#define CE_PCIE_REGFILE_0_CORE_INT_MASK_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INT_MASK_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_INT_MASK_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_INT_MASK_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_INT_MASK_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_INT_MASK_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_INT_MASK_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INT_MASK_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_INT_MASK_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_INT_MASK_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_INT_MASK_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_INT_MASK_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_INT_MASK_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_INT_MASK_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_INT_MASK_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_INT_MASK_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_INT_MASK_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* INT_MASK_REG */
	stt_uint32 int_mask_reg	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_INT_MASK_REG_DTE ;


/*****************************************************************************************/
/* INT_RESET_WIRE                                                                        */
/* INT_RESET_WIRE                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_INT_RESET_WIRE_INT_RESET_WIRE_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_INT_RESET_WIRE_INT_RESET_WIRE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_INT_RESET_WIRE_OFFSET ( 0x00000064 )

#define CE_PCIE_REGFILE_0_CORE_INT_RESET_WIRE_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INT_RESET_WIRE_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_INT_RESET_WIRE_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_INT_RESET_WIRE_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_INT_RESET_WIRE_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_INT_RESET_WIRE_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_INT_RESET_WIRE_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_INT_RESET_WIRE_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_INT_RESET_WIRE_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_INT_RESET_WIRE_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_INT_RESET_WIRE_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_INT_RESET_WIRE_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_INT_RESET_WIRE_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_INT_RESET_WIRE_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_INT_RESET_WIRE_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_INT_RESET_WIRE_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_INT_RESET_WIRE_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* INT_RESET_WIRE */
	stt_uint32 int_reset_wire	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_INT_RESET_WIRE_DTE ;


/*****************************************************************************************/
/* MSG_PAYLOAD_REG                                                                       */
/* MSG_PAYLOAD_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_RADM_MSG_PAYLOAD_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_RADM_MSG_PAYLOAD_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_OFFSET ( 0x00000068 )

#define CE_PCIE_REGFILE_0_CORE_MSG_PAYLOAD_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_MSG_PAYLOAD_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_MSG_PAYLOAD_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_MSG_PAYLOAD_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_MSG_PAYLOAD_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_MSG_PAYLOAD_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_MSG_PAYLOAD_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_MSG_PAYLOAD_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_MSG_PAYLOAD_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_MSG_PAYLOAD_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* RADM_MSG_PAYLOAD */
	stt_uint32 radm_msg_payload	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_DTE ;


/*****************************************************************************************/
/* MSG_REQ_ID                                                                            */
/* MSG_REQ_ID                                                                            */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_MSG_REQ_ID_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSG_REQ_ID_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSG_REQ_ID_RADM_MSG_REQ_ID_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSG_REQ_ID_RADM_MSG_REQ_ID_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_MSG_REQ_ID_OFFSET ( 0x0000006C )

#define CE_PCIE_REGFILE_0_CORE_MSG_REQ_ID_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSG_REQ_ID_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_MSG_REQ_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_MSG_REQ_ID_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_MSG_REQ_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_MSG_REQ_ID_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_MSG_REQ_ID_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSG_REQ_ID_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_MSG_REQ_ID_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_MSG_REQ_ID_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_MSG_REQ_ID_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_MSG_REQ_ID_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_MSG_REQ_ID_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_MSG_REQ_ID_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_MSG_REQ_ID_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_MSG_REQ_ID_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_MSG_REQ_ID_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_MSG_REQ_ID */
	stt_uint32 radm_msg_req_id	: 16 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_MSG_REQ_ID_DTE ;


/*****************************************************************************************/
/* TRGT_TIMEOUT_REG                                                                      */
/* TRGT_TIMEOUT_REG                                                                      */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_R1_DEFAULT_VALUE                                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_R1_DEFAULT_VALUE_RESET_VALUE                        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_CPL_TIMEOUT_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_CPL_TIMEOUT_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_FUNC_NUM_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_FUNC_NUM_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_TC_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_TC_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_ATTR_DEFAULT_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_ATTR_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_LEN_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_CPL_LEN_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_LOOKUP_ID_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_TRGT_TIMEOUT_LOOKUP_ID_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )


#define CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_OFFSET ( 0x00000070 )

#define CE_PCIE_REGFILE_0_CORE_TRGT_TIMEOUT_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_TRGT_TIMEOUT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_TRGT_TIMEOUT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_TRGT_TIMEOUT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_TRGT_TIMEOUT_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_TRGT_TIMEOUT_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_TRGT_TIMEOUT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_TRGT_TIMEOUT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_TRGT_TIMEOUT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_TRGT_TIMEOUT_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                       	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_CPL_TIMEOUT */
	stt_uint32 trgt_cpl_timeout         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_CPL_FUNC_NUM */
	stt_uint32 trgt_timeout_cpl_func_num	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_CPL_TC */
	stt_uint32 trgt_timeout_cpl_tc      	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_CPL_ATTR */
	stt_uint32 trgt_timeout_cpl_attr    	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_CPL_LEN */
	stt_uint32 trgt_timeout_cpl_len     	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_LOOKUP_ID */
	stt_uint32 trgt_timeout_lookup_id   	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_DTE ;


/*****************************************************************************************/
/* TRGT_LOOKUP_REG                                                                       */
/* TRGT_LOOKUP_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_TRGT_LOOKUP_EMPTY_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_TRGT_LOOKUP_EMPTY_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_TRGT_LOOKUP_ID_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_TRGT_LOOKUP_ID_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )


#define CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_OFFSET ( 0x00000074 )

#define CE_PCIE_REGFILE_0_CORE_TRGT_LOOKUP_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_TRGT_LOOKUP_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_TRGT_LOOKUP_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_TRGT_LOOKUP_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_TRGT_LOOKUP_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_TRGT_LOOKUP_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_TRGT_LOOKUP_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_TRGT_LOOKUP_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_TRGT_LOOKUP_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_TRGT_LOOKUP_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 23 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_LOOKUP_EMPTY */
	stt_uint32 trgt_lookup_empty	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_LOOKUP_ID */
	stt_uint32 trgt_lookup_id   	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_DTE ;


/*****************************************************************************************/
/* RADM_TIMEOUT_REG                                                                      */
/* RADM_TIMEOUT_REG                                                                      */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_R1_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_R1_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_CPL_TIMEOUT_DEFAULT_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_CPL_TIMEOUT_DEFAULT_VALUE_RESET_VALUE      ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_FUNC_NUM_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_FUNC_NUM_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_TC_DEFAULT_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_TC_DEFAULT_VALUE_RESET_VALUE   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_ATTR_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_ATTR_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_LEN_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_LEN_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_TAG_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_RADM_TIMEOUT_CPL_TAG_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )


#define CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_OFFSET ( 0x00000078 )

#define CE_PCIE_REGFILE_0_CORE_RADM_TIMEOUT_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_RADM_TIMEOUT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_RADM_TIMEOUT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_RADM_TIMEOUT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_RADM_TIMEOUT_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_RADM_TIMEOUT_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_RADM_TIMEOUT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_RADM_TIMEOUT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_RADM_TIMEOUT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_RADM_TIMEOUT_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                   	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_CPL_TIMEOUT */
	stt_uint32 radm_cpl_timeout     	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_FUNC_NUM */
	stt_uint32 radm_timeout_func_num	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_CPL_TC */
	stt_uint32 radm_timeout_cpl_tc  	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_CPL_ATTR */
	stt_uint32 radm_timeout_cpl_attr	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_CPL_LEN */
	stt_uint32 radm_timeout_cpl_len 	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_CPL_TAG */
	stt_uint32 radm_timeout_cpl_tag 	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_DTE ;


/*****************************************************************************************/
/* SLV_RESP_MISC_INFO_REG                                                                */
/* SLV_RESP_MISC_INFO_REG                                                                */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_SLV_RESP_MISC_INFO_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_SLV_RESP_MISC_INFO_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_OFFSET ( 0x0000007C )

#define CE_PCIE_REGFILE_0_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_SLV_RESP_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_SLV_RESP_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_SLV_RESP_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_SLV_RESP_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_SLV_RESP_MISC_INFO_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 22 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_RESP_MISC_INFO */
	stt_uint32 slv_resp_misc_info	: 10 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_DTE ;


/*****************************************************************************************/
/* ERR_MAP_REG                                                                           */
/* ERR_MAP_REG                                                                           */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_SLV_RESP_ERR_MAP_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_SLV_RESP_ERR_MAP_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_MSTR_RESP_ERR_MAP_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_MSTR_RESP_ERR_MAP_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_ERR_MAP_REG_OFFSET ( 0x00000080 )

#define CE_PCIE_REGFILE_0_CORE_ERR_MAP_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ERR_MAP_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_ERR_MAP_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_ERR_MAP_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_ERR_MAP_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_ERR_MAP_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_ERR_MAP_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ERR_MAP_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_ERR_MAP_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_ERR_MAP_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_ERR_MAP_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_ERR_MAP_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_ERR_MAP_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_ERR_MAP_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_ERR_MAP_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_ERR_MAP_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_ERR_MAP_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_RESP_ERR_MAP */
	stt_uint32 slv_resp_err_map 	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_RESP_ERR_MAP */
	stt_uint32 mstr_resp_err_map	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_ERR_MAP_REG_DTE ;


/*****************************************************************************************/
/* MSTR_REQ_MISC_INFO_REG                                                                */
/* MSTR_REQ_MISC_INFO_REG                                                                */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_MSTR_REQ_MISC_INFO_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_MSTR_REQ_MISC_INFO_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_OFFSET ( 0x00000084 )

#define CE_PCIE_REGFILE_0_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_MSTR_REQ_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_MSTR_REQ_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_MSTR_REQ_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_MSTR_REQ_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_MSTR_REQ_MISC_INFO_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_REQ_MISC_INFO */
	stt_uint32 mstr_req_misc_info	: 24 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_DTE ;


/*****************************************************************************************/
/* ENDIAN_REG                                                                            */
/* ENDIAN_REG                                                                            */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_R1_DEFAULT_VALUE                          ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_R1_DEFAULT_VALUE_RESET_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_DBI_BIG_ENDIAN_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_DBI_BIG_ENDIAN_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_MSTR_BIG_ENDIAN_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_MSTR_BIG_ENDIAN_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_SLV_BIG_ENDIAN_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_SLV_BIG_ENDIAN_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )


#define CE_PCIE_REGFILE_CORE_ENDIAN_REG_OFFSET ( 0x00000088 )

#define CE_PCIE_REGFILE_0_CORE_ENDIAN_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ENDIAN_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_ENDIAN_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_ENDIAN_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_ENDIAN_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_ENDIAN_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_ENDIAN_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ENDIAN_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_ENDIAN_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_ENDIAN_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_ENDIAN_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_ENDIAN_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_ENDIAN_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_ENDIAN_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_ENDIAN_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_ENDIAN_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_ENDIAN_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1             	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DBI_BIG_ENDIAN */
	stt_uint32 dbi_big_endian 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_BIG_ENDIAN */
	stt_uint32 mstr_big_endian	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_BIG_ENDIAN */
	stt_uint32 slv_big_endian 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_ENDIAN_REG_DTE ;


/*****************************************************************************************/
/* SLV_REQ_MISC_INFO_REG                                                                 */
/* SLV_REQ_MISC_INFO_REG                                                                 */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_SLV_REQ_MISC_INFO_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_SLV_REQ_MISC_INFO_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_OFFSET ( 0x0000008C )

#define CE_PCIE_REGFILE_0_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_SLV_REQ_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_SLV_REQ_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_SLV_REQ_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_SLV_REQ_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_SLV_REQ_MISC_INFO_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_REQ_MISC_INFO */
	stt_uint32 slv_req_misc_info	: 26 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_DTE ;


/*****************************************************************************************/
/* MSTR_RESP_MISC_INFO_REG                                                               */
/* MSTR_RESP_MISC_INFO_REG                                                               */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_R1_DEFAULT_VALUE                              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_R1_DEFAULT_VALUE_RESET_VALUE                  ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_MSTR_RESP_MISC_INFO_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_MSTR_RESP_MISC_INFO_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_OFFSET ( 0x00000090 )

#define CE_PCIE_REGFILE_0_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_MSTR_RESP_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_MSTR_RESP_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_MSTR_RESP_MISC_INFO_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_MSTR_RESP_MISC_INFO_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_MSTR_RESP_MISC_INFO_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                 	: 19 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_RESP_MISC_INFO */
	stt_uint32 mstr_resp_misc_info	: 13 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_DTE ;


/*****************************************************************************************/
/* POWER_MANAGMENT_REG                                                                   */
/* POWER_MANAGMENT_REG                                                                   */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_R1_DEFAULT_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_R1_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_REQ_ENTR_L1_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_REQ_ENTR_L1_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_READY_ENTR_L23_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_READY_ENTR_L23_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_REQ_EXIT_L1_DEFAULT_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_APP_REQ_EXIT_L1_DEFAULT_VALUE_RESET_VALUE    ( 0x0 )


#define CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_OFFSET ( 0x00000094 )

#define CE_PCIE_REGFILE_0_CORE_POWER_MANAGMENT_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_POWER_MANAGMENT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_POWER_MANAGMENT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_POWER_MANAGMENT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_POWER_MANAGMENT_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_POWER_MANAGMENT_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_POWER_MANAGMENT_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_POWER_MANAGMENT_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_POWER_MANAGMENT_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_POWER_MANAGMENT_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_REQ_ENTR_L1 */
	stt_uint32 app_req_entr_l1   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_READY_ENTR_L23 */
	stt_uint32 app_ready_entr_l23	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_REQ_EXIT_L1 */
	stt_uint32 app_req_exit_l1   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_DTE ;


/*****************************************************************************************/
/* ADDRESS_CONTROL_1_REG                                                                 */
/* ADDRESS_CONTROL_1_REG                                                                 */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_R1_DEFAULT_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_R1_DEFAULT_VALUE_RESET_VALUE               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_CFG_PBUS_NUM_DEFAULT_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_CFG_PBUS_NUM_DEFAULT_VALUE_RESET_VALUE     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_CFG_PBUS_DEV_NUM_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_CFG_PBUS_DEV_NUM_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_DSTATE_DEFAULT_VALUE                    ( 0x4 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_DSTATE_DEFAULT_VALUE_RESET_VALUE        ( 0x4 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_STATUS_DEFAULT_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_STATUS_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_PME_EN_DEFAULT_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_PM_PME_EN_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )


#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_OFFSET ( 0x00000098 )

#define CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1              	: 14 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PBUS_NUM */
	stt_uint32 cfg_pbus_num    	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PBUS_DEV_NUM */
	stt_uint32 cfg_pbus_dev_num	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_DSTATE */
	stt_uint32 pm_dstate       	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_STATUS */
	stt_uint32 pm_status       	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PM_PME_EN */
	stt_uint32 pm_pme_en       	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_DTE ;


/*****************************************************************************************/
/* ADDRESS_CONTROL_2_REG                                                                 */
/* ADDRESS_CONTROL_2_REG                                                                 */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R1_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R1_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_AUX_PM_EN_DEFAULT_VALUE                        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_AUX_PM_EN_DEFAULT_VALUE_RESET_VALUE            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_FUNC_OUT_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_FUNC_OUT_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_TYPE_OUT_DEFAULT_VALUE                       ( 0x1 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_TYPE_OUT_DEFAULT_VALUE_RESET_VALUE           ( 0x1 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_BAR_OUT_DEFAULT_VALUE                        ( 0x6 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_BAR_OUT_DEFAULT_VALUE_RESET_VALUE            ( 0x6 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_ROMBAR_OUT_DEFAULT_VALUE                     ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_R_ROMBAR_OUT_DEFAULT_VALUE_RESET_VALUE         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_CFG_LINK_AUTO_BW_INT_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_CFG_LINK_AUTO_BW_INT_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_CFG_BW_MGT_INT_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_CFG_BW_MGT_INT_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )


#define CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_OFFSET ( 0x0000009C )

#define CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_ADDRESS_CONTROL_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_ADDRESS_CONTROL_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                  	: 12 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AUX_PM_EN */
	stt_uint32 aux_pm_en           	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_FUNC_OUT */
	stt_uint32 r_func_out          	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_TYPE_OUT */
	stt_uint32 r_type_out          	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_BAR_OUT */
	stt_uint32 r_bar_out           	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_ROMBAR_OUT */
	stt_uint32 r_rombar_out        	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_LINK_AUTO_BW_INT */
	stt_uint32 cfg_link_auto_bw_int	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BW_MGT_INT */
	stt_uint32 cfg_bw_mgt_int      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_DTE ;


/*****************************************************************************************/
/* R_ADDR_OUT_1                                                                          */
/* R_ADDR_OUT_1                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_1_R_ADDR_OUT_31_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_1_R_ADDR_OUT_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_1_OFFSET ( 0x000000A0 )

#define CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_1_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_R_ADDR_OUT_1_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_R_ADDR_OUT_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_R_ADDR_OUT_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_1_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_1_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_R_ADDR_OUT_1_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_R_ADDR_OUT_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_R_ADDR_OUT_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_1_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_R_ADDR_OUT_1_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_R_ADDR_OUT_1_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_R_ADDR_OUT_1_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_R_ADDR_OUT_1_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_R_ADDR_OUT_1_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R_ADDR_OUT_31_0 */
	stt_uint32 r_addr_out_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_R_ADDR_OUT_1_DTE ;


/*****************************************************************************************/
/* R_ADDR_OUT_2                                                                          */
/* R_ADDR_OUT_2                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_2_R_ADDR_OUT_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_2_R_ADDR_OUT_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_R_ADDR_OUT_2_OFFSET ( 0x000000A4 )

#define CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_2_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_R_ADDR_OUT_2_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_R_ADDR_OUT_2_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_2_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_R_ADDR_OUT_2_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_R_ADDR_OUT_2_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_2_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_R_ADDR_OUT_2_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_R_ADDR_OUT_2_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_2_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_R_ADDR_OUT_2_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_R_ADDR_OUT_2_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_R_ADDR_OUT_2_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_R_ADDR_OUT_2_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_R_ADDR_OUT_2_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_R_ADDR_OUT_2_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_R_ADDR_OUT_2_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R_ADDR_OUT_63_32 */
	stt_uint32 r_addr_out_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_R_ADDR_OUT_2_DTE ;


/*****************************************************************************************/
/* X_ADDR_OUT_1                                                                          */
/* X_ADDR_OUT_1                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_1_X_ADDR_OUT_31_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_1_X_ADDR_OUT_31_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_1_OFFSET ( 0x000000A8 )

#define CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_1_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_X_ADDR_OUT_1_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_X_ADDR_OUT_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_X_ADDR_OUT_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_1_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_1_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_X_ADDR_OUT_1_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_X_ADDR_OUT_1_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_1_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_X_ADDR_OUT_1_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_1_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_X_ADDR_OUT_1_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_X_ADDR_OUT_1_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_X_ADDR_OUT_1_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_X_ADDR_OUT_1_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_X_ADDR_OUT_1_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* X_ADDR_OUT_31_0 */
	stt_uint32 x_addr_out_31_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_X_ADDR_OUT_1_DTE ;


/*****************************************************************************************/
/* X_ADDR_OUT_2                                                                          */
/* X_ADDR_OUT_2                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_2_X_ADDR_OUT_63_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_2_X_ADDR_OUT_63_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_X_ADDR_OUT_2_OFFSET ( 0x000000AC )

#define CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_2_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_X_ADDR_OUT_2_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_X_ADDR_OUT_2_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_2_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_X_ADDR_OUT_2_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_X_ADDR_OUT_2_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_2_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_X_ADDR_OUT_2_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_X_ADDR_OUT_2_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_2_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_X_ADDR_OUT_2_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_X_ADDR_OUT_2_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_X_ADDR_OUT_2_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_X_ADDR_OUT_2_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_X_ADDR_OUT_2_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_X_ADDR_OUT_2_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_X_ADDR_OUT_2_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* X_ADDR_OUT_63_32 */
	stt_uint32 x_addr_out_63_32	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_X_ADDR_OUT_2_DTE ;


/*****************************************************************************************/
/* DEBUG_CONTROL                                                                         */
/* DEBUG_CONTROL                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_DEBUG_BUS_CONTROL_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_DEBUG_BUS_CONTROL_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_OFFSET ( 0x000000B0 )

#define CE_PCIE_REGFILE_0_CORE_DEBUG_CONTROL_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_CONTROL_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_CONTROL_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DEBUG_CONTROL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DEBUG_CONTROL_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DEBUG_CONTROL_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DEBUG_CONTROL_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_CONTROL_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_CONTROL_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DEBUG_CONTROL_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DEBUG_CONTROL_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DEBUG_CONTROL_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DEBUG_CONTROL_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DEBUG_CONTROL_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DEBUG_CONTROL_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DEBUG_CONTROL_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 30 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEBUG_BUS_CONTROL */
	stt_uint32 debug_bus_control	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DEBUG_CONTROL_DTE ;


/*****************************************************************************************/
/* APP_INIT_RST_REG                                                                      */
/* APP_INIT_RST_REG                                                                      */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_R1_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_R1_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_APP_INIT_RST_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_APP_INIT_RST_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_OFFSET ( 0x000000B4 )

#define CE_PCIE_REGFILE_0_CORE_APP_INIT_RST_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_APP_INIT_RST_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_APP_INIT_RST_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_APP_INIT_RST_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_APP_INIT_RST_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_APP_INIT_RST_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_APP_INIT_RST_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_APP_INIT_RST_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_APP_INIT_RST_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_APP_INIT_RST_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_APP_INIT_RST_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_APP_INIT_RST_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_APP_INIT_RST_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_APP_INIT_RST_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_APP_INIT_RST_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_APP_INIT_RST_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1          	: 31 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_INIT_RST */
	stt_uint32 app_init_rst	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_APP_INIT_RST_REG_DTE ;


/*****************************************************************************************/
/* PHY_CFG_REG                                                                           */
/* PHY_CFG_REG                                                                           */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_R1_DEFAULT_VALUE                            ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_R1_DEFAULT_VALUE_RESET_VALUE                ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_LNXY_RXBCNDETEN_A_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_LNXY_RXBCNDETEN_A_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_REFCLK_SEL_DEFAULT_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_REFCLK_SEL_DEFAULT_VALUE_RESET_VALUE        ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_LNXY_CDRFASTLOCK_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_LNXY_CDRFASTLOCK_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )


#define CE_PCIE_REGFILE_CORE_PHY_CFG_REG_OFFSET ( 0x000000B8 )

#define CE_PCIE_REGFILE_0_CORE_PHY_CFG_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_PHY_CFG_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_PHY_CFG_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_PHY_CFG_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_PHY_CFG_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_PHY_CFG_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_PHY_CFG_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_PHY_CFG_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_PHY_CFG_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_PHY_CFG_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_PHY_CFG_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_PHY_CFG_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_PHY_CFG_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_PHY_CFG_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_PHY_CFG_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_PHY_CFG_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_PHY_CFG_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1               	: 28 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LNXY_RXBCNDETEN_A */
	stt_uint32 lnxy_rxbcndeten_a	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REFCLK_SEL */
	stt_uint32 refclk_sel       	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LNXY_CDRFASTLOCK */
	stt_uint32 lnxy_cdrfastlock 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_PHY_CFG_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_0_REG                                                                     */
/* DIAG_STATUS_0_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_DIAG_STATUS_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_DIAG_STATUS_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_OFFSET ( 0x000000C8 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_0 */
	stt_uint32 diag_status_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_1_REG                                                                     */
/* DIAG_STATUS_1_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_DIAG_STATUS_1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_DIAG_STATUS_1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_OFFSET ( 0x000000CC )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_1 */
	stt_uint32 diag_status_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_2_REG                                                                     */
/* DIAG_STATUS_2_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_DIAG_STATUS_2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_DIAG_STATUS_2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_OFFSET ( 0x000000D0 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_2 */
	stt_uint32 diag_status_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_3_REG                                                                     */
/* DIAG_STATUS_3_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_DIAG_STATUS_3_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_DIAG_STATUS_3_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_OFFSET ( 0x000000D4 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_3_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_3_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_3_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_3_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_3 */
	stt_uint32 diag_status_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_4_REG                                                                     */
/* DIAG_STATUS_4_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_DIAG_STATUS_4_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_DIAG_STATUS_4_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_OFFSET ( 0x000000D8 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_4_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_4_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_4_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_4_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_4 */
	stt_uint32 diag_status_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_5_REG                                                                     */
/* DIAG_STATUS_5_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_DIAG_STATUS_5_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_DIAG_STATUS_5_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_OFFSET ( 0x000000DC )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_5_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_5_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_5_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_5_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_5 */
	stt_uint32 diag_status_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_6_REG                                                                     */
/* DIAG_STATUS_6_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_DIAG_STATUS_6_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_DIAG_STATUS_6_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_OFFSET ( 0x000000E0 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_6_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_6_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_6_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_6_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_6 */
	stt_uint32 diag_status_6	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_7_REG                                                                     */
/* DIAG_STATUS_7_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_DIAG_STATUS_7_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_DIAG_STATUS_7_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_OFFSET ( 0x000000E4 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_7_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_7_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_7_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_7_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_7 */
	stt_uint32 diag_status_7	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_8_REG                                                                     */
/* DIAG_STATUS_8_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_DIAG_STATUS_8_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_DIAG_STATUS_8_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_OFFSET ( 0x000000E8 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_8_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_8_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_8_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_8_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_8 */
	stt_uint32 diag_status_8	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_9_REG                                                                     */
/* DIAG_STATUS_9_REG                                                                     */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_DIAG_STATUS_9_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_DIAG_STATUS_9_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_OFFSET ( 0x000000EC )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_9_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_9_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_9_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_9_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_9 */
	stt_uint32 diag_status_9	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_10_REG                                                                    */
/* DIAG_STATUS_10_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_DIAG_STATUS_10_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_DIAG_STATUS_10_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_OFFSET ( 0x000000F0 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_10_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_10_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_10_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_10_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_10 */
	stt_uint32 diag_status_10	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_11_REG                                                                    */
/* DIAG_STATUS_11_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_DIAG_STATUS_11_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_DIAG_STATUS_11_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_OFFSET ( 0x000000F4 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_11_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_11_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_11_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_11_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_11 */
	stt_uint32 diag_status_11	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_12_REG                                                                    */
/* DIAG_STATUS_12_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_DIAG_STATUS_12_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_DIAG_STATUS_12_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_OFFSET ( 0x000000F8 )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_12_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_12_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_12_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_12_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIAG_STATUS_12 */
	stt_uint32 diag_status_12	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_DTE ;


/*****************************************************************************************/
/* DIAG_STATUS_13_REG                                                                    */
/* DIAG_STATUS_13_REG                                                                    */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_R1_DEFAULT_VALUE                         ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_R1_DEFAULT_VALUE_RESET_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_DIAG_STATUS_13_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_DIAG_STATUS_13_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_OFFSET ( 0x000000FC )

#define CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_13_REG_ADDRESS   	( CE_PCIE_REGFILE_0_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_OFFSET )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_CORE_DIAG_STATUS_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_CORE_DIAG_STATUS_13_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_13_REG_ADDRESS   	( CE_PCIE_REGFILE_1_CORE_ADDRESS + CE_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_OFFSET )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_CORE_DIAG_STATUS_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_CORE_DIAG_STATUS_13_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1            	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_13 */
	stt_uint32 diag_status_13	: 29 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_0_REG                                                                         */
/* AHB_CFG_0_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_OFFSET ( 0x00000000 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_1_REG                                                                         */
/* AHB_CFG_1_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_OFFSET ( 0x00000004 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_2_REG                                                                         */
/* AHB_CFG_2_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_OFFSET ( 0x00000008 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_3_REG                                                                         */
/* AHB_CFG_3_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_OFFSET ( 0x0000000C )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_3_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_3_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_3_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_3_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_4_REG                                                                         */
/* AHB_CFG_4_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_OFFSET ( 0x00000010 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_4_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_4_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_4_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_4_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_5_REG                                                                         */
/* AHB_CFG_5_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_OFFSET ( 0x00000014 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_5_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_5_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_5_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_5_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_6_REG                                                                         */
/* AHB_CFG_6_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_OFFSET ( 0x00000018 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_6_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_6_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_6_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_6_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_7_REG                                                                         */
/* AHB_CFG_7_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_OFFSET ( 0x0000001C )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_7_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_7_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_7_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_7_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_8_REG                                                                         */
/* AHB_CFG_8_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_PREFETCH_WINDOW_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_PREFETCH_WINDOW_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_OFFSET ( 0x00000020 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_8_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_8_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_8_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_8_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PREFETCH_WINDOW */
	stt_uint32 prefetch_window	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_9_REG                                                                         */
/* AHB_CFG_9_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_PREFETCH_MASK_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_PREFETCH_MASK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_OFFSET ( 0x00000024 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_9_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_9_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_9_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_9_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* PREFETCH_MASK */
	stt_uint32 prefetch_mask	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_10_REG                                                                        */
/* AHB_CFG_10_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_DIRECT_ADDRESS_REGION_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_DIRECT_ADDRESS_REGION_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_OFFSET ( 0x00000028 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_10_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_10_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_10_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_10_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIRECT_ADDRESS_REGION */
	stt_uint32 direct_address_region	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_11_REG                                                                        */
/* AHB_CFG_11_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_DIRECT_ADDRESS_MASK_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_DIRECT_ADDRESS_MASK_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_OFFSET ( 0x0000002C )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_11_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_11_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_11_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_11_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* DIRECT_ADDRESS_MASK */
	stt_uint32 direct_address_mask	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_12_REG                                                                        */
/* AHB_CFG_12_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_BASE_ADDR_SUB_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_BASE_ADDR_SUB_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_OFFSET ( 0x00000030 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_12_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_12_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_12_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_12_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* BASE_ADDR_SUB */
	stt_uint32 base_addr_sub	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_13_REG                                                                        */
/* AHB_CFG_13_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_BASE_ADDR_ADD_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_BASE_ADDR_ADD_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_OFFSET ( 0x00000034 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_13_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_13_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_13_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_13_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* BASE_ADDR_ADD */
	stt_uint32 base_addr_add	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_14_REG                                                                        */
/* AHB_CFG_14_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_R1_DEFAULT_VALUE                                   ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_R1_DEFAULT_VALUE_RESET_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_CFG_2K_BNDRY_EN_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_CFG_2K_BNDRY_EN_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_CFG_4BYTE_PLACMENT_DEFAULT_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_CFG_4BYTE_PLACMENT_DEFAULT_VALUE_RESET_VALUE       ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_DONT_USE_ADD_SUB_FEATURE_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_DONT_USE_ADD_SUB_FEATURE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_INCR_READ_VALUE_DEFAULT_VALUE                      ( 0x10 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_INCR_READ_VALUE_DEFAULT_VALUE_RESET_VALUE          ( 0x10 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_PREFETCH_ENABLE_DEFAULT_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_PREFETCH_ENABLE_DEFAULT_VALUE_RESET_VALUE          ( 0x0 )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_OFFSET ( 0x00000038 )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_14_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_14_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_14_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_14_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_14_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_14_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_14_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_14_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_14_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_14_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                      	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_2K_BNDRY_EN */
	stt_uint32 cfg_2k_bndry_en         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_4BYTE_PLACMENT */
	stt_uint32 cfg_4byte_placment      	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DONT_USE_ADD_SUB_FEATURE */
	stt_uint32 dont_use_add_sub_feature	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INCR_READ_VALUE */
	stt_uint32 incr_read_value         	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PREFETCH_ENABLE */
	stt_uint32 prefetch_enable         	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_DTE ;


/*****************************************************************************************/
/* AHB_CFG_15_REG                                                                        */
/* AHB_CFG_15_REG                                                                        */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R4_RESERVE_VALUE                                  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R4_RESERVE_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DATA_HYST_LOW_DATA_HYST_LOW_VALUE                 ( 0xB )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DATA_HYST_LOW_DATA_HYST_LOW_VALUE_RESET_VALUE     ( 0xB )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R3_RESERVE_VALUE                                  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R3_RESERVE_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DATA_HYST_HIGH_DATA_HYST_HIGH_VALUE               ( 0xD )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DATA_HYST_HIGH_DATA_HYST_HIGH_VALUE_RESET_VALUE   ( 0xD )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R2_RESERVE_VALUE                                  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R2_RESERVE_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_CMD_HYST_LOW_COMMAND_HYST_LOW_VALUE               ( 0x7 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_CMD_HYST_LOW_COMMAND_HYST_LOW_VALUE_RESET_VALUE   ( 0x7 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R1_RESERVE_VALUE                                  ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_R1_RESERVE_VALUE_RESET_VALUE                      ( 0x0 )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_CMD_HYST_HIGH_COMMAND_HYST_HIGH_VALUE             ( 0xA )
#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_CMD_HYST_HIGH_COMMAND_HYST_HIGH_VALUE_RESET_VALUE ( 0xA )


#define CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_OFFSET ( 0x0000003C )

#define CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_15_REG_ADDRESS   	( CE_PCIE_REGFILE_0_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_OFFSET )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_15_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_15_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_AHB2EC_AHB_CFG_15_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_AHB2EC_AHB_CFG_15_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_15_REG_ADDRESS   	( CE_PCIE_REGFILE_1_AHB2EC_ADDRESS + CE_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_OFFSET )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_15_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_15_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_AHB2EC_AHB_CFG_15_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_AHB2EC_AHB_CFG_15_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* Reserve4 */
	stt_uint32 r4            	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* data_hyst_low */
	stt_uint32 data_hyst_low 	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserve3 */
	stt_uint32 r3            	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* data_hyst_high */
	stt_uint32 data_hyst_high	: 5 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserve2 */
	stt_uint32 r2            	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* command_hyst_low */
	stt_uint32 cmd_hyst_low  	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserve1 */
	stt_uint32 r1            	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* command_hyst_high */
	stt_uint32 cmd_hyst_high 	: 4 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_0_REG                                                                          */
/* EC_CFG_0_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_R1_DEFAULT_VALUE                                               ( 0x8E4 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_R1_DEFAULT_VALUE_RESET_VALUE                                   ( 0x8E4 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_USE_COHRNCY_MECH_DEFAULT_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_USE_COHRNCY_MECH_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_USE_HSEL_BASE_DEFAULT_VALUE                                ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_USE_HSEL_BASE_DEFAULT_VALUE_RESET_VALUE                    ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_ADD_REPLACMENT_DEFAULT_VALUE                               ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_ADD_REPLACMENT_DEFAULT_VALUE_RESET_VALUE                   ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_REPLACE_MSB_BITS_DEFAULT_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_REPLACE_MSB_BITS_DEFAULT_VALUE_RESET_VALUE                 ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_TRANSACTION_BURST_TYPE_DEFAULT_VALUE                       ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_TRANSACTION_BURST_TYPE_DEFAULT_VALUE_RESET_VALUE           ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_POLLING_WAIT_COUNTER_START_VALUE_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_CFG_POLLING_WAIT_COUNTER_START_VALUE_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_OFFSET ( 0x00000000 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                                  	: 13 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_USE_COHRNCY_MECH */
	stt_uint32 cfg_use_cohrncy_mech                	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_USE_HSEL_BASE */
	stt_uint32 cfg_use_hsel_base                   	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_ADD_REPLACMENT */
	stt_uint32 cfg_add_replacment                  	: 6 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_REPLACE_MSB_BITS */
	stt_uint32 cfg_replace_msb_bits                	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_TRANSACTION_BURST_TYPE */
	stt_uint32 cfg_transaction_burst_type          	: 3 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_POLLING_WAIT_COUNTER_START_VALUE */
	stt_uint32 cfg_polling_wait_counter_start_value	: 7 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_1_REG                                                                          */
/* EC_CFG_1_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_AHB_ADDR_BASE_ADDR_SEL_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_AHB_ADDR_BASE_ADDR_SEL_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_OFFSET ( 0x00000004 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_0 */
	stt_uint32 ahb_addr_base_addr_sel_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_2_REG                                                                          */
/* EC_CFG_2_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_AHB_ADDR_BASE_ADDR_SEL_1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_AHB_ADDR_BASE_ADDR_SEL_1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_OFFSET ( 0x00000008 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_1 */
	stt_uint32 ahb_addr_base_addr_sel_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_3_REG                                                                          */
/* EC_CFG_3_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_AHB_ADDR_BASE_ADDR_SEL_2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_AHB_ADDR_BASE_ADDR_SEL_2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_OFFSET ( 0x0000000C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_3_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_3_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_3_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_3_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_2 */
	stt_uint32 ahb_addr_base_addr_sel_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_4_REG                                                                          */
/* EC_CFG_4_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_AHB_ADDR_BASE_ADDR_SEL_3_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_AHB_ADDR_BASE_ADDR_SEL_3_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_OFFSET ( 0x00000010 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_4_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_4_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_4_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_4_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_3 */
	stt_uint32 ahb_addr_base_addr_sel_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_5_REG                                                                          */
/* EC_CFG_5_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_AHB_ADDR_BASE_ADDR_SEL_4_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_AHB_ADDR_BASE_ADDR_SEL_4_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_OFFSET ( 0x00000014 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_5_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_5_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_5_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_5_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_4 */
	stt_uint32 ahb_addr_base_addr_sel_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_6_REG                                                                          */
/* EC_CFG_6_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_AHB_ADDR_BASE_ADDR_SEL_5_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_AHB_ADDR_BASE_ADDR_SEL_5_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_OFFSET ( 0x00000018 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_6_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_6_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_6_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_6_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_BASE_ADDR_SEL_5 */
	stt_uint32 ahb_addr_base_addr_sel_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_7_REG                                                                          */
/* EC_CFG_7_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_AHB_ADDR_END_ADDR_SEL_0_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_AHB_ADDR_END_ADDR_SEL_0_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_OFFSET ( 0x0000001C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_7_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_7_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_7_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_7_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_0 */
	stt_uint32 ahb_addr_end_addr_sel_0	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_8_REG                                                                          */
/* EC_CFG_8_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_AHB_ADDR_END_ADDR_SEL_1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_AHB_ADDR_END_ADDR_SEL_1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_OFFSET ( 0x00000020 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_8_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_8_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_8_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_8_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_8_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_8_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_8_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_1 */
	stt_uint32 ahb_addr_end_addr_sel_1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_9_REG                                                                          */
/* EC_CFG_9_REG                                                                          */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_AHB_ADDR_END_ADDR_SEL_2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_AHB_ADDR_END_ADDR_SEL_2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_OFFSET ( 0x00000024 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_9_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_9_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_9_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_9_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_9_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_9_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_9_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_2 */
	stt_uint32 ahb_addr_end_addr_sel_2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_10_REG                                                                         */
/* EC_CFG_10_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_AHB_ADDR_END_ADDR_SEL_3_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_AHB_ADDR_END_ADDR_SEL_3_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_OFFSET ( 0x0000002C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_10_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_10_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_10_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_10_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_10_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_10_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_10_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_3 */
	stt_uint32 ahb_addr_end_addr_sel_3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_11_REG                                                                         */
/* EC_CFG_11_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_AHB_ADDR_END_ADDR_SEL_4_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_AHB_ADDR_END_ADDR_SEL_4_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_OFFSET ( 0x00000030 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_11_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_11_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_11_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_11_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_11_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_11_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_11_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_4 */
	stt_uint32 ahb_addr_end_addr_sel_4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_12_REG                                                                         */
/* EC_CFG_12_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_AHB_ADDR_END_ADDR_SEL_5_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_AHB_ADDR_END_ADDR_SEL_5_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_OFFSET ( 0x00000034 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_12_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_12_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_12_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_12_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_12_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_12_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_12_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_ADDR_END_ADDR_SEL_5 */
	stt_uint32 ahb_addr_end_addr_sel_5	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_0_REG                                                                       */
/* EC_ENDIAN_0_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x3 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_CFG_BYTE_0_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x3 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_OFFSET ( 0x00000038 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_0_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_0_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_0_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_0_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_0_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_0_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_0_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_0_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_0_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_0_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_1_REG                                                                       */
/* EC_ENDIAN_1_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_CFG_BYTE_0_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_OFFSET ( 0x0000003C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_1_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_1_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_1_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_1_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_1_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_1_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_1_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_0_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_0_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_0_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_0_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_2_REG                                                                       */
/* EC_ENDIAN_2_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x2 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_CFG_BYTE_1_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x2 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_OFFSET ( 0x00000040 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_2_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_2_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_2_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_2_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_2_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_2_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_2_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_1_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_1_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_1_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_3_REG                                                                       */
/* EC_ENDIAN_3_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_CFG_BYTE_1_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_OFFSET ( 0x00000044 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_3_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_3_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_3_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_3_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_3_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_3_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_3_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_1_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_1_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_1_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_1_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_4_REG                                                                       */
/* EC_ENDIAN_4_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_CFG_BYTE_2_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_OFFSET ( 0x00000048 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_4_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_4_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_4_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_4_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_4_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_4_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_4_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_2_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_2_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_2_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_5_REG                                                                       */
/* EC_ENDIAN_5_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_CFG_BYTE_2_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_OFFSET ( 0x0000004C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_5_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_5_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_5_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_5_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_5_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_5_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_5_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_2_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_2_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_2_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_2_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_6_REG                                                                       */
/* EC_ENDIAN_6_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_R1_DEFAULT_VALUE                                         ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_R1_DEFAULT_VALUE_RESET_VALUE                             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_CFG_BYTE_3_DATA_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_OFFSET ( 0x00000050 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_6_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_6_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_6_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_6_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_6_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_6_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_6_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                            	: 8 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_11_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_11_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_11_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_10_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_10_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_10_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_01_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_01_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_01_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_3_data_add_00_size_8 	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_3_data_add_00_size_32	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_DATA_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_3_data_add_00_size_16	: 2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_DTE ;


/*****************************************************************************************/
/* EC_ENDIAN_7_REG                                                                       */
/* EC_ENDIAN_7_REG                                                                       */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_R1_DEFAULT_VALUE                                       ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_R1_DEFAULT_VALUE_RESET_VALUE                           ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_11_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_10_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_8_DEFAULT_VALUE              ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_16_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_32_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_01_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_8_DEFAULT_VALUE              ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_8_DEFAULT_VALUE_RESET_VALUE  ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_16_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_16_DEFAULT_VALUE_RESET_VALUE ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_32_DEFAULT_VALUE             ( 0x1 )
#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_CFG_BYTE_3_BE_ADD_00_SIZE_32_DEFAULT_VALUE_RESET_VALUE ( 0x1 )


#define CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_OFFSET ( 0x00000054 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_7_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_ENDIAN_7_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_7_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_7_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_7_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_7_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_ENDIAN_7_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* R1 */
	stt_uint32 r1                          	: 20 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_11_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_11_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_11_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_11_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_10_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_10_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_10_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_10_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_01_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_01_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_01_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_01_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_8 */
	stt_uint32 cfg_byte_3_be_add_00_size_8 	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_16 */
	stt_uint32 cfg_byte_3_be_add_00_size_16	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_BYTE_3_BE_ADD_00_SIZE_32 */
	stt_uint32 cfg_byte_3_be_add_00_size_32	: 1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_13_REG                                                                         */
/* EC_CFG_13_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_AHB_COHERENCY_ADD1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_AHB_COHERENCY_ADD1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_OFFSET ( 0x00000058 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_13_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_13_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_13_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_13_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_13_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_13_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_13_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_ADD1 */
	stt_uint32 ahb_coherency_add1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_14_REG                                                                         */
/* EC_CFG_14_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_AHB_COHERENCY_ADD2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_AHB_COHERENCY_ADD2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_OFFSET ( 0x0000005C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_14_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_14_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_14_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_14_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_14_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_14_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_14_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_14_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_14_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_14_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_ADD2 */
	stt_uint32 ahb_coherency_add2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_15_REG                                                                         */
/* EC_CFG_15_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_AHB_COHERENCY_ADD2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_AHB_COHERENCY_ADD2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_OFFSET ( 0x00000060 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_15_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_15_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_15_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_15_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_15_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_15_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_15_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_15_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_15_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_15_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_ADD2 */
	stt_uint32 ahb_coherency_add2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_16_REG                                                                         */
/* EC_CFG_16_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_AHB_COHERENCY_ADD4_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_AHB_COHERENCY_ADD4_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_OFFSET ( 0x00000064 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_16_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_16_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_16_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_16_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_16_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_16_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_16_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_16_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_16_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_16_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_ADD4 */
	stt_uint32 ahb_coherency_add4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_17_REG                                                                         */
/* EC_CFG_17_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_AHB_COHERENCY_MASK1_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_AHB_COHERENCY_MASK1_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_OFFSET ( 0x00000068 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_17_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_17_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_17_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_17_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_17_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_17_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_17_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_17_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_17_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_17_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_MASK1 */
	stt_uint32 ahb_coherency_mask1	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_18_REG                                                                         */
/* EC_CFG_18_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_AHB_COHERENCY_MASK2_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_AHB_COHERENCY_MASK2_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_OFFSET ( 0x0000006C )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_18_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_18_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_18_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_18_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_18_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_18_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_18_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_18_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_18_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_18_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_MASK2 */
	stt_uint32 ahb_coherency_mask2	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_19_REG                                                                         */
/* EC_CFG_19_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_AHB_COHERENCY_MASK3_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_AHB_COHERENCY_MASK3_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_OFFSET ( 0x00000070 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_19_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_19_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_19_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_19_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_19_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_19_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_19_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_19_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_19_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_19_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_MASK3 */
	stt_uint32 ahb_coherency_mask3	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_DTE ;


/*****************************************************************************************/
/* EC_CFG_20_REG                                                                         */
/* EC_CFG_20_REG                                                                         */
/*****************************************************************************************/

#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_AHB_COHERENCY_MASK4_DEFAULT_VALUE             ( 0x0 )
#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_AHB_COHERENCY_MASK4_DEFAULT_VALUE_RESET_VALUE ( 0x0 )


#define CE_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_OFFSET ( 0x00000074 )

#define CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_20_REG_ADDRESS   	( CE_PCIE_REGFILE_0_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_OFFSET )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_20_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_20_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_0_EC2AHB_EC_CFG_20_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_0_EC2AHB_EC_CFG_20_REG_ADDRESS ), (v) )

#define CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_20_REG_ADDRESS   	( CE_PCIE_REGFILE_1_EC2AHB_ADDRESS + CE_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_OFFSET )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_20_REG_READ( r ) 	BL_READ_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_20_REG_ADDRESS ), (r) )
#define BL_PCIE_REGFILE_1_EC2AHB_EC_CFG_20_REG_WRITE( v )	BL_WRITE_32( ( CE_PCIE_REGFILE_1_EC2AHB_EC_CFG_20_REG_ADDRESS ), (v) )


extern stt_uint32 PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_ARRAY [ ] ;

#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_WRITE( i, v )	BL_WRITE_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_ARRAY [ i ] ), (v) )
#define BL_PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_READ( i, v ) 	BL_READ_32( ( PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_ARRAY [ i ] ), (v) )  

typedef struct
{
	/* AHB_COHERENCY_MASK4 */
	stt_uint32 ahb_coherency_mask4	: 32 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_DTE ;


typedef struct
{
	/* ID */
	PCIE_CORE_RC_ID_DTE id __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* STS_CMD_RGSTR */
	PCIE_CORE_RC_STS_CMD_RGSTR_DTE sts_cmd_rgstr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CLS_REV_ID */
	PCIE_CORE_RC_CLS_REV_ID_DTE cls_rev_id __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BIST_HEAD_LAT_CACH */
	PCIE_CORE_RC_BIST_HEAD_LAT_CACH_DTE bist_head_lat_cach __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LT_SP_BUS_N */
	PCIE_CORE_RC_LT_SP_BUS_N_DTE lt_sp_bus_n __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SS_IO_LT_BAS */
	PCIE_CORE_RC_SS_IO_LT_BAS_DTE ss_io_lt_bas __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MEM_LT_BAS */
	PCIE_CORE_RC_MEM_LT_BAS_DTE mem_lt_bas __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PF_MEM_LT_BAS */
	PCIE_CORE_RC_PF_MEM_LT_BAS_DTE pf_mem_lt_bas __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved2 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* IO_LT_BAS */
	PCIE_CORE_RC_IO_LT_BAS_DTE io_lt_bas __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CAPPTR */
	PCIE_CORE_RC_CAPPTR_DTE capptr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved3 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* BRDG_INT */
	PCIE_CORE_RC_BRDG_INT_DTE brdg_int __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CFG_PWR_CAP */
	PCIE_CORE_RC_CFG_PWR_CAP_DTE cfg_pwr_cap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PWR_CSR */
	PCIE_CORE_RC_PWR_CSR_DTE pwr_csr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved4 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PCIE_CAP */
	PCIE_CORE_RC_PCIE_CAP_DTE pcie_cap __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSG_CTR */
	PCIE_CORE_RC_MSG_CTR_DTE msg_ctr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEV_STS_CTRL */
	PCIE_CORE_RC_DEV_STS_CTRL_DTE dev_sts_ctrl __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSI_DATA */
	PCIE_CORE_RC_MSI_DATA_DTE msi_data __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* LNK_STS_CTRL */
	PCIE_CORE_RC_LNK_STS_CTRL_DTE lnk_sts_ctrl __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved5 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLT_STS_CTRL */
	PCIE_CORE_RC_SLT_STS_CTRL_DTE slt_sts_ctrl __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RC_CAP_CTRL */
	PCIE_CORE_RC_RC_CAP_CTRL_DTE rc_cap_ctrl __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved6 [ 64 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSIX_CTR */
	PCIE_CORE_RC_MSIX_CTR_DTE msix_ctr __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved7 [ 152 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PVC_STS_CTRL */
	PCIE_CORE_RC_PVC_STS_CTRL_DTE pvc_sts_ctrl __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved8 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VC_STS_RSV */
	PCIE_CORE_RC_VC_STS_RSV_DTE vc_sts_rsv __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved9 [ 8 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VCR_STS_R1 */
	PCIE_CORE_RC_VCR_STS_R1_DTE vcr_sts_r1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_RC_DTE ;

typedef struct
{
	/* VEN_MSG_DATA_0_REG */
	PCIE_REGFILE_CORE_VEN_MSG_DATA_0_REG_DTE ven_msg_data_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_DATA_1_REG */
	PCIE_REGFILE_CORE_VEN_MSG_DATA_1_REG_DTE ven_msg_data_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_CONTRL_REG_0 */
	PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_0_DTE ven_msg_contrl_reg_0 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* VEN_MSG_CONTRL_REG_1 */
	PCIE_REGFILE_CORE_VEN_MSG_CONTRL_REG_1_DTE ven_msg_contrl_reg_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SYSTEM_REG */
	PCIE_REGFILE_CORE_SYSTEM_REG_DTE system_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_0_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_0_REG_DTE configuration_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_1_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_1_REG_DTE configuration_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_2_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_2_REG_DTE configuration_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_3_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_3_REG_DTE configuration_3_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_4_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_4_REG_DTE configuration_4_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_5_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_5_REG_DTE configuration_5_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_6_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_6_REG_DTE configuration_6_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_7_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_7_REG_DTE configuration_7_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_8_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_8_REG_DTE configuration_8_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_9_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_9_REG_DTE configuration_9_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_10_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_10_REG_DTE configuration_10_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_11_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_11_REG_DTE configuration_11_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* CONFIGURATION_12_REG */
	PCIE_REGFILE_CORE_CONFIGURATION_12_REG_DTE configuration_12_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEBUG_0_REG */
	PCIE_REGFILE_CORE_DEBUG_0_REG_DTE debug_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEBUG_1_REG */
	PCIE_REGFILE_CORE_DEBUG_1_REG_DTE debug_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_CTRL_REG */
	PCIE_REGFILE_CORE_DIAG_CTRL_REG_DTE diag_ctrl_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RTLH_RFC_DATA_REG */
	PCIE_REGFILE_CORE_RTLH_RFC_DATA_REG_DTE rtlh_rfc_data_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INTERRUPT_0_REG */
	PCIE_REGFILE_CORE_INTERRUPT_0_REG_DTE interrupt_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_MASK_REG */
	PCIE_REGFILE_CORE_INT_MASK_REG_DTE int_mask_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* INT_RESET_WIRE */
	PCIE_REGFILE_CORE_INT_RESET_WIRE_DTE int_reset_wire __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSG_PAYLOAD_REG */
	PCIE_REGFILE_CORE_MSG_PAYLOAD_REG_DTE msg_payload_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSG_REQ_ID */
	PCIE_REGFILE_CORE_MSG_REQ_ID_DTE msg_req_id __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_TIMEOUT_REG */
	PCIE_REGFILE_CORE_TRGT_TIMEOUT_REG_DTE trgt_timeout_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* TRGT_LOOKUP_REG */
	PCIE_REGFILE_CORE_TRGT_LOOKUP_REG_DTE trgt_lookup_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* RADM_TIMEOUT_REG */
	PCIE_REGFILE_CORE_RADM_TIMEOUT_REG_DTE radm_timeout_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_RESP_MISC_INFO_REG */
	PCIE_REGFILE_CORE_SLV_RESP_MISC_INFO_REG_DTE slv_resp_misc_info_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ERR_MAP_REG */
	PCIE_REGFILE_CORE_ERR_MAP_REG_DTE err_map_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_REQ_MISC_INFO_REG */
	PCIE_REGFILE_CORE_MSTR_REQ_MISC_INFO_REG_DTE mstr_req_misc_info_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ENDIAN_REG */
	PCIE_REGFILE_CORE_ENDIAN_REG_DTE endian_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* SLV_REQ_MISC_INFO_REG */
	PCIE_REGFILE_CORE_SLV_REQ_MISC_INFO_REG_DTE slv_req_misc_info_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* MSTR_RESP_MISC_INFO_REG */
	PCIE_REGFILE_CORE_MSTR_RESP_MISC_INFO_REG_DTE mstr_resp_misc_info_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* POWER_MANAGMENT_REG */
	PCIE_REGFILE_CORE_POWER_MANAGMENT_REG_DTE power_managment_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ADDRESS_CONTROL_1_REG */
	PCIE_REGFILE_CORE_ADDRESS_CONTROL_1_REG_DTE address_control_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ADDRESS_CONTROL_2_REG */
	PCIE_REGFILE_CORE_ADDRESS_CONTROL_2_REG_DTE address_control_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_ADDR_OUT_1 */
	PCIE_REGFILE_CORE_R_ADDR_OUT_1_DTE r_addr_out_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* R_ADDR_OUT_2 */
	PCIE_REGFILE_CORE_R_ADDR_OUT_2_DTE r_addr_out_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* X_ADDR_OUT_1 */
	PCIE_REGFILE_CORE_X_ADDR_OUT_1_DTE x_addr_out_1 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* X_ADDR_OUT_2 */
	PCIE_REGFILE_CORE_X_ADDR_OUT_2_DTE x_addr_out_2 __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DEBUG_CONTROL */
	PCIE_REGFILE_CORE_DEBUG_CONTROL_DTE debug_control __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* APP_INIT_RST_REG */
	PCIE_REGFILE_CORE_APP_INIT_RST_REG_DTE app_init_rst_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* PHY_CFG_REG */
	PCIE_REGFILE_CORE_PHY_CFG_REG_DTE phy_cfg_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved2 [ 12 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_0_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_0_REG_DTE diag_status_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_1_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_1_REG_DTE diag_status_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_2_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_2_REG_DTE diag_status_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_3_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_3_REG_DTE diag_status_3_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_4_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_4_REG_DTE diag_status_4_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_5_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_5_REG_DTE diag_status_5_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_6_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_6_REG_DTE diag_status_6_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_7_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_7_REG_DTE diag_status_7_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_8_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_8_REG_DTE diag_status_8_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_9_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_9_REG_DTE diag_status_9_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_10_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_10_REG_DTE diag_status_10_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_11_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_11_REG_DTE diag_status_11_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_12_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_12_REG_DTE diag_status_12_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* DIAG_STATUS_13_REG */
	PCIE_REGFILE_CORE_DIAG_STATUS_13_REG_DTE diag_status_13_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_CORE_DTE ;

typedef struct
{
	/* AHB_CFG_0_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_0_REG_DTE ahb_cfg_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_1_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_1_REG_DTE ahb_cfg_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_2_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_2_REG_DTE ahb_cfg_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_3_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_3_REG_DTE ahb_cfg_3_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_4_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_4_REG_DTE ahb_cfg_4_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_5_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_5_REG_DTE ahb_cfg_5_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_6_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_6_REG_DTE ahb_cfg_6_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_7_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_7_REG_DTE ahb_cfg_7_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_8_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_8_REG_DTE ahb_cfg_8_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_9_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_9_REG_DTE ahb_cfg_9_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_10_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_10_REG_DTE ahb_cfg_10_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_11_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_11_REG_DTE ahb_cfg_11_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_12_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_12_REG_DTE ahb_cfg_12_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_13_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_13_REG_DTE ahb_cfg_13_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_14_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_14_REG_DTE ahb_cfg_14_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* AHB_CFG_15_REG */
	PCIE_REGFILE_AHB2EC_AHB_CFG_15_REG_DTE ahb_cfg_15_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_AHB2EC_DTE ;

typedef struct
{
	/* EC_CFG_0_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_0_REG_DTE ec_cfg_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_1_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_1_REG_DTE ec_cfg_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_2_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_2_REG_DTE ec_cfg_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_3_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_3_REG_DTE ec_cfg_3_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_4_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_4_REG_DTE ec_cfg_4_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_5_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_5_REG_DTE ec_cfg_5_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_6_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_6_REG_DTE ec_cfg_6_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_7_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_7_REG_DTE ec_cfg_7_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_8_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_8_REG_DTE ec_cfg_8_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_9_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_9_REG_DTE ec_cfg_9_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 4 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_10_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_10_REG_DTE ec_cfg_10_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_11_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_11_REG_DTE ec_cfg_11_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_12_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_12_REG_DTE ec_cfg_12_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_0_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_0_REG_DTE ec_endian_0_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_1_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_1_REG_DTE ec_endian_1_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_2_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_2_REG_DTE ec_endian_2_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_3_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_3_REG_DTE ec_endian_3_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_4_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_4_REG_DTE ec_endian_4_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_5_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_5_REG_DTE ec_endian_5_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_6_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_6_REG_DTE ec_endian_6_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_ENDIAN_7_REG */
	PCIE_REGFILE_EC2AHB_EC_ENDIAN_7_REG_DTE ec_endian_7_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_13_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_13_REG_DTE ec_cfg_13_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_14_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_14_REG_DTE ec_cfg_14_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_15_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_15_REG_DTE ec_cfg_15_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_16_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_16_REG_DTE ec_cfg_16_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_17_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_17_REG_DTE ec_cfg_17_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_18_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_18_REG_DTE ec_cfg_18_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_19_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_19_REG_DTE ec_cfg_19_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* EC_CFG_20_REG */
	PCIE_REGFILE_EC2AHB_EC_CFG_20_REG_DTE ec_cfg_20_reg __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_EC2AHB_DTE ;

typedef struct
{
	/* rc function */
	PCIE_CORE_RC_DTE rc __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_CORE_DTE ;

typedef struct
{
	/* core function */
	PCIE_REGFILE_CORE_DTE core __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved0 [ 40 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ahb2ec function */
	PCIE_REGFILE_AHB2EC_DTE ahb2ec __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* ec2ahb function */
	PCIE_REGFILE_EC2AHB_DTE ec2ahb __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
 __PACKING_ATTRIBUTE_STRUCT_END__
PCIE_REGFILE_DTE ;

#define CE_PCIE_CORE_NUMBER ( 2 )
#define CE_PCIE_REGFILE_NUMBER ( 2 )
typedef struct
{
	/* CORE */
	PCIE_CORE_DTE core [ CE_PCIE_CORE_NUMBER ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* Reserved */
	stt_uint8 reserved1 [ 8192 ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;

	/* REGFILE */
	PCIE_REGFILE_DTE regfile [ CE_PCIE_REGFILE_NUMBER ] __PACKING_ATTRIBUTE_FIELD_LEVEL__ ;
}
__PACKING_ATTRIBUTE_STRUCT_END__ 
PCIE_DTE ;
#endif /* PCIE_H_INCLUDED */

